// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metamoto/services/controller.proto

#include "metamoto/services/controller.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fstruct_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fstruct_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListValue;
}  // namespace protobuf_google_2fprotobuf_2fstruct_2eproto
namespace protobuf_metamoto_2ftypes_2fresult_5fmetadata_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fresult_5fmetadata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ResultMetadata;
}  // namespace protobuf_metamoto_2ftypes_2fresult_5fmetadata_2eproto
namespace protobuf_metamoto_2ftypes_2fscenario_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fscenario_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Event;
}  // namespace protobuf_metamoto_2ftypes_2fscenario_2eproto
namespace protobuf_metamoto_2ftypes_2fservice_5fdescription_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fservice_5fdescription_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ServiceDescription;
}  // namespace protobuf_metamoto_2ftypes_2fservice_5fdescription_2eproto
namespace protobuf_metamoto_2ftypes_2ftest_5fcase_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2ftest_5fcase_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_TestCase;
}  // namespace protobuf_metamoto_2ftypes_2ftest_5fcase_2eproto
namespace protobuf_metamoto_2ftypes_2fvehicle_5finfo_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fvehicle_5finfo_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_VehicleInfo;
}  // namespace protobuf_metamoto_2ftypes_2fvehicle_5finfo_2eproto
namespace protobuf_metamoto_2ftypes_2fwaypoint_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fwaypoint_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Waypoint;
}  // namespace protobuf_metamoto_2ftypes_2fwaypoint_2eproto
namespace metamoto {
namespace services {
class ControllerSetupRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ControllerSetupRequest>
      _instance;
} _ControllerSetupRequest_default_instance_;
class ControllerSetupReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ControllerSetupReply>
      _instance;
} _ControllerSetupReply_default_instance_;
class ControllerInitializeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ControllerInitializeRequest>
      _instance;
} _ControllerInitializeRequest_default_instance_;
class ControllerInitializeReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ControllerInitializeReply>
      _instance;
} _ControllerInitializeReply_default_instance_;
class ControllerUpdateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ControllerUpdateRequest>
      _instance;
} _ControllerUpdateRequest_default_instance_;
class ControllerUpdateReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ControllerUpdateReply>
      _instance;
} _ControllerUpdateReply_default_instance_;
class ControllerCloseRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ControllerCloseRequest>
      _instance;
} _ControllerCloseRequest_default_instance_;
class ControllerCloseReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ControllerCloseReply>
      _instance;
} _ControllerCloseReply_default_instance_;
}  // namespace services
}  // namespace metamoto
namespace protobuf_metamoto_2fservices_2fcontroller_2eproto {
static void InitDefaultsControllerSetupRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_ControllerSetupRequest_default_instance_;
    new (ptr) ::metamoto::services::ControllerSetupRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::ControllerSetupRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ControllerSetupRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsControllerSetupRequest}, {
      &protobuf_google_2fprotobuf_2fstruct_2eproto::scc_info_ListValue.base,
      &protobuf_metamoto_2ftypes_2fservice_5fdescription_2eproto::scc_info_ServiceDescription.base,
      &protobuf_metamoto_2ftypes_2ftest_5fcase_2eproto::scc_info_TestCase.base,}};

static void InitDefaultsControllerSetupReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_ControllerSetupReply_default_instance_;
    new (ptr) ::metamoto::services::ControllerSetupReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::ControllerSetupReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ControllerSetupReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsControllerSetupReply}, {}};

static void InitDefaultsControllerInitializeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_ControllerInitializeRequest_default_instance_;
    new (ptr) ::metamoto::services::ControllerInitializeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::ControllerInitializeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_ControllerInitializeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsControllerInitializeRequest}, {
      &protobuf_google_2fprotobuf_2fstruct_2eproto::scc_info_ListValue.base,
      &protobuf_metamoto_2ftypes_2fservice_5fdescription_2eproto::scc_info_ServiceDescription.base,
      &protobuf_metamoto_2ftypes_2fwaypoint_2eproto::scc_info_Waypoint.base,
      &protobuf_metamoto_2ftypes_2fvehicle_5finfo_2eproto::scc_info_VehicleInfo.base,
      &protobuf_metamoto_2ftypes_2ftest_5fcase_2eproto::scc_info_TestCase.base,}};

static void InitDefaultsControllerInitializeReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_ControllerInitializeReply_default_instance_;
    new (ptr) ::metamoto::services::ControllerInitializeReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::ControllerInitializeReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ControllerInitializeReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsControllerInitializeReply}, {}};

static void InitDefaultsControllerUpdateRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_ControllerUpdateRequest_default_instance_;
    new (ptr) ::metamoto::services::ControllerUpdateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::ControllerUpdateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ControllerUpdateRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsControllerUpdateRequest}, {
      &protobuf_metamoto_2ftypes_2fscenario_2eproto::scc_info_Event.base,}};

static void InitDefaultsControllerUpdateReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_ControllerUpdateReply_default_instance_;
    new (ptr) ::metamoto::services::ControllerUpdateReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::ControllerUpdateReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ControllerUpdateReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsControllerUpdateReply}, {}};

static void InitDefaultsControllerCloseRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_ControllerCloseRequest_default_instance_;
    new (ptr) ::metamoto::services::ControllerCloseRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::ControllerCloseRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ControllerCloseRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsControllerCloseRequest}, {}};

static void InitDefaultsControllerCloseReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_ControllerCloseReply_default_instance_;
    new (ptr) ::metamoto::services::ControllerCloseReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::ControllerCloseReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ControllerCloseReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsControllerCloseReply}, {
      &protobuf_metamoto_2ftypes_2fresult_5fmetadata_2eproto::scc_info_ResultMetadata.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ControllerSetupRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ControllerSetupReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ControllerInitializeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ControllerInitializeReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ControllerUpdateRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ControllerUpdateReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ControllerCloseRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ControllerCloseReply.base);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ControllerSetupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ControllerSetupRequest, parameters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ControllerSetupRequest, services_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ControllerSetupRequest, test_case_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ControllerSetupReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ControllerInitializeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ControllerInitializeRequest, parameters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ControllerInitializeRequest, publish_topics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ControllerInitializeRequest, results_directory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ControllerInitializeRequest, services_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ControllerInitializeRequest, ego_vehicle_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ControllerInitializeRequest, ego_vehicle_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ControllerInitializeRequest, ego_vehicle_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ControllerInitializeRequest, test_case_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ControllerInitializeReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ControllerInitializeReply, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ControllerInitializeReply, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ControllerInitializeReply, update_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ControllerInitializeReply, update_timeout_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ControllerUpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ControllerUpdateRequest, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ControllerUpdateRequest, last_step_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ControllerUpdateRequest, next_step_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ControllerUpdateRequest, event_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ControllerUpdateReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ControllerUpdateReply, next_update_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ControllerCloseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ControllerCloseReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ControllerCloseReply, results_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::metamoto::services::ControllerSetupRequest)},
  { 8, -1, sizeof(::metamoto::services::ControllerSetupReply)},
  { 13, -1, sizeof(::metamoto::services::ControllerInitializeRequest)},
  { 26, -1, sizeof(::metamoto::services::ControllerInitializeReply)},
  { 35, -1, sizeof(::metamoto::services::ControllerUpdateRequest)},
  { 44, -1, sizeof(::metamoto::services::ControllerUpdateReply)},
  { 50, -1, sizeof(::metamoto::services::ControllerCloseRequest)},
  { 55, -1, sizeof(::metamoto::services::ControllerCloseReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_ControllerSetupRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_ControllerSetupReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_ControllerInitializeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_ControllerInitializeReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_ControllerUpdateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_ControllerUpdateReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_ControllerCloseRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_ControllerCloseReply_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "metamoto/services/controller.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\"metamoto/services/controller.proto\022\021me"
      "tamoto.services\032\034google/protobuf/struct."
      "proto\032$metamoto/types/result_metadata.pr"
      "oto\032\035metamoto/types/scenario.proto\032(meta"
      "moto/types/service_description.proto\032\036me"
      "tamoto/types/test_case.proto\032!metamoto/t"
      "ypes/vehicle_info.proto\032\035metamoto/types/"
      "waypoint.proto\"\250\001\n\026ControllerSetupReques"
      "t\022+\n\nparameters\030\001 \001(\0132\027.google.protobuf."
      "Struct\0224\n\010services\030\002 \003(\0132\".metamoto.type"
      "s.ServiceDescription\022+\n\ttest_case\030\003 \001(\0132"
      "\030.metamoto.types.TestCase\"\026\n\024ControllerS"
      "etupReply\"\343\002\n\033ControllerInitializeReques"
      "t\022+\n\nparameters\030\001 \001(\0132\027.google.protobuf."
      "Struct\022\026\n\016publish_topics\030\002 \003(\t\022\031\n\021result"
      "s_directory\030\003 \001(\t\0224\n\010services\030\004 \003(\0132\".me"
      "tamoto.types.ServiceDescription\0222\n\020ego_v"
      "ehicle_path\030\005 \003(\0132\030.metamoto.types.Waypo"
      "int\0225\n\020ego_vehicle_info\030\006 \001(\0132\033.metamoto"
      ".types.VehicleInfo\022\026\n\016ego_vehicle_id\030\007 \001"
      "(\t\022+\n\ttest_case\030\010 \001(\0132\030.metamoto.types.T"
      "estCase\"g\n\031ControllerInitializeReply\022\014\n\004"
      "name\030\001 \001(\t\022\017\n\007version\030\002 \001(\t\022\023\n\013update_ra"
      "te\030\003 \001(\001\022\026\n\016update_timeout\030\004 \001(\r\"}\n\027Cont"
      "rollerUpdateRequest\022\014\n\004time\030\001 \001(\001\022\026\n\016las"
      "t_step_time\030\002 \001(\001\022\026\n\016next_step_time\030\003 \001("
      "\001\022$\n\005event\030\004 \001(\0132\025.metamoto.types.Event\""
      "1\n\025ControllerUpdateReply\022\030\n\020next_update_"
      "time\030\001 \001(\001\"\030\n\026ControllerCloseRequest\"G\n\024"
      "ControllerCloseReply\022/\n\007results\030\001 \003(\0132\036."
      "metamoto.types.ResultMetadata2\232\003\n\nContro"
      "ller\022]\n\005Setup\022).metamoto.services.Contro"
      "llerSetupRequest\032\'.metamoto.services.Con"
      "trollerSetupReply\"\000\022l\n\nInitialize\022..meta"
      "moto.services.ControllerInitializeReques"
      "t\032,.metamoto.services.ControllerInitiali"
      "zeReply\"\000\022`\n\006Update\022*.metamoto.services."
      "ControllerUpdateRequest\032(.metamoto.servi"
      "ces.ControllerUpdateReply\"\000\022]\n\005Close\022).m"
      "etamoto.services.ControllerCloseRequest\032"
      "\'.metamoto.services.ControllerCloseReply"
      "\"\000B\024\252\002\021Metamoto.Servicesb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1672);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "metamoto/services/controller.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fstruct_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2fresult_5fmetadata_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2fscenario_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2fservice_5fdescription_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2ftest_5fcase_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2fvehicle_5finfo_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2fwaypoint_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_metamoto_2fservices_2fcontroller_2eproto
namespace metamoto {
namespace services {

// ===================================================================

void ControllerSetupRequest::InitAsDefaultInstance() {
  ::metamoto::services::_ControllerSetupRequest_default_instance_._instance.get_mutable()->parameters_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
  ::metamoto::services::_ControllerSetupRequest_default_instance_._instance.get_mutable()->test_case_ = const_cast< ::metamoto::types::TestCase*>(
      ::metamoto::types::TestCase::internal_default_instance());
}
void ControllerSetupRequest::clear_parameters() {
  if (GetArenaNoVirtual() == NULL && parameters_ != NULL) {
    delete parameters_;
  }
  parameters_ = NULL;
}
void ControllerSetupRequest::clear_services() {
  services_.Clear();
}
void ControllerSetupRequest::clear_test_case() {
  if (GetArenaNoVirtual() == NULL && test_case_ != NULL) {
    delete test_case_;
  }
  test_case_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ControllerSetupRequest::kParametersFieldNumber;
const int ControllerSetupRequest::kServicesFieldNumber;
const int ControllerSetupRequest::kTestCaseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ControllerSetupRequest::ControllerSetupRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fcontroller_2eproto::scc_info_ControllerSetupRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.ControllerSetupRequest)
}
ControllerSetupRequest::ControllerSetupRequest(const ControllerSetupRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      services_(from.services_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_parameters()) {
    parameters_ = new ::google::protobuf::Struct(*from.parameters_);
  } else {
    parameters_ = NULL;
  }
  if (from.has_test_case()) {
    test_case_ = new ::metamoto::types::TestCase(*from.test_case_);
  } else {
    test_case_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:metamoto.services.ControllerSetupRequest)
}

void ControllerSetupRequest::SharedCtor() {
  ::memset(&parameters_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&test_case_) -
      reinterpret_cast<char*>(&parameters_)) + sizeof(test_case_));
}

ControllerSetupRequest::~ControllerSetupRequest() {
  // @@protoc_insertion_point(destructor:metamoto.services.ControllerSetupRequest)
  SharedDtor();
}

void ControllerSetupRequest::SharedDtor() {
  if (this != internal_default_instance()) delete parameters_;
  if (this != internal_default_instance()) delete test_case_;
}

void ControllerSetupRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ControllerSetupRequest::descriptor() {
  ::protobuf_metamoto_2fservices_2fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ControllerSetupRequest& ControllerSetupRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fcontroller_2eproto::scc_info_ControllerSetupRequest.base);
  return *internal_default_instance();
}


void ControllerSetupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.ControllerSetupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  services_.Clear();
  if (GetArenaNoVirtual() == NULL && parameters_ != NULL) {
    delete parameters_;
  }
  parameters_ = NULL;
  if (GetArenaNoVirtual() == NULL && test_case_ != NULL) {
    delete test_case_;
  }
  test_case_ = NULL;
  _internal_metadata_.Clear();
}

bool ControllerSetupRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.ControllerSetupRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Struct parameters = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metamoto.types.ServiceDescription services = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_services()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.TestCase test_case = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_test_case()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.ControllerSetupRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.ControllerSetupRequest)
  return false;
#undef DO_
}

void ControllerSetupRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.ControllerSetupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Struct parameters = 1;
  if (this->has_parameters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_parameters(), output);
  }

  // repeated .metamoto.types.ServiceDescription services = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->services_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->services(static_cast<int>(i)),
      output);
  }

  // .metamoto.types.TestCase test_case = 3;
  if (this->has_test_case()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_test_case(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.ControllerSetupRequest)
}

::google::protobuf::uint8* ControllerSetupRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.ControllerSetupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Struct parameters = 1;
  if (this->has_parameters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_parameters(), deterministic, target);
  }

  // repeated .metamoto.types.ServiceDescription services = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->services_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->services(static_cast<int>(i)), deterministic, target);
  }

  // .metamoto.types.TestCase test_case = 3;
  if (this->has_test_case()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_test_case(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.ControllerSetupRequest)
  return target;
}

size_t ControllerSetupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.ControllerSetupRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .metamoto.types.ServiceDescription services = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->services_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->services(static_cast<int>(i)));
    }
  }

  // .google.protobuf.Struct parameters = 1;
  if (this->has_parameters()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *parameters_);
  }

  // .metamoto.types.TestCase test_case = 3;
  if (this->has_test_case()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *test_case_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ControllerSetupRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.ControllerSetupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ControllerSetupRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ControllerSetupRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.ControllerSetupRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.ControllerSetupRequest)
    MergeFrom(*source);
  }
}

void ControllerSetupRequest::MergeFrom(const ControllerSetupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.ControllerSetupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  services_.MergeFrom(from.services_);
  if (from.has_parameters()) {
    mutable_parameters()->::google::protobuf::Struct::MergeFrom(from.parameters());
  }
  if (from.has_test_case()) {
    mutable_test_case()->::metamoto::types::TestCase::MergeFrom(from.test_case());
  }
}

void ControllerSetupRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.ControllerSetupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControllerSetupRequest::CopyFrom(const ControllerSetupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.ControllerSetupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControllerSetupRequest::IsInitialized() const {
  return true;
}

void ControllerSetupRequest::Swap(ControllerSetupRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ControllerSetupRequest::InternalSwap(ControllerSetupRequest* other) {
  using std::swap;
  CastToBase(&services_)->InternalSwap(CastToBase(&other->services_));
  swap(parameters_, other->parameters_);
  swap(test_case_, other->test_case_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ControllerSetupRequest::GetMetadata() const {
  protobuf_metamoto_2fservices_2fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ControllerSetupReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ControllerSetupReply::ControllerSetupReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fcontroller_2eproto::scc_info_ControllerSetupReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.ControllerSetupReply)
}
ControllerSetupReply::ControllerSetupReply(const ControllerSetupReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:metamoto.services.ControllerSetupReply)
}

void ControllerSetupReply::SharedCtor() {
}

ControllerSetupReply::~ControllerSetupReply() {
  // @@protoc_insertion_point(destructor:metamoto.services.ControllerSetupReply)
  SharedDtor();
}

void ControllerSetupReply::SharedDtor() {
}

void ControllerSetupReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ControllerSetupReply::descriptor() {
  ::protobuf_metamoto_2fservices_2fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ControllerSetupReply& ControllerSetupReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fcontroller_2eproto::scc_info_ControllerSetupReply.base);
  return *internal_default_instance();
}


void ControllerSetupReply::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.ControllerSetupReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ControllerSetupReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.ControllerSetupReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.ControllerSetupReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.ControllerSetupReply)
  return false;
#undef DO_
}

void ControllerSetupReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.ControllerSetupReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.ControllerSetupReply)
}

::google::protobuf::uint8* ControllerSetupReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.ControllerSetupReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.ControllerSetupReply)
  return target;
}

size_t ControllerSetupReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.ControllerSetupReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ControllerSetupReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.ControllerSetupReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ControllerSetupReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ControllerSetupReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.ControllerSetupReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.ControllerSetupReply)
    MergeFrom(*source);
  }
}

void ControllerSetupReply::MergeFrom(const ControllerSetupReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.ControllerSetupReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ControllerSetupReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.ControllerSetupReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControllerSetupReply::CopyFrom(const ControllerSetupReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.ControllerSetupReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControllerSetupReply::IsInitialized() const {
  return true;
}

void ControllerSetupReply::Swap(ControllerSetupReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ControllerSetupReply::InternalSwap(ControllerSetupReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ControllerSetupReply::GetMetadata() const {
  protobuf_metamoto_2fservices_2fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ControllerInitializeRequest::InitAsDefaultInstance() {
  ::metamoto::services::_ControllerInitializeRequest_default_instance_._instance.get_mutable()->parameters_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
  ::metamoto::services::_ControllerInitializeRequest_default_instance_._instance.get_mutable()->ego_vehicle_info_ = const_cast< ::metamoto::types::VehicleInfo*>(
      ::metamoto::types::VehicleInfo::internal_default_instance());
  ::metamoto::services::_ControllerInitializeRequest_default_instance_._instance.get_mutable()->test_case_ = const_cast< ::metamoto::types::TestCase*>(
      ::metamoto::types::TestCase::internal_default_instance());
}
void ControllerInitializeRequest::clear_parameters() {
  if (GetArenaNoVirtual() == NULL && parameters_ != NULL) {
    delete parameters_;
  }
  parameters_ = NULL;
}
void ControllerInitializeRequest::clear_services() {
  services_.Clear();
}
void ControllerInitializeRequest::clear_ego_vehicle_path() {
  ego_vehicle_path_.Clear();
}
void ControllerInitializeRequest::clear_ego_vehicle_info() {
  if (GetArenaNoVirtual() == NULL && ego_vehicle_info_ != NULL) {
    delete ego_vehicle_info_;
  }
  ego_vehicle_info_ = NULL;
}
void ControllerInitializeRequest::clear_test_case() {
  if (GetArenaNoVirtual() == NULL && test_case_ != NULL) {
    delete test_case_;
  }
  test_case_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ControllerInitializeRequest::kParametersFieldNumber;
const int ControllerInitializeRequest::kPublishTopicsFieldNumber;
const int ControllerInitializeRequest::kResultsDirectoryFieldNumber;
const int ControllerInitializeRequest::kServicesFieldNumber;
const int ControllerInitializeRequest::kEgoVehiclePathFieldNumber;
const int ControllerInitializeRequest::kEgoVehicleInfoFieldNumber;
const int ControllerInitializeRequest::kEgoVehicleIdFieldNumber;
const int ControllerInitializeRequest::kTestCaseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ControllerInitializeRequest::ControllerInitializeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fcontroller_2eproto::scc_info_ControllerInitializeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.ControllerInitializeRequest)
}
ControllerInitializeRequest::ControllerInitializeRequest(const ControllerInitializeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      publish_topics_(from.publish_topics_),
      services_(from.services_),
      ego_vehicle_path_(from.ego_vehicle_path_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  results_directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.results_directory().size() > 0) {
    results_directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.results_directory_);
  }
  ego_vehicle_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ego_vehicle_id().size() > 0) {
    ego_vehicle_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ego_vehicle_id_);
  }
  if (from.has_parameters()) {
    parameters_ = new ::google::protobuf::Struct(*from.parameters_);
  } else {
    parameters_ = NULL;
  }
  if (from.has_ego_vehicle_info()) {
    ego_vehicle_info_ = new ::metamoto::types::VehicleInfo(*from.ego_vehicle_info_);
  } else {
    ego_vehicle_info_ = NULL;
  }
  if (from.has_test_case()) {
    test_case_ = new ::metamoto::types::TestCase(*from.test_case_);
  } else {
    test_case_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:metamoto.services.ControllerInitializeRequest)
}

void ControllerInitializeRequest::SharedCtor() {
  results_directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ego_vehicle_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&parameters_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&test_case_) -
      reinterpret_cast<char*>(&parameters_)) + sizeof(test_case_));
}

ControllerInitializeRequest::~ControllerInitializeRequest() {
  // @@protoc_insertion_point(destructor:metamoto.services.ControllerInitializeRequest)
  SharedDtor();
}

void ControllerInitializeRequest::SharedDtor() {
  results_directory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ego_vehicle_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete parameters_;
  if (this != internal_default_instance()) delete ego_vehicle_info_;
  if (this != internal_default_instance()) delete test_case_;
}

void ControllerInitializeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ControllerInitializeRequest::descriptor() {
  ::protobuf_metamoto_2fservices_2fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ControllerInitializeRequest& ControllerInitializeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fcontroller_2eproto::scc_info_ControllerInitializeRequest.base);
  return *internal_default_instance();
}


void ControllerInitializeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.ControllerInitializeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  publish_topics_.Clear();
  services_.Clear();
  ego_vehicle_path_.Clear();
  results_directory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ego_vehicle_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && parameters_ != NULL) {
    delete parameters_;
  }
  parameters_ = NULL;
  if (GetArenaNoVirtual() == NULL && ego_vehicle_info_ != NULL) {
    delete ego_vehicle_info_;
  }
  ego_vehicle_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && test_case_ != NULL) {
    delete test_case_;
  }
  test_case_ = NULL;
  _internal_metadata_.Clear();
}

bool ControllerInitializeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.ControllerInitializeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Struct parameters = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string publish_topics = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_publish_topics()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->publish_topics(this->publish_topics_size() - 1).data(),
            static_cast<int>(this->publish_topics(this->publish_topics_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.services.ControllerInitializeRequest.publish_topics"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string results_directory = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_results_directory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->results_directory().data(), static_cast<int>(this->results_directory().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.services.ControllerInitializeRequest.results_directory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metamoto.types.ServiceDescription services = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_services()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metamoto.types.Waypoint ego_vehicle_path = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ego_vehicle_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.VehicleInfo ego_vehicle_info = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ego_vehicle_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ego_vehicle_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ego_vehicle_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ego_vehicle_id().data(), static_cast<int>(this->ego_vehicle_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.services.ControllerInitializeRequest.ego_vehicle_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.TestCase test_case = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_test_case()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.ControllerInitializeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.ControllerInitializeRequest)
  return false;
#undef DO_
}

void ControllerInitializeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.ControllerInitializeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Struct parameters = 1;
  if (this->has_parameters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_parameters(), output);
  }

  // repeated string publish_topics = 2;
  for (int i = 0, n = this->publish_topics_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->publish_topics(i).data(), static_cast<int>(this->publish_topics(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.ControllerInitializeRequest.publish_topics");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->publish_topics(i), output);
  }

  // string results_directory = 3;
  if (this->results_directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->results_directory().data(), static_cast<int>(this->results_directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.ControllerInitializeRequest.results_directory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->results_directory(), output);
  }

  // repeated .metamoto.types.ServiceDescription services = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->services_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->services(static_cast<int>(i)),
      output);
  }

  // repeated .metamoto.types.Waypoint ego_vehicle_path = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ego_vehicle_path_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->ego_vehicle_path(static_cast<int>(i)),
      output);
  }

  // .metamoto.types.VehicleInfo ego_vehicle_info = 6;
  if (this->has_ego_vehicle_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_ego_vehicle_info(), output);
  }

  // string ego_vehicle_id = 7;
  if (this->ego_vehicle_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ego_vehicle_id().data(), static_cast<int>(this->ego_vehicle_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.ControllerInitializeRequest.ego_vehicle_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->ego_vehicle_id(), output);
  }

  // .metamoto.types.TestCase test_case = 8;
  if (this->has_test_case()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_test_case(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.ControllerInitializeRequest)
}

::google::protobuf::uint8* ControllerInitializeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.ControllerInitializeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Struct parameters = 1;
  if (this->has_parameters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_parameters(), deterministic, target);
  }

  // repeated string publish_topics = 2;
  for (int i = 0, n = this->publish_topics_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->publish_topics(i).data(), static_cast<int>(this->publish_topics(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.ControllerInitializeRequest.publish_topics");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->publish_topics(i), target);
  }

  // string results_directory = 3;
  if (this->results_directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->results_directory().data(), static_cast<int>(this->results_directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.ControllerInitializeRequest.results_directory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->results_directory(), target);
  }

  // repeated .metamoto.types.ServiceDescription services = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->services_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->services(static_cast<int>(i)), deterministic, target);
  }

  // repeated .metamoto.types.Waypoint ego_vehicle_path = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ego_vehicle_path_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->ego_vehicle_path(static_cast<int>(i)), deterministic, target);
  }

  // .metamoto.types.VehicleInfo ego_vehicle_info = 6;
  if (this->has_ego_vehicle_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_ego_vehicle_info(), deterministic, target);
  }

  // string ego_vehicle_id = 7;
  if (this->ego_vehicle_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ego_vehicle_id().data(), static_cast<int>(this->ego_vehicle_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.ControllerInitializeRequest.ego_vehicle_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->ego_vehicle_id(), target);
  }

  // .metamoto.types.TestCase test_case = 8;
  if (this->has_test_case()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_test_case(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.ControllerInitializeRequest)
  return target;
}

size_t ControllerInitializeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.ControllerInitializeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string publish_topics = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->publish_topics_size());
  for (int i = 0, n = this->publish_topics_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->publish_topics(i));
  }

  // repeated .metamoto.types.ServiceDescription services = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->services_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->services(static_cast<int>(i)));
    }
  }

  // repeated .metamoto.types.Waypoint ego_vehicle_path = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->ego_vehicle_path_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ego_vehicle_path(static_cast<int>(i)));
    }
  }

  // string results_directory = 3;
  if (this->results_directory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->results_directory());
  }

  // string ego_vehicle_id = 7;
  if (this->ego_vehicle_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ego_vehicle_id());
  }

  // .google.protobuf.Struct parameters = 1;
  if (this->has_parameters()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *parameters_);
  }

  // .metamoto.types.VehicleInfo ego_vehicle_info = 6;
  if (this->has_ego_vehicle_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ego_vehicle_info_);
  }

  // .metamoto.types.TestCase test_case = 8;
  if (this->has_test_case()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *test_case_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ControllerInitializeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.ControllerInitializeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ControllerInitializeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ControllerInitializeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.ControllerInitializeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.ControllerInitializeRequest)
    MergeFrom(*source);
  }
}

void ControllerInitializeRequest::MergeFrom(const ControllerInitializeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.ControllerInitializeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  publish_topics_.MergeFrom(from.publish_topics_);
  services_.MergeFrom(from.services_);
  ego_vehicle_path_.MergeFrom(from.ego_vehicle_path_);
  if (from.results_directory().size() > 0) {

    results_directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.results_directory_);
  }
  if (from.ego_vehicle_id().size() > 0) {

    ego_vehicle_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ego_vehicle_id_);
  }
  if (from.has_parameters()) {
    mutable_parameters()->::google::protobuf::Struct::MergeFrom(from.parameters());
  }
  if (from.has_ego_vehicle_info()) {
    mutable_ego_vehicle_info()->::metamoto::types::VehicleInfo::MergeFrom(from.ego_vehicle_info());
  }
  if (from.has_test_case()) {
    mutable_test_case()->::metamoto::types::TestCase::MergeFrom(from.test_case());
  }
}

void ControllerInitializeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.ControllerInitializeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControllerInitializeRequest::CopyFrom(const ControllerInitializeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.ControllerInitializeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControllerInitializeRequest::IsInitialized() const {
  return true;
}

void ControllerInitializeRequest::Swap(ControllerInitializeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ControllerInitializeRequest::InternalSwap(ControllerInitializeRequest* other) {
  using std::swap;
  publish_topics_.InternalSwap(CastToBase(&other->publish_topics_));
  CastToBase(&services_)->InternalSwap(CastToBase(&other->services_));
  CastToBase(&ego_vehicle_path_)->InternalSwap(CastToBase(&other->ego_vehicle_path_));
  results_directory_.Swap(&other->results_directory_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ego_vehicle_id_.Swap(&other->ego_vehicle_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(parameters_, other->parameters_);
  swap(ego_vehicle_info_, other->ego_vehicle_info_);
  swap(test_case_, other->test_case_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ControllerInitializeRequest::GetMetadata() const {
  protobuf_metamoto_2fservices_2fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ControllerInitializeReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ControllerInitializeReply::kNameFieldNumber;
const int ControllerInitializeReply::kVersionFieldNumber;
const int ControllerInitializeReply::kUpdateRateFieldNumber;
const int ControllerInitializeReply::kUpdateTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ControllerInitializeReply::ControllerInitializeReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fcontroller_2eproto::scc_info_ControllerInitializeReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.ControllerInitializeReply)
}
ControllerInitializeReply::ControllerInitializeReply(const ControllerInitializeReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  ::memcpy(&update_rate_, &from.update_rate_,
    static_cast<size_t>(reinterpret_cast<char*>(&update_timeout_) -
    reinterpret_cast<char*>(&update_rate_)) + sizeof(update_timeout_));
  // @@protoc_insertion_point(copy_constructor:metamoto.services.ControllerInitializeReply)
}

void ControllerInitializeReply::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&update_rate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_timeout_) -
      reinterpret_cast<char*>(&update_rate_)) + sizeof(update_timeout_));
}

ControllerInitializeReply::~ControllerInitializeReply() {
  // @@protoc_insertion_point(destructor:metamoto.services.ControllerInitializeReply)
  SharedDtor();
}

void ControllerInitializeReply::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ControllerInitializeReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ControllerInitializeReply::descriptor() {
  ::protobuf_metamoto_2fservices_2fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ControllerInitializeReply& ControllerInitializeReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fcontroller_2eproto::scc_info_ControllerInitializeReply.base);
  return *internal_default_instance();
}


void ControllerInitializeReply::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.ControllerInitializeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&update_rate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_timeout_) -
      reinterpret_cast<char*>(&update_rate_)) + sizeof(update_timeout_));
  _internal_metadata_.Clear();
}

bool ControllerInitializeReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.ControllerInitializeReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.services.ControllerInitializeReply.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.services.ControllerInitializeReply.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double update_rate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &update_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 update_timeout = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &update_timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.ControllerInitializeReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.ControllerInitializeReply)
  return false;
#undef DO_
}

void ControllerInitializeReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.ControllerInitializeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.ControllerInitializeReply.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.ControllerInitializeReply.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->version(), output);
  }

  // double update_rate = 3;
  if (this->update_rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->update_rate(), output);
  }

  // uint32 update_timeout = 4;
  if (this->update_timeout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->update_timeout(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.ControllerInitializeReply)
}

::google::protobuf::uint8* ControllerInitializeReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.ControllerInitializeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.ControllerInitializeReply.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.ControllerInitializeReply.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->version(), target);
  }

  // double update_rate = 3;
  if (this->update_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->update_rate(), target);
  }

  // uint32 update_timeout = 4;
  if (this->update_timeout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->update_timeout(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.ControllerInitializeReply)
  return target;
}

size_t ControllerInitializeReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.ControllerInitializeReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string version = 2;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // double update_rate = 3;
  if (this->update_rate() != 0) {
    total_size += 1 + 8;
  }

  // uint32 update_timeout = 4;
  if (this->update_timeout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->update_timeout());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ControllerInitializeReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.ControllerInitializeReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ControllerInitializeReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ControllerInitializeReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.ControllerInitializeReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.ControllerInitializeReply)
    MergeFrom(*source);
  }
}

void ControllerInitializeReply::MergeFrom(const ControllerInitializeReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.ControllerInitializeReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.update_rate() != 0) {
    set_update_rate(from.update_rate());
  }
  if (from.update_timeout() != 0) {
    set_update_timeout(from.update_timeout());
  }
}

void ControllerInitializeReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.ControllerInitializeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControllerInitializeReply::CopyFrom(const ControllerInitializeReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.ControllerInitializeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControllerInitializeReply::IsInitialized() const {
  return true;
}

void ControllerInitializeReply::Swap(ControllerInitializeReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ControllerInitializeReply::InternalSwap(ControllerInitializeReply* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(update_rate_, other->update_rate_);
  swap(update_timeout_, other->update_timeout_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ControllerInitializeReply::GetMetadata() const {
  protobuf_metamoto_2fservices_2fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ControllerUpdateRequest::InitAsDefaultInstance() {
  ::metamoto::services::_ControllerUpdateRequest_default_instance_._instance.get_mutable()->event_ = const_cast< ::metamoto::types::Event*>(
      ::metamoto::types::Event::internal_default_instance());
}
void ControllerUpdateRequest::clear_event() {
  if (GetArenaNoVirtual() == NULL && event_ != NULL) {
    delete event_;
  }
  event_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ControllerUpdateRequest::kTimeFieldNumber;
const int ControllerUpdateRequest::kLastStepTimeFieldNumber;
const int ControllerUpdateRequest::kNextStepTimeFieldNumber;
const int ControllerUpdateRequest::kEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ControllerUpdateRequest::ControllerUpdateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fcontroller_2eproto::scc_info_ControllerUpdateRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.ControllerUpdateRequest)
}
ControllerUpdateRequest::ControllerUpdateRequest(const ControllerUpdateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_event()) {
    event_ = new ::metamoto::types::Event(*from.event_);
  } else {
    event_ = NULL;
  }
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&next_step_time_) -
    reinterpret_cast<char*>(&time_)) + sizeof(next_step_time_));
  // @@protoc_insertion_point(copy_constructor:metamoto.services.ControllerUpdateRequest)
}

void ControllerUpdateRequest::SharedCtor() {
  ::memset(&event_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&next_step_time_) -
      reinterpret_cast<char*>(&event_)) + sizeof(next_step_time_));
}

ControllerUpdateRequest::~ControllerUpdateRequest() {
  // @@protoc_insertion_point(destructor:metamoto.services.ControllerUpdateRequest)
  SharedDtor();
}

void ControllerUpdateRequest::SharedDtor() {
  if (this != internal_default_instance()) delete event_;
}

void ControllerUpdateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ControllerUpdateRequest::descriptor() {
  ::protobuf_metamoto_2fservices_2fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ControllerUpdateRequest& ControllerUpdateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fcontroller_2eproto::scc_info_ControllerUpdateRequest.base);
  return *internal_default_instance();
}


void ControllerUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.ControllerUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && event_ != NULL) {
    delete event_;
  }
  event_ = NULL;
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&next_step_time_) -
      reinterpret_cast<char*>(&time_)) + sizeof(next_step_time_));
  _internal_metadata_.Clear();
}

bool ControllerUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.ControllerUpdateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double last_step_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &last_step_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double next_step_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &next_step_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.Event event = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.ControllerUpdateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.ControllerUpdateRequest)
  return false;
#undef DO_
}

void ControllerUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.ControllerUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->time(), output);
  }

  // double last_step_time = 2;
  if (this->last_step_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->last_step_time(), output);
  }

  // double next_step_time = 3;
  if (this->next_step_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->next_step_time(), output);
  }

  // .metamoto.types.Event event = 4;
  if (this->has_event()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_event(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.ControllerUpdateRequest)
}

::google::protobuf::uint8* ControllerUpdateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.ControllerUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->time(), target);
  }

  // double last_step_time = 2;
  if (this->last_step_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->last_step_time(), target);
  }

  // double next_step_time = 3;
  if (this->next_step_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->next_step_time(), target);
  }

  // .metamoto.types.Event event = 4;
  if (this->has_event()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_event(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.ControllerUpdateRequest)
  return target;
}

size_t ControllerUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.ControllerUpdateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .metamoto.types.Event event = 4;
  if (this->has_event()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *event_);
  }

  // double time = 1;
  if (this->time() != 0) {
    total_size += 1 + 8;
  }

  // double last_step_time = 2;
  if (this->last_step_time() != 0) {
    total_size += 1 + 8;
  }

  // double next_step_time = 3;
  if (this->next_step_time() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ControllerUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.ControllerUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ControllerUpdateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ControllerUpdateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.ControllerUpdateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.ControllerUpdateRequest)
    MergeFrom(*source);
  }
}

void ControllerUpdateRequest::MergeFrom(const ControllerUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.ControllerUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_event()) {
    mutable_event()->::metamoto::types::Event::MergeFrom(from.event());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.last_step_time() != 0) {
    set_last_step_time(from.last_step_time());
  }
  if (from.next_step_time() != 0) {
    set_next_step_time(from.next_step_time());
  }
}

void ControllerUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.ControllerUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControllerUpdateRequest::CopyFrom(const ControllerUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.ControllerUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControllerUpdateRequest::IsInitialized() const {
  return true;
}

void ControllerUpdateRequest::Swap(ControllerUpdateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ControllerUpdateRequest::InternalSwap(ControllerUpdateRequest* other) {
  using std::swap;
  swap(event_, other->event_);
  swap(time_, other->time_);
  swap(last_step_time_, other->last_step_time_);
  swap(next_step_time_, other->next_step_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ControllerUpdateRequest::GetMetadata() const {
  protobuf_metamoto_2fservices_2fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ControllerUpdateReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ControllerUpdateReply::kNextUpdateTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ControllerUpdateReply::ControllerUpdateReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fcontroller_2eproto::scc_info_ControllerUpdateReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.ControllerUpdateReply)
}
ControllerUpdateReply::ControllerUpdateReply(const ControllerUpdateReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_update_time_ = from.next_update_time_;
  // @@protoc_insertion_point(copy_constructor:metamoto.services.ControllerUpdateReply)
}

void ControllerUpdateReply::SharedCtor() {
  next_update_time_ = 0;
}

ControllerUpdateReply::~ControllerUpdateReply() {
  // @@protoc_insertion_point(destructor:metamoto.services.ControllerUpdateReply)
  SharedDtor();
}

void ControllerUpdateReply::SharedDtor() {
}

void ControllerUpdateReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ControllerUpdateReply::descriptor() {
  ::protobuf_metamoto_2fservices_2fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ControllerUpdateReply& ControllerUpdateReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fcontroller_2eproto::scc_info_ControllerUpdateReply.base);
  return *internal_default_instance();
}


void ControllerUpdateReply::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.ControllerUpdateReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  next_update_time_ = 0;
  _internal_metadata_.Clear();
}

bool ControllerUpdateReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.ControllerUpdateReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double next_update_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &next_update_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.ControllerUpdateReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.ControllerUpdateReply)
  return false;
#undef DO_
}

void ControllerUpdateReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.ControllerUpdateReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double next_update_time = 1;
  if (this->next_update_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->next_update_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.ControllerUpdateReply)
}

::google::protobuf::uint8* ControllerUpdateReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.ControllerUpdateReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double next_update_time = 1;
  if (this->next_update_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->next_update_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.ControllerUpdateReply)
  return target;
}

size_t ControllerUpdateReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.ControllerUpdateReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double next_update_time = 1;
  if (this->next_update_time() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ControllerUpdateReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.ControllerUpdateReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ControllerUpdateReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ControllerUpdateReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.ControllerUpdateReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.ControllerUpdateReply)
    MergeFrom(*source);
  }
}

void ControllerUpdateReply::MergeFrom(const ControllerUpdateReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.ControllerUpdateReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.next_update_time() != 0) {
    set_next_update_time(from.next_update_time());
  }
}

void ControllerUpdateReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.ControllerUpdateReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControllerUpdateReply::CopyFrom(const ControllerUpdateReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.ControllerUpdateReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControllerUpdateReply::IsInitialized() const {
  return true;
}

void ControllerUpdateReply::Swap(ControllerUpdateReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ControllerUpdateReply::InternalSwap(ControllerUpdateReply* other) {
  using std::swap;
  swap(next_update_time_, other->next_update_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ControllerUpdateReply::GetMetadata() const {
  protobuf_metamoto_2fservices_2fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ControllerCloseRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ControllerCloseRequest::ControllerCloseRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fcontroller_2eproto::scc_info_ControllerCloseRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.ControllerCloseRequest)
}
ControllerCloseRequest::ControllerCloseRequest(const ControllerCloseRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:metamoto.services.ControllerCloseRequest)
}

void ControllerCloseRequest::SharedCtor() {
}

ControllerCloseRequest::~ControllerCloseRequest() {
  // @@protoc_insertion_point(destructor:metamoto.services.ControllerCloseRequest)
  SharedDtor();
}

void ControllerCloseRequest::SharedDtor() {
}

void ControllerCloseRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ControllerCloseRequest::descriptor() {
  ::protobuf_metamoto_2fservices_2fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ControllerCloseRequest& ControllerCloseRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fcontroller_2eproto::scc_info_ControllerCloseRequest.base);
  return *internal_default_instance();
}


void ControllerCloseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.ControllerCloseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ControllerCloseRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.ControllerCloseRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.ControllerCloseRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.ControllerCloseRequest)
  return false;
#undef DO_
}

void ControllerCloseRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.ControllerCloseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.ControllerCloseRequest)
}

::google::protobuf::uint8* ControllerCloseRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.ControllerCloseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.ControllerCloseRequest)
  return target;
}

size_t ControllerCloseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.ControllerCloseRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ControllerCloseRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.ControllerCloseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ControllerCloseRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ControllerCloseRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.ControllerCloseRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.ControllerCloseRequest)
    MergeFrom(*source);
  }
}

void ControllerCloseRequest::MergeFrom(const ControllerCloseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.ControllerCloseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ControllerCloseRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.ControllerCloseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControllerCloseRequest::CopyFrom(const ControllerCloseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.ControllerCloseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControllerCloseRequest::IsInitialized() const {
  return true;
}

void ControllerCloseRequest::Swap(ControllerCloseRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ControllerCloseRequest::InternalSwap(ControllerCloseRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ControllerCloseRequest::GetMetadata() const {
  protobuf_metamoto_2fservices_2fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ControllerCloseReply::InitAsDefaultInstance() {
}
void ControllerCloseReply::clear_results() {
  results_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ControllerCloseReply::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ControllerCloseReply::ControllerCloseReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fcontroller_2eproto::scc_info_ControllerCloseReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.ControllerCloseReply)
}
ControllerCloseReply::ControllerCloseReply(const ControllerCloseReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      results_(from.results_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:metamoto.services.ControllerCloseReply)
}

void ControllerCloseReply::SharedCtor() {
}

ControllerCloseReply::~ControllerCloseReply() {
  // @@protoc_insertion_point(destructor:metamoto.services.ControllerCloseReply)
  SharedDtor();
}

void ControllerCloseReply::SharedDtor() {
}

void ControllerCloseReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ControllerCloseReply::descriptor() {
  ::protobuf_metamoto_2fservices_2fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ControllerCloseReply& ControllerCloseReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fcontroller_2eproto::scc_info_ControllerCloseReply.base);
  return *internal_default_instance();
}


void ControllerCloseReply::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.ControllerCloseReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  _internal_metadata_.Clear();
}

bool ControllerCloseReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.ControllerCloseReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .metamoto.types.ResultMetadata results = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.ControllerCloseReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.ControllerCloseReply)
  return false;
#undef DO_
}

void ControllerCloseReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.ControllerCloseReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .metamoto.types.ResultMetadata results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->results(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.ControllerCloseReply)
}

::google::protobuf::uint8* ControllerCloseReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.ControllerCloseReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .metamoto.types.ResultMetadata results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->results(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.ControllerCloseReply)
  return target;
}

size_t ControllerCloseReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.ControllerCloseReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .metamoto.types.ResultMetadata results = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->results(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ControllerCloseReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.ControllerCloseReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ControllerCloseReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ControllerCloseReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.ControllerCloseReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.ControllerCloseReply)
    MergeFrom(*source);
  }
}

void ControllerCloseReply::MergeFrom(const ControllerCloseReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.ControllerCloseReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
}

void ControllerCloseReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.ControllerCloseReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControllerCloseReply::CopyFrom(const ControllerCloseReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.ControllerCloseReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControllerCloseReply::IsInitialized() const {
  return true;
}

void ControllerCloseReply::Swap(ControllerCloseReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ControllerCloseReply::InternalSwap(ControllerCloseReply* other) {
  using std::swap;
  CastToBase(&results_)->InternalSwap(CastToBase(&other->results_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ControllerCloseReply::GetMetadata() const {
  protobuf_metamoto_2fservices_2fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace services
}  // namespace metamoto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::ControllerSetupRequest* Arena::CreateMaybeMessage< ::metamoto::services::ControllerSetupRequest >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::ControllerSetupRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::ControllerSetupReply* Arena::CreateMaybeMessage< ::metamoto::services::ControllerSetupReply >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::ControllerSetupReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::ControllerInitializeRequest* Arena::CreateMaybeMessage< ::metamoto::services::ControllerInitializeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::ControllerInitializeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::ControllerInitializeReply* Arena::CreateMaybeMessage< ::metamoto::services::ControllerInitializeReply >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::ControllerInitializeReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::ControllerUpdateRequest* Arena::CreateMaybeMessage< ::metamoto::services::ControllerUpdateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::ControllerUpdateRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::ControllerUpdateReply* Arena::CreateMaybeMessage< ::metamoto::services::ControllerUpdateReply >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::ControllerUpdateReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::ControllerCloseRequest* Arena::CreateMaybeMessage< ::metamoto::services::ControllerCloseRequest >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::ControllerCloseRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::ControllerCloseReply* Arena::CreateMaybeMessage< ::metamoto::services::ControllerCloseReply >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::ControllerCloseReply >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
