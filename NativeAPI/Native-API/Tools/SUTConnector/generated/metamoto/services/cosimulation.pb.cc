// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metamoto/services/cosimulation.proto

#include "metamoto/services/cosimulation.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_metamoto_2fmessages_2fdata_5fbus_5fmessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2fmessages_2fdata_5fbus_5fmessage_2eproto ::google::protobuf::internal::SCCInfo<14> scc_info_DataBusMessage;
}  // namespace protobuf_metamoto_2fmessages_2fdata_5fbus_5fmessage_2eproto
namespace protobuf_metamoto_2fmessages_2fground_5ftruth_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2fmessages_2fground_5ftruth_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_GroundTruth;
}  // namespace protobuf_metamoto_2fmessages_2fground_5ftruth_2eproto
namespace protobuf_metamoto_2ftypes_2fego_5fvehicle_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fego_5fvehicle_2eproto ::google::protobuf::internal::SCCInfo<8> scc_info_EgoVehicle;
}  // namespace protobuf_metamoto_2ftypes_2fego_5fvehicle_2eproto
namespace metamoto {
namespace services {
class CosimulationInitializeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CosimulationInitializeRequest>
      _instance;
} _CosimulationInitializeRequest_default_instance_;
class CosimulationInitializeReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CosimulationInitializeReply>
      _instance;
} _CosimulationInitializeReply_default_instance_;
class CosimulationUpdateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CosimulationUpdateRequest>
      _instance;
} _CosimulationUpdateRequest_default_instance_;
class CosimulationUpdateReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CosimulationUpdateReply>
      _instance;
} _CosimulationUpdateReply_default_instance_;
class CosimulationReadRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CosimulationReadRequest>
      _instance;
} _CosimulationReadRequest_default_instance_;
class CosimulationReadReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CosimulationReadReply>
      _instance;
} _CosimulationReadReply_default_instance_;
class CosimulationCloseRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CosimulationCloseRequest>
      _instance;
} _CosimulationCloseRequest_default_instance_;
class CosimulationCloseReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CosimulationCloseReply>
      _instance;
} _CosimulationCloseReply_default_instance_;
}  // namespace services
}  // namespace metamoto
namespace protobuf_metamoto_2fservices_2fcosimulation_2eproto {
static void InitDefaultsCosimulationInitializeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_CosimulationInitializeRequest_default_instance_;
    new (ptr) ::metamoto::services::CosimulationInitializeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::CosimulationInitializeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CosimulationInitializeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCosimulationInitializeRequest}, {
      &protobuf_metamoto_2fmessages_2fground_5ftruth_2eproto::scc_info_GroundTruth.base,}};

static void InitDefaultsCosimulationInitializeReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_CosimulationInitializeReply_default_instance_;
    new (ptr) ::metamoto::services::CosimulationInitializeReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::CosimulationInitializeReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CosimulationInitializeReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCosimulationInitializeReply}, {
      &protobuf_metamoto_2ftypes_2fego_5fvehicle_2eproto::scc_info_EgoVehicle.base,}};

static void InitDefaultsCosimulationUpdateRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_CosimulationUpdateRequest_default_instance_;
    new (ptr) ::metamoto::services::CosimulationUpdateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::CosimulationUpdateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CosimulationUpdateRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCosimulationUpdateRequest}, {
      &protobuf_metamoto_2fmessages_2fground_5ftruth_2eproto::scc_info_GroundTruth.base,}};

static void InitDefaultsCosimulationUpdateReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_CosimulationUpdateReply_default_instance_;
    new (ptr) ::metamoto::services::CosimulationUpdateReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::CosimulationUpdateReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CosimulationUpdateReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCosimulationUpdateReply}, {}};

static void InitDefaultsCosimulationReadRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_CosimulationReadRequest_default_instance_;
    new (ptr) ::metamoto::services::CosimulationReadRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::CosimulationReadRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CosimulationReadRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCosimulationReadRequest}, {}};

static void InitDefaultsCosimulationReadReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_CosimulationReadReply_default_instance_;
    new (ptr) ::metamoto::services::CosimulationReadReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::CosimulationReadReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CosimulationReadReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCosimulationReadReply}, {
      &protobuf_metamoto_2fmessages_2fdata_5fbus_5fmessage_2eproto::scc_info_DataBusMessage.base,}};

static void InitDefaultsCosimulationCloseRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_CosimulationCloseRequest_default_instance_;
    new (ptr) ::metamoto::services::CosimulationCloseRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::CosimulationCloseRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CosimulationCloseRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCosimulationCloseRequest}, {}};

static void InitDefaultsCosimulationCloseReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_CosimulationCloseReply_default_instance_;
    new (ptr) ::metamoto::services::CosimulationCloseReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::CosimulationCloseReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CosimulationCloseReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCosimulationCloseReply}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CosimulationInitializeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CosimulationInitializeReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CosimulationUpdateRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CosimulationUpdateReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CosimulationReadRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CosimulationReadReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CosimulationCloseRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CosimulationCloseReply.base);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::CosimulationInitializeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::CosimulationInitializeRequest, ground_truth_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::CosimulationInitializeReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::CosimulationInitializeReply, ego_vehicles_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::CosimulationUpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::CosimulationUpdateRequest, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::CosimulationUpdateRequest, ground_truth_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::CosimulationUpdateReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::CosimulationReadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::CosimulationReadRequest, ego_vehicle_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::CosimulationReadRequest, topic_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::CosimulationReadReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::CosimulationReadReply, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::CosimulationCloseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::CosimulationCloseRequest, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::CosimulationCloseRequest, description_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::CosimulationCloseReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::metamoto::services::CosimulationInitializeRequest)},
  { 6, -1, sizeof(::metamoto::services::CosimulationInitializeReply)},
  { 12, -1, sizeof(::metamoto::services::CosimulationUpdateRequest)},
  { 19, -1, sizeof(::metamoto::services::CosimulationUpdateReply)},
  { 24, -1, sizeof(::metamoto::services::CosimulationReadRequest)},
  { 31, -1, sizeof(::metamoto::services::CosimulationReadReply)},
  { 37, -1, sizeof(::metamoto::services::CosimulationCloseRequest)},
  { 44, -1, sizeof(::metamoto::services::CosimulationCloseReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_CosimulationInitializeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_CosimulationInitializeReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_CosimulationUpdateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_CosimulationUpdateReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_CosimulationReadRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_CosimulationReadReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_CosimulationCloseRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_CosimulationCloseReply_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "metamoto/services/cosimulation.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n$metamoto/services/cosimulation.proto\022\021"
      "metamoto.services\032$metamoto/messages/gro"
      "und_truth.proto\032(metamoto/messages/data_"
      "bus_message.proto\032 metamoto/types/ego_ve"
      "hicle.proto\032!metamoto/types/enumerations"
      ".proto\"U\n\035CosimulationInitializeRequest\022"
      "4\n\014ground_truth\030\001 \001(\0132\036.metamoto.message"
      "s.GroundTruth\"O\n\033CosimulationInitializeR"
      "eply\0220\n\014ego_vehicles\030\002 \003(\0132\032.metamoto.ty"
      "pes.EgoVehicle\"_\n\031CosimulationUpdateRequ"
      "est\022\014\n\004time\030\001 \001(\001\0224\n\014ground_truth\030\002 \001(\0132"
      "\036.metamoto.messages.GroundTruth\"\031\n\027Cosim"
      "ulationUpdateReply\"@\n\027CosimulationReadRe"
      "quest\022\026\n\016ego_vehicle_id\030\001 \001(\t\022\r\n\005topic\030\002"
      " \001(\t\"K\n\025CosimulationReadReply\0222\n\007message"
      "\030\001 \001(\0132!.metamoto.messages.DataBusMessag"
      "e\"W\n\030CosimulationCloseRequest\022&\n\006action\030"
      "\001 \001(\0162\026.metamoto.types.Action\022\023\n\013descrip"
      "tion\030\002 \001(\t\"\030\n\026CosimulationCloseReply2\251\003\n"
      "\014Cosimulation\022p\n\nInitialize\0220.metamoto.s"
      "ervices.CosimulationInitializeRequest\032.."
      "metamoto.services.CosimulationInitialize"
      "Reply\"\000\022d\n\006Update\022,.metamoto.services.Co"
      "simulationUpdateRequest\032*.metamoto.servi"
      "ces.CosimulationUpdateReply\"\000\022^\n\004Read\022*."
      "metamoto.services.CosimulationReadReques"
      "t\032(.metamoto.services.CosimulationReadRe"
      "ply\"\000\022a\n\005Close\022+.metamoto.services.Cosim"
      "ulationCloseRequest\032).metamoto.services."
      "CosimulationCloseReply\"\000B\024\252\002\021Metamoto.Se"
      "rvicesb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1214);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "metamoto/services/cosimulation.proto", &protobuf_RegisterTypes);
  ::protobuf_metamoto_2fmessages_2fground_5ftruth_2eproto::AddDescriptors();
  ::protobuf_metamoto_2fmessages_2fdata_5fbus_5fmessage_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2fego_5fvehicle_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2fenumerations_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_metamoto_2fservices_2fcosimulation_2eproto
namespace metamoto {
namespace services {

// ===================================================================

void CosimulationInitializeRequest::InitAsDefaultInstance() {
  ::metamoto::services::_CosimulationInitializeRequest_default_instance_._instance.get_mutable()->ground_truth_ = const_cast< ::metamoto::messages::GroundTruth*>(
      ::metamoto::messages::GroundTruth::internal_default_instance());
}
void CosimulationInitializeRequest::clear_ground_truth() {
  if (GetArenaNoVirtual() == NULL && ground_truth_ != NULL) {
    delete ground_truth_;
  }
  ground_truth_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CosimulationInitializeRequest::kGroundTruthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CosimulationInitializeRequest::CosimulationInitializeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fcosimulation_2eproto::scc_info_CosimulationInitializeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.CosimulationInitializeRequest)
}
CosimulationInitializeRequest::CosimulationInitializeRequest(const CosimulationInitializeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ground_truth()) {
    ground_truth_ = new ::metamoto::messages::GroundTruth(*from.ground_truth_);
  } else {
    ground_truth_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:metamoto.services.CosimulationInitializeRequest)
}

void CosimulationInitializeRequest::SharedCtor() {
  ground_truth_ = NULL;
}

CosimulationInitializeRequest::~CosimulationInitializeRequest() {
  // @@protoc_insertion_point(destructor:metamoto.services.CosimulationInitializeRequest)
  SharedDtor();
}

void CosimulationInitializeRequest::SharedDtor() {
  if (this != internal_default_instance()) delete ground_truth_;
}

void CosimulationInitializeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CosimulationInitializeRequest::descriptor() {
  ::protobuf_metamoto_2fservices_2fcosimulation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcosimulation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CosimulationInitializeRequest& CosimulationInitializeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fcosimulation_2eproto::scc_info_CosimulationInitializeRequest.base);
  return *internal_default_instance();
}


void CosimulationInitializeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.CosimulationInitializeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && ground_truth_ != NULL) {
    delete ground_truth_;
  }
  ground_truth_ = NULL;
  _internal_metadata_.Clear();
}

bool CosimulationInitializeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.CosimulationInitializeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .metamoto.messages.GroundTruth ground_truth = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ground_truth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.CosimulationInitializeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.CosimulationInitializeRequest)
  return false;
#undef DO_
}

void CosimulationInitializeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.CosimulationInitializeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .metamoto.messages.GroundTruth ground_truth = 1;
  if (this->has_ground_truth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_ground_truth(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.CosimulationInitializeRequest)
}

::google::protobuf::uint8* CosimulationInitializeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.CosimulationInitializeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .metamoto.messages.GroundTruth ground_truth = 1;
  if (this->has_ground_truth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_ground_truth(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.CosimulationInitializeRequest)
  return target;
}

size_t CosimulationInitializeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.CosimulationInitializeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .metamoto.messages.GroundTruth ground_truth = 1;
  if (this->has_ground_truth()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ground_truth_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CosimulationInitializeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.CosimulationInitializeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CosimulationInitializeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CosimulationInitializeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.CosimulationInitializeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.CosimulationInitializeRequest)
    MergeFrom(*source);
  }
}

void CosimulationInitializeRequest::MergeFrom(const CosimulationInitializeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.CosimulationInitializeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ground_truth()) {
    mutable_ground_truth()->::metamoto::messages::GroundTruth::MergeFrom(from.ground_truth());
  }
}

void CosimulationInitializeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.CosimulationInitializeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CosimulationInitializeRequest::CopyFrom(const CosimulationInitializeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.CosimulationInitializeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CosimulationInitializeRequest::IsInitialized() const {
  return true;
}

void CosimulationInitializeRequest::Swap(CosimulationInitializeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CosimulationInitializeRequest::InternalSwap(CosimulationInitializeRequest* other) {
  using std::swap;
  swap(ground_truth_, other->ground_truth_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CosimulationInitializeRequest::GetMetadata() const {
  protobuf_metamoto_2fservices_2fcosimulation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcosimulation_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CosimulationInitializeReply::InitAsDefaultInstance() {
}
void CosimulationInitializeReply::clear_ego_vehicles() {
  ego_vehicles_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CosimulationInitializeReply::kEgoVehiclesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CosimulationInitializeReply::CosimulationInitializeReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fcosimulation_2eproto::scc_info_CosimulationInitializeReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.CosimulationInitializeReply)
}
CosimulationInitializeReply::CosimulationInitializeReply(const CosimulationInitializeReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ego_vehicles_(from.ego_vehicles_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:metamoto.services.CosimulationInitializeReply)
}

void CosimulationInitializeReply::SharedCtor() {
}

CosimulationInitializeReply::~CosimulationInitializeReply() {
  // @@protoc_insertion_point(destructor:metamoto.services.CosimulationInitializeReply)
  SharedDtor();
}

void CosimulationInitializeReply::SharedDtor() {
}

void CosimulationInitializeReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CosimulationInitializeReply::descriptor() {
  ::protobuf_metamoto_2fservices_2fcosimulation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcosimulation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CosimulationInitializeReply& CosimulationInitializeReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fcosimulation_2eproto::scc_info_CosimulationInitializeReply.base);
  return *internal_default_instance();
}


void CosimulationInitializeReply::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.CosimulationInitializeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ego_vehicles_.Clear();
  _internal_metadata_.Clear();
}

bool CosimulationInitializeReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.CosimulationInitializeReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .metamoto.types.EgoVehicle ego_vehicles = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ego_vehicles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.CosimulationInitializeReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.CosimulationInitializeReply)
  return false;
#undef DO_
}

void CosimulationInitializeReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.CosimulationInitializeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .metamoto.types.EgoVehicle ego_vehicles = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ego_vehicles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->ego_vehicles(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.CosimulationInitializeReply)
}

::google::protobuf::uint8* CosimulationInitializeReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.CosimulationInitializeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .metamoto.types.EgoVehicle ego_vehicles = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ego_vehicles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->ego_vehicles(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.CosimulationInitializeReply)
  return target;
}

size_t CosimulationInitializeReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.CosimulationInitializeReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .metamoto.types.EgoVehicle ego_vehicles = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->ego_vehicles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ego_vehicles(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CosimulationInitializeReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.CosimulationInitializeReply)
  GOOGLE_DCHECK_NE(&from, this);
  const CosimulationInitializeReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CosimulationInitializeReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.CosimulationInitializeReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.CosimulationInitializeReply)
    MergeFrom(*source);
  }
}

void CosimulationInitializeReply::MergeFrom(const CosimulationInitializeReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.CosimulationInitializeReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ego_vehicles_.MergeFrom(from.ego_vehicles_);
}

void CosimulationInitializeReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.CosimulationInitializeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CosimulationInitializeReply::CopyFrom(const CosimulationInitializeReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.CosimulationInitializeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CosimulationInitializeReply::IsInitialized() const {
  return true;
}

void CosimulationInitializeReply::Swap(CosimulationInitializeReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CosimulationInitializeReply::InternalSwap(CosimulationInitializeReply* other) {
  using std::swap;
  CastToBase(&ego_vehicles_)->InternalSwap(CastToBase(&other->ego_vehicles_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CosimulationInitializeReply::GetMetadata() const {
  protobuf_metamoto_2fservices_2fcosimulation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcosimulation_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CosimulationUpdateRequest::InitAsDefaultInstance() {
  ::metamoto::services::_CosimulationUpdateRequest_default_instance_._instance.get_mutable()->ground_truth_ = const_cast< ::metamoto::messages::GroundTruth*>(
      ::metamoto::messages::GroundTruth::internal_default_instance());
}
void CosimulationUpdateRequest::clear_ground_truth() {
  if (GetArenaNoVirtual() == NULL && ground_truth_ != NULL) {
    delete ground_truth_;
  }
  ground_truth_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CosimulationUpdateRequest::kTimeFieldNumber;
const int CosimulationUpdateRequest::kGroundTruthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CosimulationUpdateRequest::CosimulationUpdateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fcosimulation_2eproto::scc_info_CosimulationUpdateRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.CosimulationUpdateRequest)
}
CosimulationUpdateRequest::CosimulationUpdateRequest(const CosimulationUpdateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ground_truth()) {
    ground_truth_ = new ::metamoto::messages::GroundTruth(*from.ground_truth_);
  } else {
    ground_truth_ = NULL;
  }
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:metamoto.services.CosimulationUpdateRequest)
}

void CosimulationUpdateRequest::SharedCtor() {
  ::memset(&ground_truth_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_) -
      reinterpret_cast<char*>(&ground_truth_)) + sizeof(time_));
}

CosimulationUpdateRequest::~CosimulationUpdateRequest() {
  // @@protoc_insertion_point(destructor:metamoto.services.CosimulationUpdateRequest)
  SharedDtor();
}

void CosimulationUpdateRequest::SharedDtor() {
  if (this != internal_default_instance()) delete ground_truth_;
}

void CosimulationUpdateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CosimulationUpdateRequest::descriptor() {
  ::protobuf_metamoto_2fservices_2fcosimulation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcosimulation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CosimulationUpdateRequest& CosimulationUpdateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fcosimulation_2eproto::scc_info_CosimulationUpdateRequest.base);
  return *internal_default_instance();
}


void CosimulationUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.CosimulationUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && ground_truth_ != NULL) {
    delete ground_truth_;
  }
  ground_truth_ = NULL;
  time_ = 0;
  _internal_metadata_.Clear();
}

bool CosimulationUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.CosimulationUpdateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.messages.GroundTruth ground_truth = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ground_truth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.CosimulationUpdateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.CosimulationUpdateRequest)
  return false;
#undef DO_
}

void CosimulationUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.CosimulationUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->time(), output);
  }

  // .metamoto.messages.GroundTruth ground_truth = 2;
  if (this->has_ground_truth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_ground_truth(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.CosimulationUpdateRequest)
}

::google::protobuf::uint8* CosimulationUpdateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.CosimulationUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->time(), target);
  }

  // .metamoto.messages.GroundTruth ground_truth = 2;
  if (this->has_ground_truth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_ground_truth(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.CosimulationUpdateRequest)
  return target;
}

size_t CosimulationUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.CosimulationUpdateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .metamoto.messages.GroundTruth ground_truth = 2;
  if (this->has_ground_truth()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ground_truth_);
  }

  // double time = 1;
  if (this->time() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CosimulationUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.CosimulationUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CosimulationUpdateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CosimulationUpdateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.CosimulationUpdateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.CosimulationUpdateRequest)
    MergeFrom(*source);
  }
}

void CosimulationUpdateRequest::MergeFrom(const CosimulationUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.CosimulationUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ground_truth()) {
    mutable_ground_truth()->::metamoto::messages::GroundTruth::MergeFrom(from.ground_truth());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void CosimulationUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.CosimulationUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CosimulationUpdateRequest::CopyFrom(const CosimulationUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.CosimulationUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CosimulationUpdateRequest::IsInitialized() const {
  return true;
}

void CosimulationUpdateRequest::Swap(CosimulationUpdateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CosimulationUpdateRequest::InternalSwap(CosimulationUpdateRequest* other) {
  using std::swap;
  swap(ground_truth_, other->ground_truth_);
  swap(time_, other->time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CosimulationUpdateRequest::GetMetadata() const {
  protobuf_metamoto_2fservices_2fcosimulation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcosimulation_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CosimulationUpdateReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CosimulationUpdateReply::CosimulationUpdateReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fcosimulation_2eproto::scc_info_CosimulationUpdateReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.CosimulationUpdateReply)
}
CosimulationUpdateReply::CosimulationUpdateReply(const CosimulationUpdateReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:metamoto.services.CosimulationUpdateReply)
}

void CosimulationUpdateReply::SharedCtor() {
}

CosimulationUpdateReply::~CosimulationUpdateReply() {
  // @@protoc_insertion_point(destructor:metamoto.services.CosimulationUpdateReply)
  SharedDtor();
}

void CosimulationUpdateReply::SharedDtor() {
}

void CosimulationUpdateReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CosimulationUpdateReply::descriptor() {
  ::protobuf_metamoto_2fservices_2fcosimulation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcosimulation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CosimulationUpdateReply& CosimulationUpdateReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fcosimulation_2eproto::scc_info_CosimulationUpdateReply.base);
  return *internal_default_instance();
}


void CosimulationUpdateReply::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.CosimulationUpdateReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool CosimulationUpdateReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.CosimulationUpdateReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.CosimulationUpdateReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.CosimulationUpdateReply)
  return false;
#undef DO_
}

void CosimulationUpdateReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.CosimulationUpdateReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.CosimulationUpdateReply)
}

::google::protobuf::uint8* CosimulationUpdateReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.CosimulationUpdateReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.CosimulationUpdateReply)
  return target;
}

size_t CosimulationUpdateReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.CosimulationUpdateReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CosimulationUpdateReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.CosimulationUpdateReply)
  GOOGLE_DCHECK_NE(&from, this);
  const CosimulationUpdateReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CosimulationUpdateReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.CosimulationUpdateReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.CosimulationUpdateReply)
    MergeFrom(*source);
  }
}

void CosimulationUpdateReply::MergeFrom(const CosimulationUpdateReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.CosimulationUpdateReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CosimulationUpdateReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.CosimulationUpdateReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CosimulationUpdateReply::CopyFrom(const CosimulationUpdateReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.CosimulationUpdateReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CosimulationUpdateReply::IsInitialized() const {
  return true;
}

void CosimulationUpdateReply::Swap(CosimulationUpdateReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CosimulationUpdateReply::InternalSwap(CosimulationUpdateReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CosimulationUpdateReply::GetMetadata() const {
  protobuf_metamoto_2fservices_2fcosimulation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcosimulation_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CosimulationReadRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CosimulationReadRequest::kEgoVehicleIdFieldNumber;
const int CosimulationReadRequest::kTopicFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CosimulationReadRequest::CosimulationReadRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fcosimulation_2eproto::scc_info_CosimulationReadRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.CosimulationReadRequest)
}
CosimulationReadRequest::CosimulationReadRequest(const CosimulationReadRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ego_vehicle_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ego_vehicle_id().size() > 0) {
    ego_vehicle_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ego_vehicle_id_);
  }
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.topic().size() > 0) {
    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  // @@protoc_insertion_point(copy_constructor:metamoto.services.CosimulationReadRequest)
}

void CosimulationReadRequest::SharedCtor() {
  ego_vehicle_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CosimulationReadRequest::~CosimulationReadRequest() {
  // @@protoc_insertion_point(destructor:metamoto.services.CosimulationReadRequest)
  SharedDtor();
}

void CosimulationReadRequest::SharedDtor() {
  ego_vehicle_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CosimulationReadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CosimulationReadRequest::descriptor() {
  ::protobuf_metamoto_2fservices_2fcosimulation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcosimulation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CosimulationReadRequest& CosimulationReadRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fcosimulation_2eproto::scc_info_CosimulationReadRequest.base);
  return *internal_default_instance();
}


void CosimulationReadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.CosimulationReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ego_vehicle_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CosimulationReadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.CosimulationReadRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ego_vehicle_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ego_vehicle_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ego_vehicle_id().data(), static_cast<int>(this->ego_vehicle_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.services.CosimulationReadRequest.ego_vehicle_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string topic = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topic().data(), static_cast<int>(this->topic().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.services.CosimulationReadRequest.topic"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.CosimulationReadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.CosimulationReadRequest)
  return false;
#undef DO_
}

void CosimulationReadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.CosimulationReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ego_vehicle_id = 1;
  if (this->ego_vehicle_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ego_vehicle_id().data(), static_cast<int>(this->ego_vehicle_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.CosimulationReadRequest.ego_vehicle_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ego_vehicle_id(), output);
  }

  // string topic = 2;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.CosimulationReadRequest.topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->topic(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.CosimulationReadRequest)
}

::google::protobuf::uint8* CosimulationReadRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.CosimulationReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ego_vehicle_id = 1;
  if (this->ego_vehicle_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ego_vehicle_id().data(), static_cast<int>(this->ego_vehicle_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.CosimulationReadRequest.ego_vehicle_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ego_vehicle_id(), target);
  }

  // string topic = 2;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.CosimulationReadRequest.topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->topic(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.CosimulationReadRequest)
  return target;
}

size_t CosimulationReadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.CosimulationReadRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ego_vehicle_id = 1;
  if (this->ego_vehicle_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ego_vehicle_id());
  }

  // string topic = 2;
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->topic());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CosimulationReadRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.CosimulationReadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CosimulationReadRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CosimulationReadRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.CosimulationReadRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.CosimulationReadRequest)
    MergeFrom(*source);
  }
}

void CosimulationReadRequest::MergeFrom(const CosimulationReadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.CosimulationReadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ego_vehicle_id().size() > 0) {

    ego_vehicle_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ego_vehicle_id_);
  }
  if (from.topic().size() > 0) {

    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
}

void CosimulationReadRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.CosimulationReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CosimulationReadRequest::CopyFrom(const CosimulationReadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.CosimulationReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CosimulationReadRequest::IsInitialized() const {
  return true;
}

void CosimulationReadRequest::Swap(CosimulationReadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CosimulationReadRequest::InternalSwap(CosimulationReadRequest* other) {
  using std::swap;
  ego_vehicle_id_.Swap(&other->ego_vehicle_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  topic_.Swap(&other->topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CosimulationReadRequest::GetMetadata() const {
  protobuf_metamoto_2fservices_2fcosimulation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcosimulation_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CosimulationReadReply::InitAsDefaultInstance() {
  ::metamoto::services::_CosimulationReadReply_default_instance_._instance.get_mutable()->message_ = const_cast< ::metamoto::messages::DataBusMessage*>(
      ::metamoto::messages::DataBusMessage::internal_default_instance());
}
void CosimulationReadReply::clear_message() {
  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CosimulationReadReply::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CosimulationReadReply::CosimulationReadReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fcosimulation_2eproto::scc_info_CosimulationReadReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.CosimulationReadReply)
}
CosimulationReadReply::CosimulationReadReply(const CosimulationReadReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_message()) {
    message_ = new ::metamoto::messages::DataBusMessage(*from.message_);
  } else {
    message_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:metamoto.services.CosimulationReadReply)
}

void CosimulationReadReply::SharedCtor() {
  message_ = NULL;
}

CosimulationReadReply::~CosimulationReadReply() {
  // @@protoc_insertion_point(destructor:metamoto.services.CosimulationReadReply)
  SharedDtor();
}

void CosimulationReadReply::SharedDtor() {
  if (this != internal_default_instance()) delete message_;
}

void CosimulationReadReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CosimulationReadReply::descriptor() {
  ::protobuf_metamoto_2fservices_2fcosimulation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcosimulation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CosimulationReadReply& CosimulationReadReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fcosimulation_2eproto::scc_info_CosimulationReadReply.base);
  return *internal_default_instance();
}


void CosimulationReadReply::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.CosimulationReadReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
  _internal_metadata_.Clear();
}

bool CosimulationReadReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.CosimulationReadReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .metamoto.messages.DataBusMessage message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.CosimulationReadReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.CosimulationReadReply)
  return false;
#undef DO_
}

void CosimulationReadReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.CosimulationReadReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .metamoto.messages.DataBusMessage message = 1;
  if (this->has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.CosimulationReadReply)
}

::google::protobuf::uint8* CosimulationReadReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.CosimulationReadReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .metamoto.messages.DataBusMessage message = 1;
  if (this->has_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_message(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.CosimulationReadReply)
  return target;
}

size_t CosimulationReadReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.CosimulationReadReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .metamoto.messages.DataBusMessage message = 1;
  if (this->has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *message_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CosimulationReadReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.CosimulationReadReply)
  GOOGLE_DCHECK_NE(&from, this);
  const CosimulationReadReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CosimulationReadReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.CosimulationReadReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.CosimulationReadReply)
    MergeFrom(*source);
  }
}

void CosimulationReadReply::MergeFrom(const CosimulationReadReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.CosimulationReadReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_message()) {
    mutable_message()->::metamoto::messages::DataBusMessage::MergeFrom(from.message());
  }
}

void CosimulationReadReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.CosimulationReadReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CosimulationReadReply::CopyFrom(const CosimulationReadReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.CosimulationReadReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CosimulationReadReply::IsInitialized() const {
  return true;
}

void CosimulationReadReply::Swap(CosimulationReadReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CosimulationReadReply::InternalSwap(CosimulationReadReply* other) {
  using std::swap;
  swap(message_, other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CosimulationReadReply::GetMetadata() const {
  protobuf_metamoto_2fservices_2fcosimulation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcosimulation_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CosimulationCloseRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CosimulationCloseRequest::kActionFieldNumber;
const int CosimulationCloseRequest::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CosimulationCloseRequest::CosimulationCloseRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fcosimulation_2eproto::scc_info_CosimulationCloseRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.CosimulationCloseRequest)
}
CosimulationCloseRequest::CosimulationCloseRequest(const CosimulationCloseRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  action_ = from.action_;
  // @@protoc_insertion_point(copy_constructor:metamoto.services.CosimulationCloseRequest)
}

void CosimulationCloseRequest::SharedCtor() {
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_ = 0;
}

CosimulationCloseRequest::~CosimulationCloseRequest() {
  // @@protoc_insertion_point(destructor:metamoto.services.CosimulationCloseRequest)
  SharedDtor();
}

void CosimulationCloseRequest::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CosimulationCloseRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CosimulationCloseRequest::descriptor() {
  ::protobuf_metamoto_2fservices_2fcosimulation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcosimulation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CosimulationCloseRequest& CosimulationCloseRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fcosimulation_2eproto::scc_info_CosimulationCloseRequest.base);
  return *internal_default_instance();
}


void CosimulationCloseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.CosimulationCloseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_ = 0;
  _internal_metadata_.Clear();
}

bool CosimulationCloseRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.CosimulationCloseRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .metamoto.types.Action action = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_action(static_cast< ::metamoto::types::Action >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.services.CosimulationCloseRequest.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.CosimulationCloseRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.CosimulationCloseRequest)
  return false;
#undef DO_
}

void CosimulationCloseRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.CosimulationCloseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .metamoto.types.Action action = 1;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->action(), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.CosimulationCloseRequest.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.CosimulationCloseRequest)
}

::google::protobuf::uint8* CosimulationCloseRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.CosimulationCloseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .metamoto.types.Action action = 1;
  if (this->action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->action(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.CosimulationCloseRequest.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.CosimulationCloseRequest)
  return target;
}

size_t CosimulationCloseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.CosimulationCloseRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // .metamoto.types.Action action = 1;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CosimulationCloseRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.CosimulationCloseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CosimulationCloseRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CosimulationCloseRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.CosimulationCloseRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.CosimulationCloseRequest)
    MergeFrom(*source);
  }
}

void CosimulationCloseRequest::MergeFrom(const CosimulationCloseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.CosimulationCloseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.action() != 0) {
    set_action(from.action());
  }
}

void CosimulationCloseRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.CosimulationCloseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CosimulationCloseRequest::CopyFrom(const CosimulationCloseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.CosimulationCloseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CosimulationCloseRequest::IsInitialized() const {
  return true;
}

void CosimulationCloseRequest::Swap(CosimulationCloseRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CosimulationCloseRequest::InternalSwap(CosimulationCloseRequest* other) {
  using std::swap;
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(action_, other->action_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CosimulationCloseRequest::GetMetadata() const {
  protobuf_metamoto_2fservices_2fcosimulation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcosimulation_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CosimulationCloseReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CosimulationCloseReply::CosimulationCloseReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fcosimulation_2eproto::scc_info_CosimulationCloseReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.CosimulationCloseReply)
}
CosimulationCloseReply::CosimulationCloseReply(const CosimulationCloseReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:metamoto.services.CosimulationCloseReply)
}

void CosimulationCloseReply::SharedCtor() {
}

CosimulationCloseReply::~CosimulationCloseReply() {
  // @@protoc_insertion_point(destructor:metamoto.services.CosimulationCloseReply)
  SharedDtor();
}

void CosimulationCloseReply::SharedDtor() {
}

void CosimulationCloseReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CosimulationCloseReply::descriptor() {
  ::protobuf_metamoto_2fservices_2fcosimulation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcosimulation_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CosimulationCloseReply& CosimulationCloseReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fcosimulation_2eproto::scc_info_CosimulationCloseReply.base);
  return *internal_default_instance();
}


void CosimulationCloseReply::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.CosimulationCloseReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool CosimulationCloseReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.CosimulationCloseReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.CosimulationCloseReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.CosimulationCloseReply)
  return false;
#undef DO_
}

void CosimulationCloseReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.CosimulationCloseReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.CosimulationCloseReply)
}

::google::protobuf::uint8* CosimulationCloseReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.CosimulationCloseReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.CosimulationCloseReply)
  return target;
}

size_t CosimulationCloseReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.CosimulationCloseReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CosimulationCloseReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.CosimulationCloseReply)
  GOOGLE_DCHECK_NE(&from, this);
  const CosimulationCloseReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CosimulationCloseReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.CosimulationCloseReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.CosimulationCloseReply)
    MergeFrom(*source);
  }
}

void CosimulationCloseReply::MergeFrom(const CosimulationCloseReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.CosimulationCloseReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CosimulationCloseReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.CosimulationCloseReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CosimulationCloseReply::CopyFrom(const CosimulationCloseReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.CosimulationCloseReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CosimulationCloseReply::IsInitialized() const {
  return true;
}

void CosimulationCloseReply::Swap(CosimulationCloseReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CosimulationCloseReply::InternalSwap(CosimulationCloseReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CosimulationCloseReply::GetMetadata() const {
  protobuf_metamoto_2fservices_2fcosimulation_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fcosimulation_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace services
}  // namespace metamoto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::CosimulationInitializeRequest* Arena::CreateMaybeMessage< ::metamoto::services::CosimulationInitializeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::CosimulationInitializeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::CosimulationInitializeReply* Arena::CreateMaybeMessage< ::metamoto::services::CosimulationInitializeReply >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::CosimulationInitializeReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::CosimulationUpdateRequest* Arena::CreateMaybeMessage< ::metamoto::services::CosimulationUpdateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::CosimulationUpdateRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::CosimulationUpdateReply* Arena::CreateMaybeMessage< ::metamoto::services::CosimulationUpdateReply >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::CosimulationUpdateReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::CosimulationReadRequest* Arena::CreateMaybeMessage< ::metamoto::services::CosimulationReadRequest >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::CosimulationReadRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::CosimulationReadReply* Arena::CreateMaybeMessage< ::metamoto::services::CosimulationReadReply >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::CosimulationReadReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::CosimulationCloseRequest* Arena::CreateMaybeMessage< ::metamoto::services::CosimulationCloseRequest >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::CosimulationCloseRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::CosimulationCloseReply* Arena::CreateMaybeMessage< ::metamoto::services::CosimulationCloseReply >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::CosimulationCloseReply >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
