// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metamoto/services/image_renderer.proto

#include "metamoto/services/image_renderer.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_metamoto_2ftypes_2fimage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fimage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Image;
}  // namespace protobuf_metamoto_2ftypes_2fimage_2eproto
namespace protobuf_metamoto_2ftypes_2fvector3_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fvector3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vector3;
}  // namespace protobuf_metamoto_2ftypes_2fvector3_2eproto
namespace metamoto {
namespace services {
class ImageRendererSetCameraRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImageRendererSetCameraRequest>
      _instance;
} _ImageRendererSetCameraRequest_default_instance_;
class ImageRendererSetCameraReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImageRendererSetCameraReply>
      _instance;
} _ImageRendererSetCameraReply_default_instance_;
class ImageRendererGetImageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImageRendererGetImageRequest>
      _instance;
} _ImageRendererGetImageRequest_default_instance_;
class ImageRendererGetImageReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImageRendererGetImageReply>
      _instance;
} _ImageRendererGetImageReply_default_instance_;
}  // namespace services
}  // namespace metamoto
namespace protobuf_metamoto_2fservices_2fimage_5frenderer_2eproto {
static void InitDefaultsImageRendererSetCameraRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_ImageRendererSetCameraRequest_default_instance_;
    new (ptr) ::metamoto::services::ImageRendererSetCameraRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::ImageRendererSetCameraRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ImageRendererSetCameraRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsImageRendererSetCameraRequest}, {
      &protobuf_metamoto_2ftypes_2fvector3_2eproto::scc_info_Vector3.base,}};

static void InitDefaultsImageRendererSetCameraReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_ImageRendererSetCameraReply_default_instance_;
    new (ptr) ::metamoto::services::ImageRendererSetCameraReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::ImageRendererSetCameraReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ImageRendererSetCameraReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsImageRendererSetCameraReply}, {}};

static void InitDefaultsImageRendererGetImageRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_ImageRendererGetImageRequest_default_instance_;
    new (ptr) ::metamoto::services::ImageRendererGetImageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::ImageRendererGetImageRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ImageRendererGetImageRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsImageRendererGetImageRequest}, {}};

static void InitDefaultsImageRendererGetImageReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_ImageRendererGetImageReply_default_instance_;
    new (ptr) ::metamoto::services::ImageRendererGetImageReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::ImageRendererGetImageReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ImageRendererGetImageReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsImageRendererGetImageReply}, {
      &protobuf_metamoto_2ftypes_2fimage_2eproto::scc_info_Image.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ImageRendererSetCameraRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImageRendererSetCameraReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImageRendererGetImageRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImageRendererGetImageReply.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ImageRendererSetCameraRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ImageRendererSetCameraRequest, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ImageRendererSetCameraRequest, rotation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ImageRendererSetCameraRequest, frame_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ImageRendererSetCameraRequest, frame_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ImageRendererSetCameraRequest, frame_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ImageRendererSetCameraRequest, vfov_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ImageRendererSetCameraRequest, hdr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ImageRendererSetCameraReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ImageRendererSetCameraReply, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ImageRendererGetImageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ImageRendererGetImageRequest, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ImageRendererGetImageReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ImageRendererGetImageReply, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::ImageRendererGetImageReply, image_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::metamoto::services::ImageRendererSetCameraRequest)},
  { 12, -1, sizeof(::metamoto::services::ImageRendererSetCameraReply)},
  { 18, -1, sizeof(::metamoto::services::ImageRendererGetImageRequest)},
  { 24, -1, sizeof(::metamoto::services::ImageRendererGetImageReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_ImageRendererSetCameraRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_ImageRendererSetCameraReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_ImageRendererGetImageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_ImageRendererGetImageReply_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "metamoto/services/image_renderer.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n&metamoto/services/image_renderer.proto"
      "\022\021metamoto.services\032\034metamoto/types/vect"
      "or3.proto\032\032metamoto/types/image.proto\"\317\001"
      "\n\035ImageRendererSetCameraRequest\022)\n\010posit"
      "ion\030\001 \001(\0132\027.metamoto.types.Vector3\022)\n\010ro"
      "tation\030\002 \001(\0132\027.metamoto.types.Vector3\022\023\n"
      "\013frame_width\030\003 \001(\r\022\024\n\014frame_height\030\004 \001(\r"
      "\022\022\n\nframe_rate\030\005 \001(\001\022\014\n\004vfov\030\006 \001(\001\022\013\n\003hd"
      "r\030\007 \001(\010\")\n\033ImageRendererSetCameraReply\022\n"
      "\n\002id\030\001 \001(\t\"*\n\034ImageRendererGetImageReque"
      "st\022\n\n\002id\030\001 \001(\t\"P\n\032ImageRendererGetImageR"
      "eply\022\014\n\004time\030\001 \001(\001\022$\n\005image\030\002 \001(\0132\025.meta"
      "moto.types.Image2\356\001\n\rImageRenderer\022o\n\tSe"
      "tCamera\0220.metamoto.services.ImageRendere"
      "rSetCameraRequest\032..metamoto.services.Im"
      "ageRendererSetCameraReply\"\000\022l\n\010GetImage\022"
      "/.metamoto.services.ImageRendererGetImag"
      "eRequest\032-.metamoto.services.ImageRender"
      "erGetImageReply\"\000B\024\252\002\021Metamoto.Servicesb"
      "\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 767);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "metamoto/services/image_renderer.proto", &protobuf_RegisterTypes);
  ::protobuf_metamoto_2ftypes_2fvector3_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2fimage_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_metamoto_2fservices_2fimage_5frenderer_2eproto
namespace metamoto {
namespace services {

// ===================================================================

void ImageRendererSetCameraRequest::InitAsDefaultInstance() {
  ::metamoto::services::_ImageRendererSetCameraRequest_default_instance_._instance.get_mutable()->position_ = const_cast< ::metamoto::types::Vector3*>(
      ::metamoto::types::Vector3::internal_default_instance());
  ::metamoto::services::_ImageRendererSetCameraRequest_default_instance_._instance.get_mutable()->rotation_ = const_cast< ::metamoto::types::Vector3*>(
      ::metamoto::types::Vector3::internal_default_instance());
}
void ImageRendererSetCameraRequest::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
}
void ImageRendererSetCameraRequest::clear_rotation() {
  if (GetArenaNoVirtual() == NULL && rotation_ != NULL) {
    delete rotation_;
  }
  rotation_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageRendererSetCameraRequest::kPositionFieldNumber;
const int ImageRendererSetCameraRequest::kRotationFieldNumber;
const int ImageRendererSetCameraRequest::kFrameWidthFieldNumber;
const int ImageRendererSetCameraRequest::kFrameHeightFieldNumber;
const int ImageRendererSetCameraRequest::kFrameRateFieldNumber;
const int ImageRendererSetCameraRequest::kVfovFieldNumber;
const int ImageRendererSetCameraRequest::kHdrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageRendererSetCameraRequest::ImageRendererSetCameraRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fimage_5frenderer_2eproto::scc_info_ImageRendererSetCameraRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.ImageRendererSetCameraRequest)
}
ImageRendererSetCameraRequest::ImageRendererSetCameraRequest(const ImageRendererSetCameraRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::metamoto::types::Vector3(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_rotation()) {
    rotation_ = new ::metamoto::types::Vector3(*from.rotation_);
  } else {
    rotation_ = NULL;
  }
  ::memcpy(&frame_width_, &from.frame_width_,
    static_cast<size_t>(reinterpret_cast<char*>(&hdr_) -
    reinterpret_cast<char*>(&frame_width_)) + sizeof(hdr_));
  // @@protoc_insertion_point(copy_constructor:metamoto.services.ImageRendererSetCameraRequest)
}

void ImageRendererSetCameraRequest::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hdr_) -
      reinterpret_cast<char*>(&position_)) + sizeof(hdr_));
}

ImageRendererSetCameraRequest::~ImageRendererSetCameraRequest() {
  // @@protoc_insertion_point(destructor:metamoto.services.ImageRendererSetCameraRequest)
  SharedDtor();
}

void ImageRendererSetCameraRequest::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete rotation_;
}

void ImageRendererSetCameraRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImageRendererSetCameraRequest::descriptor() {
  ::protobuf_metamoto_2fservices_2fimage_5frenderer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fimage_5frenderer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageRendererSetCameraRequest& ImageRendererSetCameraRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fimage_5frenderer_2eproto::scc_info_ImageRendererSetCameraRequest.base);
  return *internal_default_instance();
}


void ImageRendererSetCameraRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.ImageRendererSetCameraRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  if (GetArenaNoVirtual() == NULL && rotation_ != NULL) {
    delete rotation_;
  }
  rotation_ = NULL;
  ::memset(&frame_width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hdr_) -
      reinterpret_cast<char*>(&frame_width_)) + sizeof(hdr_));
  _internal_metadata_.Clear();
}

bool ImageRendererSetCameraRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.ImageRendererSetCameraRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .metamoto.types.Vector3 position = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.Vector3 rotation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 frame_width = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &frame_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 frame_height = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &frame_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double frame_rate = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &frame_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double vfov = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vfov_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool hdr = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hdr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.ImageRendererSetCameraRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.ImageRendererSetCameraRequest)
  return false;
#undef DO_
}

void ImageRendererSetCameraRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.ImageRendererSetCameraRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .metamoto.types.Vector3 position = 1;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_position(), output);
  }

  // .metamoto.types.Vector3 rotation = 2;
  if (this->has_rotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_rotation(), output);
  }

  // uint32 frame_width = 3;
  if (this->frame_width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->frame_width(), output);
  }

  // uint32 frame_height = 4;
  if (this->frame_height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->frame_height(), output);
  }

  // double frame_rate = 5;
  if (this->frame_rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->frame_rate(), output);
  }

  // double vfov = 6;
  if (this->vfov() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->vfov(), output);
  }

  // bool hdr = 7;
  if (this->hdr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->hdr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.ImageRendererSetCameraRequest)
}

::google::protobuf::uint8* ImageRendererSetCameraRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.ImageRendererSetCameraRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .metamoto.types.Vector3 position = 1;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_position(), deterministic, target);
  }

  // .metamoto.types.Vector3 rotation = 2;
  if (this->has_rotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_rotation(), deterministic, target);
  }

  // uint32 frame_width = 3;
  if (this->frame_width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->frame_width(), target);
  }

  // uint32 frame_height = 4;
  if (this->frame_height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->frame_height(), target);
  }

  // double frame_rate = 5;
  if (this->frame_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->frame_rate(), target);
  }

  // double vfov = 6;
  if (this->vfov() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->vfov(), target);
  }

  // bool hdr = 7;
  if (this->hdr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->hdr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.ImageRendererSetCameraRequest)
  return target;
}

size_t ImageRendererSetCameraRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.ImageRendererSetCameraRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .metamoto.types.Vector3 position = 1;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .metamoto.types.Vector3 rotation = 2;
  if (this->has_rotation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rotation_);
  }

  // uint32 frame_width = 3;
  if (this->frame_width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->frame_width());
  }

  // uint32 frame_height = 4;
  if (this->frame_height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->frame_height());
  }

  // double frame_rate = 5;
  if (this->frame_rate() != 0) {
    total_size += 1 + 8;
  }

  // double vfov = 6;
  if (this->vfov() != 0) {
    total_size += 1 + 8;
  }

  // bool hdr = 7;
  if (this->hdr() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImageRendererSetCameraRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.ImageRendererSetCameraRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageRendererSetCameraRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageRendererSetCameraRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.ImageRendererSetCameraRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.ImageRendererSetCameraRequest)
    MergeFrom(*source);
  }
}

void ImageRendererSetCameraRequest::MergeFrom(const ImageRendererSetCameraRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.ImageRendererSetCameraRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::metamoto::types::Vector3::MergeFrom(from.position());
  }
  if (from.has_rotation()) {
    mutable_rotation()->::metamoto::types::Vector3::MergeFrom(from.rotation());
  }
  if (from.frame_width() != 0) {
    set_frame_width(from.frame_width());
  }
  if (from.frame_height() != 0) {
    set_frame_height(from.frame_height());
  }
  if (from.frame_rate() != 0) {
    set_frame_rate(from.frame_rate());
  }
  if (from.vfov() != 0) {
    set_vfov(from.vfov());
  }
  if (from.hdr() != 0) {
    set_hdr(from.hdr());
  }
}

void ImageRendererSetCameraRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.ImageRendererSetCameraRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageRendererSetCameraRequest::CopyFrom(const ImageRendererSetCameraRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.ImageRendererSetCameraRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageRendererSetCameraRequest::IsInitialized() const {
  return true;
}

void ImageRendererSetCameraRequest::Swap(ImageRendererSetCameraRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImageRendererSetCameraRequest::InternalSwap(ImageRendererSetCameraRequest* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(rotation_, other->rotation_);
  swap(frame_width_, other->frame_width_);
  swap(frame_height_, other->frame_height_);
  swap(frame_rate_, other->frame_rate_);
  swap(vfov_, other->vfov_);
  swap(hdr_, other->hdr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImageRendererSetCameraRequest::GetMetadata() const {
  protobuf_metamoto_2fservices_2fimage_5frenderer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fimage_5frenderer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImageRendererSetCameraReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageRendererSetCameraReply::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageRendererSetCameraReply::ImageRendererSetCameraReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fimage_5frenderer_2eproto::scc_info_ImageRendererSetCameraReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.ImageRendererSetCameraReply)
}
ImageRendererSetCameraReply::ImageRendererSetCameraReply(const ImageRendererSetCameraReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:metamoto.services.ImageRendererSetCameraReply)
}

void ImageRendererSetCameraReply::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ImageRendererSetCameraReply::~ImageRendererSetCameraReply() {
  // @@protoc_insertion_point(destructor:metamoto.services.ImageRendererSetCameraReply)
  SharedDtor();
}

void ImageRendererSetCameraReply::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ImageRendererSetCameraReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImageRendererSetCameraReply::descriptor() {
  ::protobuf_metamoto_2fservices_2fimage_5frenderer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fimage_5frenderer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageRendererSetCameraReply& ImageRendererSetCameraReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fimage_5frenderer_2eproto::scc_info_ImageRendererSetCameraReply.base);
  return *internal_default_instance();
}


void ImageRendererSetCameraReply::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.ImageRendererSetCameraReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ImageRendererSetCameraReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.ImageRendererSetCameraReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.services.ImageRendererSetCameraReply.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.ImageRendererSetCameraReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.ImageRendererSetCameraReply)
  return false;
#undef DO_
}

void ImageRendererSetCameraReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.ImageRendererSetCameraReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.ImageRendererSetCameraReply.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.ImageRendererSetCameraReply)
}

::google::protobuf::uint8* ImageRendererSetCameraReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.ImageRendererSetCameraReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.ImageRendererSetCameraReply.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.ImageRendererSetCameraReply)
  return target;
}

size_t ImageRendererSetCameraReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.ImageRendererSetCameraReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImageRendererSetCameraReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.ImageRendererSetCameraReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageRendererSetCameraReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageRendererSetCameraReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.ImageRendererSetCameraReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.ImageRendererSetCameraReply)
    MergeFrom(*source);
  }
}

void ImageRendererSetCameraReply::MergeFrom(const ImageRendererSetCameraReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.ImageRendererSetCameraReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void ImageRendererSetCameraReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.ImageRendererSetCameraReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageRendererSetCameraReply::CopyFrom(const ImageRendererSetCameraReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.ImageRendererSetCameraReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageRendererSetCameraReply::IsInitialized() const {
  return true;
}

void ImageRendererSetCameraReply::Swap(ImageRendererSetCameraReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImageRendererSetCameraReply::InternalSwap(ImageRendererSetCameraReply* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImageRendererSetCameraReply::GetMetadata() const {
  protobuf_metamoto_2fservices_2fimage_5frenderer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fimage_5frenderer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImageRendererGetImageRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageRendererGetImageRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageRendererGetImageRequest::ImageRendererGetImageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fimage_5frenderer_2eproto::scc_info_ImageRendererGetImageRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.ImageRendererGetImageRequest)
}
ImageRendererGetImageRequest::ImageRendererGetImageRequest(const ImageRendererGetImageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:metamoto.services.ImageRendererGetImageRequest)
}

void ImageRendererGetImageRequest::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ImageRendererGetImageRequest::~ImageRendererGetImageRequest() {
  // @@protoc_insertion_point(destructor:metamoto.services.ImageRendererGetImageRequest)
  SharedDtor();
}

void ImageRendererGetImageRequest::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ImageRendererGetImageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImageRendererGetImageRequest::descriptor() {
  ::protobuf_metamoto_2fservices_2fimage_5frenderer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fimage_5frenderer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageRendererGetImageRequest& ImageRendererGetImageRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fimage_5frenderer_2eproto::scc_info_ImageRendererGetImageRequest.base);
  return *internal_default_instance();
}


void ImageRendererGetImageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.ImageRendererGetImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ImageRendererGetImageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.ImageRendererGetImageRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.services.ImageRendererGetImageRequest.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.ImageRendererGetImageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.ImageRendererGetImageRequest)
  return false;
#undef DO_
}

void ImageRendererGetImageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.ImageRendererGetImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.ImageRendererGetImageRequest.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.ImageRendererGetImageRequest)
}

::google::protobuf::uint8* ImageRendererGetImageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.ImageRendererGetImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.ImageRendererGetImageRequest.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.ImageRendererGetImageRequest)
  return target;
}

size_t ImageRendererGetImageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.ImageRendererGetImageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImageRendererGetImageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.ImageRendererGetImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageRendererGetImageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageRendererGetImageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.ImageRendererGetImageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.ImageRendererGetImageRequest)
    MergeFrom(*source);
  }
}

void ImageRendererGetImageRequest::MergeFrom(const ImageRendererGetImageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.ImageRendererGetImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void ImageRendererGetImageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.ImageRendererGetImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageRendererGetImageRequest::CopyFrom(const ImageRendererGetImageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.ImageRendererGetImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageRendererGetImageRequest::IsInitialized() const {
  return true;
}

void ImageRendererGetImageRequest::Swap(ImageRendererGetImageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImageRendererGetImageRequest::InternalSwap(ImageRendererGetImageRequest* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImageRendererGetImageRequest::GetMetadata() const {
  protobuf_metamoto_2fservices_2fimage_5frenderer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fimage_5frenderer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImageRendererGetImageReply::InitAsDefaultInstance() {
  ::metamoto::services::_ImageRendererGetImageReply_default_instance_._instance.get_mutable()->image_ = const_cast< ::metamoto::types::Image*>(
      ::metamoto::types::Image::internal_default_instance());
}
void ImageRendererGetImageReply::clear_image() {
  if (GetArenaNoVirtual() == NULL && image_ != NULL) {
    delete image_;
  }
  image_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageRendererGetImageReply::kTimeFieldNumber;
const int ImageRendererGetImageReply::kImageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageRendererGetImageReply::ImageRendererGetImageReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fimage_5frenderer_2eproto::scc_info_ImageRendererGetImageReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.ImageRendererGetImageReply)
}
ImageRendererGetImageReply::ImageRendererGetImageReply(const ImageRendererGetImageReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_image()) {
    image_ = new ::metamoto::types::Image(*from.image_);
  } else {
    image_ = NULL;
  }
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:metamoto.services.ImageRendererGetImageReply)
}

void ImageRendererGetImageReply::SharedCtor() {
  ::memset(&image_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_) -
      reinterpret_cast<char*>(&image_)) + sizeof(time_));
}

ImageRendererGetImageReply::~ImageRendererGetImageReply() {
  // @@protoc_insertion_point(destructor:metamoto.services.ImageRendererGetImageReply)
  SharedDtor();
}

void ImageRendererGetImageReply::SharedDtor() {
  if (this != internal_default_instance()) delete image_;
}

void ImageRendererGetImageReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImageRendererGetImageReply::descriptor() {
  ::protobuf_metamoto_2fservices_2fimage_5frenderer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fimage_5frenderer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageRendererGetImageReply& ImageRendererGetImageReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fimage_5frenderer_2eproto::scc_info_ImageRendererGetImageReply.base);
  return *internal_default_instance();
}


void ImageRendererGetImageReply::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.ImageRendererGetImageReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && image_ != NULL) {
    delete image_;
  }
  image_ = NULL;
  time_ = 0;
  _internal_metadata_.Clear();
}

bool ImageRendererGetImageReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.ImageRendererGetImageReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.Image image = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.ImageRendererGetImageReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.ImageRendererGetImageReply)
  return false;
#undef DO_
}

void ImageRendererGetImageReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.ImageRendererGetImageReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->time(), output);
  }

  // .metamoto.types.Image image = 2;
  if (this->has_image()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_image(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.ImageRendererGetImageReply)
}

::google::protobuf::uint8* ImageRendererGetImageReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.ImageRendererGetImageReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->time(), target);
  }

  // .metamoto.types.Image image = 2;
  if (this->has_image()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_image(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.ImageRendererGetImageReply)
  return target;
}

size_t ImageRendererGetImageReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.ImageRendererGetImageReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .metamoto.types.Image image = 2;
  if (this->has_image()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *image_);
  }

  // double time = 1;
  if (this->time() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImageRendererGetImageReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.ImageRendererGetImageReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageRendererGetImageReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageRendererGetImageReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.ImageRendererGetImageReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.ImageRendererGetImageReply)
    MergeFrom(*source);
  }
}

void ImageRendererGetImageReply::MergeFrom(const ImageRendererGetImageReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.ImageRendererGetImageReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_image()) {
    mutable_image()->::metamoto::types::Image::MergeFrom(from.image());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void ImageRendererGetImageReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.ImageRendererGetImageReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageRendererGetImageReply::CopyFrom(const ImageRendererGetImageReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.ImageRendererGetImageReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageRendererGetImageReply::IsInitialized() const {
  return true;
}

void ImageRendererGetImageReply::Swap(ImageRendererGetImageReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImageRendererGetImageReply::InternalSwap(ImageRendererGetImageReply* other) {
  using std::swap;
  swap(image_, other->image_);
  swap(time_, other->time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImageRendererGetImageReply::GetMetadata() const {
  protobuf_metamoto_2fservices_2fimage_5frenderer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fimage_5frenderer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace services
}  // namespace metamoto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::ImageRendererSetCameraRequest* Arena::CreateMaybeMessage< ::metamoto::services::ImageRendererSetCameraRequest >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::ImageRendererSetCameraRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::ImageRendererSetCameraReply* Arena::CreateMaybeMessage< ::metamoto::services::ImageRendererSetCameraReply >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::ImageRendererSetCameraReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::ImageRendererGetImageRequest* Arena::CreateMaybeMessage< ::metamoto::services::ImageRendererGetImageRequest >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::ImageRendererGetImageRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::ImageRendererGetImageReply* Arena::CreateMaybeMessage< ::metamoto::services::ImageRendererGetImageReply >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::ImageRendererGetImageReply >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
