// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metamoto/services/data_bus.proto

#include "metamoto/services/data_bus.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_metamoto_2fmessages_2fdata_5fbus_5fmessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2fmessages_2fdata_5fbus_5fmessage_2eproto ::google::protobuf::internal::SCCInfo<14> scc_info_DataBusMessage;
}  // namespace protobuf_metamoto_2fmessages_2fdata_5fbus_5fmessage_2eproto
namespace protobuf_metamoto_2ftypes_2fnormal_5fdistribution_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fnormal_5fdistribution_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NormalDistribution;
}  // namespace protobuf_metamoto_2ftypes_2fnormal_5fdistribution_2eproto
namespace metamoto {
namespace services {
class DataBusPublishRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataBusPublishRequest>
      _instance;
} _DataBusPublishRequest_default_instance_;
class DataBusPublishReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataBusPublishReply>
      _instance;
} _DataBusPublishReply_default_instance_;
class DataBusSubscribeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataBusSubscribeRequest>
      _instance;
} _DataBusSubscribeRequest_default_instance_;
class DataBusSubscribeReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataBusSubscribeReply>
      _instance;
} _DataBusSubscribeReply_default_instance_;
class DataBusWriteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataBusWriteRequest>
      _instance;
} _DataBusWriteRequest_default_instance_;
class DataBusWriteReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataBusWriteReply>
      _instance;
} _DataBusWriteReply_default_instance_;
class DataBusReadRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataBusReadRequest>
      _instance;
} _DataBusReadRequest_default_instance_;
class DataBusReadReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataBusReadReply>
      _instance;
} _DataBusReadReply_default_instance_;
class DataBusReadAllRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataBusReadAllRequest>
      _instance;
} _DataBusReadAllRequest_default_instance_;
class DataBusReadAllReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataBusReadAllReply>
      _instance;
} _DataBusReadAllReply_default_instance_;
class DataBusReadLastRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataBusReadLastRequest>
      _instance;
} _DataBusReadLastRequest_default_instance_;
class DataBusReadLastReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataBusReadLastReply>
      _instance;
} _DataBusReadLastReply_default_instance_;
}  // namespace services
}  // namespace metamoto
namespace protobuf_metamoto_2fservices_2fdata_5fbus_2eproto {
static void InitDefaultsDataBusPublishRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_DataBusPublishRequest_default_instance_;
    new (ptr) ::metamoto::services::DataBusPublishRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::DataBusPublishRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DataBusPublishRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDataBusPublishRequest}, {
      &protobuf_metamoto_2ftypes_2fnormal_5fdistribution_2eproto::scc_info_NormalDistribution.base,}};

static void InitDefaultsDataBusPublishReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_DataBusPublishReply_default_instance_;
    new (ptr) ::metamoto::services::DataBusPublishReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::DataBusPublishReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DataBusPublishReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDataBusPublishReply}, {}};

static void InitDefaultsDataBusSubscribeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_DataBusSubscribeRequest_default_instance_;
    new (ptr) ::metamoto::services::DataBusSubscribeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::DataBusSubscribeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DataBusSubscribeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDataBusSubscribeRequest}, {
      &protobuf_metamoto_2ftypes_2fnormal_5fdistribution_2eproto::scc_info_NormalDistribution.base,}};

static void InitDefaultsDataBusSubscribeReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_DataBusSubscribeReply_default_instance_;
    new (ptr) ::metamoto::services::DataBusSubscribeReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::DataBusSubscribeReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DataBusSubscribeReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDataBusSubscribeReply}, {}};

static void InitDefaultsDataBusWriteRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_DataBusWriteRequest_default_instance_;
    new (ptr) ::metamoto::services::DataBusWriteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::DataBusWriteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DataBusWriteRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDataBusWriteRequest}, {
      &protobuf_metamoto_2fmessages_2fdata_5fbus_5fmessage_2eproto::scc_info_DataBusMessage.base,}};

static void InitDefaultsDataBusWriteReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_DataBusWriteReply_default_instance_;
    new (ptr) ::metamoto::services::DataBusWriteReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::DataBusWriteReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DataBusWriteReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDataBusWriteReply}, {}};

static void InitDefaultsDataBusReadRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_DataBusReadRequest_default_instance_;
    new (ptr) ::metamoto::services::DataBusReadRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::DataBusReadRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DataBusReadRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDataBusReadRequest}, {}};

static void InitDefaultsDataBusReadReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_DataBusReadReply_default_instance_;
    new (ptr) ::metamoto::services::DataBusReadReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::DataBusReadReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DataBusReadReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDataBusReadReply}, {
      &protobuf_metamoto_2fmessages_2fdata_5fbus_5fmessage_2eproto::scc_info_DataBusMessage.base,}};

static void InitDefaultsDataBusReadAllRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_DataBusReadAllRequest_default_instance_;
    new (ptr) ::metamoto::services::DataBusReadAllRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::DataBusReadAllRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DataBusReadAllRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDataBusReadAllRequest}, {}};

static void InitDefaultsDataBusReadAllReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_DataBusReadAllReply_default_instance_;
    new (ptr) ::metamoto::services::DataBusReadAllReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::DataBusReadAllReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DataBusReadAllReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDataBusReadAllReply}, {
      &protobuf_metamoto_2fmessages_2fdata_5fbus_5fmessage_2eproto::scc_info_DataBusMessage.base,}};

static void InitDefaultsDataBusReadLastRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_DataBusReadLastRequest_default_instance_;
    new (ptr) ::metamoto::services::DataBusReadLastRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::DataBusReadLastRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DataBusReadLastRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDataBusReadLastRequest}, {}};

static void InitDefaultsDataBusReadLastReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_DataBusReadLastReply_default_instance_;
    new (ptr) ::metamoto::services::DataBusReadLastReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::DataBusReadLastReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DataBusReadLastReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDataBusReadLastReply}, {
      &protobuf_metamoto_2fmessages_2fdata_5fbus_5fmessage_2eproto::scc_info_DataBusMessage.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_DataBusPublishRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataBusPublishReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataBusSubscribeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataBusSubscribeReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataBusWriteRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataBusWriteReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataBusReadRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataBusReadReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataBusReadAllRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataBusReadAllReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataBusReadLastRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataBusReadLastReply.base);
}

::google::protobuf::Metadata file_level_metadata[12];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusPublishRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusPublishRequest, topic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusPublishRequest, writer_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusPublishRequest, latency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusPublishRequest, ego_vehicle_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusPublishReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusSubscribeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusSubscribeRequest, topic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusSubscribeRequest, reader_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusSubscribeRequest, latency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusSubscribeRequest, ego_vehicle_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusSubscribeReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusWriteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusWriteRequest, topic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusWriteRequest, writer_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusWriteRequest, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusWriteRequest, ego_vehicle_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusWriteReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusReadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusReadRequest, topic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusReadRequest, reader_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusReadRequest, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusReadRequest, ego_vehicle_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusReadReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusReadReply, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusReadAllRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusReadAllRequest, topic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusReadAllRequest, reader_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusReadAllRequest, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusReadAllRequest, ego_vehicle_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusReadAllReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusReadAllReply, messages_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusReadLastRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusReadLastRequest, topic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusReadLastRequest, reader_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusReadLastRequest, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusReadLastRequest, ego_vehicle_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusReadLastReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::DataBusReadLastReply, message_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::metamoto::services::DataBusPublishRequest)},
  { 9, -1, sizeof(::metamoto::services::DataBusPublishReply)},
  { 14, -1, sizeof(::metamoto::services::DataBusSubscribeRequest)},
  { 23, -1, sizeof(::metamoto::services::DataBusSubscribeReply)},
  { 28, -1, sizeof(::metamoto::services::DataBusWriteRequest)},
  { 37, -1, sizeof(::metamoto::services::DataBusWriteReply)},
  { 42, -1, sizeof(::metamoto::services::DataBusReadRequest)},
  { 51, -1, sizeof(::metamoto::services::DataBusReadReply)},
  { 57, -1, sizeof(::metamoto::services::DataBusReadAllRequest)},
  { 66, -1, sizeof(::metamoto::services::DataBusReadAllReply)},
  { 72, -1, sizeof(::metamoto::services::DataBusReadLastRequest)},
  { 81, -1, sizeof(::metamoto::services::DataBusReadLastReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_DataBusPublishRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_DataBusPublishReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_DataBusSubscribeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_DataBusSubscribeReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_DataBusWriteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_DataBusWriteReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_DataBusReadRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_DataBusReadReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_DataBusReadAllRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_DataBusReadAllReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_DataBusReadLastRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_DataBusReadLastReply_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "metamoto/services/data_bus.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n metamoto/services/data_bus.proto\022\021meta"
      "moto.services\032(metamoto/messages/data_bu"
      "s_message.proto\032(metamoto/types/normal_d"
      "istribution.proto\"\210\001\n\025DataBusPublishRequ"
      "est\022\r\n\005topic\030\001 \001(\t\022\023\n\013writer_name\030\002 \001(\t\022"
      "3\n\007latency\030\003 \001(\0132\".metamoto.types.Normal"
      "Distribution\022\026\n\016ego_vehicle_id\030\004 \001(\t\"\025\n\023"
      "DataBusPublishReply\"\212\001\n\027DataBusSubscribe"
      "Request\022\r\n\005topic\030\001 \001(\t\022\023\n\013reader_name\030\002 "
      "\001(\t\0223\n\007latency\030\003 \001(\0132\".metamoto.types.No"
      "rmalDistribution\022\026\n\016ego_vehicle_id\030\004 \001(\t"
      "\"\027\n\025DataBusSubscribeReply\"\205\001\n\023DataBusWri"
      "teRequest\022\r\n\005topic\030\001 \001(\t\022\023\n\013writer_name\030"
      "\002 \001(\t\0222\n\007message\030\003 \001(\0132!.metamoto.messag"
      "es.DataBusMessage\022\026\n\016ego_vehicle_id\030\004 \001("
      "\t\"\023\n\021DataBusWriteReply\"^\n\022DataBusReadReq"
      "uest\022\r\n\005topic\030\001 \001(\t\022\023\n\013reader_name\030\002 \001(\t"
      "\022\014\n\004time\030\003 \001(\001\022\026\n\016ego_vehicle_id\030\004 \001(\t\"F"
      "\n\020DataBusReadReply\0222\n\007message\030\001 \001(\0132!.me"
      "tamoto.messages.DataBusMessage\"a\n\025DataBu"
      "sReadAllRequest\022\r\n\005topic\030\001 \001(\t\022\023\n\013reader"
      "_name\030\002 \001(\t\022\014\n\004time\030\003 \001(\001\022\026\n\016ego_vehicle"
      "_id\030\004 \001(\t\"J\n\023DataBusReadAllReply\0223\n\010mess"
      "ages\030\001 \003(\0132!.metamoto.messages.DataBusMe"
      "ssage\"b\n\026DataBusReadLastRequest\022\r\n\005topic"
      "\030\001 \001(\t\022\023\n\013reader_name\030\002 \001(\t\022\014\n\004time\030\003 \001("
      "\001\022\026\n\016ego_vehicle_id\030\004 \001(\t\"J\n\024DataBusRead"
      "LastReply\0222\n\007message\030\001 \001(\0132!.metamoto.me"
      "ssages.DataBusMessage2\275\004\n\007DataBus\022]\n\007Pub"
      "lish\022(.metamoto.services.DataBusPublishR"
      "equest\032&.metamoto.services.DataBusPublis"
      "hReply\"\000\022c\n\tSubscribe\022*.metamoto.service"
      "s.DataBusSubscribeRequest\032(.metamoto.ser"
      "vices.DataBusSubscribeReply\"\000\022W\n\005Write\022&"
      ".metamoto.services.DataBusWriteRequest\032$"
      ".metamoto.services.DataBusWriteReply\"\000\022T"
      "\n\004Read\022%.metamoto.services.DataBusReadRe"
      "quest\032#.metamoto.services.DataBusReadRep"
      "ly\"\000\022]\n\007ReadAll\022(.metamoto.services.Data"
      "BusReadAllRequest\032&.metamoto.services.Da"
      "taBusReadAllReply\"\000\022`\n\010ReadLast\022).metamo"
      "to.services.DataBusReadLastRequest\032\'.met"
      "amoto.services.DataBusReadLastReply\"\000B\031\n"
      "\025com.metamoto.servicesP\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1752);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "metamoto/services/data_bus.proto", &protobuf_RegisterTypes);
  ::protobuf_metamoto_2fmessages_2fdata_5fbus_5fmessage_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2fnormal_5fdistribution_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_metamoto_2fservices_2fdata_5fbus_2eproto
namespace metamoto {
namespace services {

// ===================================================================

void DataBusPublishRequest::InitAsDefaultInstance() {
  ::metamoto::services::_DataBusPublishRequest_default_instance_._instance.get_mutable()->latency_ = const_cast< ::metamoto::types::NormalDistribution*>(
      ::metamoto::types::NormalDistribution::internal_default_instance());
}
void DataBusPublishRequest::clear_latency() {
  if (GetArenaNoVirtual() == NULL && latency_ != NULL) {
    delete latency_;
  }
  latency_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataBusPublishRequest::kTopicFieldNumber;
const int DataBusPublishRequest::kWriterNameFieldNumber;
const int DataBusPublishRequest::kLatencyFieldNumber;
const int DataBusPublishRequest::kEgoVehicleIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataBusPublishRequest::DataBusPublishRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::scc_info_DataBusPublishRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.DataBusPublishRequest)
}
DataBusPublishRequest::DataBusPublishRequest(const DataBusPublishRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.topic().size() > 0) {
    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  writer_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.writer_name().size() > 0) {
    writer_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.writer_name_);
  }
  ego_vehicle_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ego_vehicle_id().size() > 0) {
    ego_vehicle_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ego_vehicle_id_);
  }
  if (from.has_latency()) {
    latency_ = new ::metamoto::types::NormalDistribution(*from.latency_);
  } else {
    latency_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:metamoto.services.DataBusPublishRequest)
}

void DataBusPublishRequest::SharedCtor() {
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  writer_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ego_vehicle_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  latency_ = NULL;
}

DataBusPublishRequest::~DataBusPublishRequest() {
  // @@protoc_insertion_point(destructor:metamoto.services.DataBusPublishRequest)
  SharedDtor();
}

void DataBusPublishRequest::SharedDtor() {
  topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  writer_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ego_vehicle_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete latency_;
}

void DataBusPublishRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataBusPublishRequest::descriptor() {
  ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataBusPublishRequest& DataBusPublishRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::scc_info_DataBusPublishRequest.base);
  return *internal_default_instance();
}


void DataBusPublishRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.DataBusPublishRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  writer_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ego_vehicle_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && latency_ != NULL) {
    delete latency_;
  }
  latency_ = NULL;
  _internal_metadata_.Clear();
}

bool DataBusPublishRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.DataBusPublishRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string topic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topic().data(), static_cast<int>(this->topic().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.services.DataBusPublishRequest.topic"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string writer_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_writer_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->writer_name().data(), static_cast<int>(this->writer_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.services.DataBusPublishRequest.writer_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.NormalDistribution latency = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_latency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ego_vehicle_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ego_vehicle_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ego_vehicle_id().data(), static_cast<int>(this->ego_vehicle_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.services.DataBusPublishRequest.ego_vehicle_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.DataBusPublishRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.DataBusPublishRequest)
  return false;
#undef DO_
}

void DataBusPublishRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.DataBusPublishRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusPublishRequest.topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->topic(), output);
  }

  // string writer_name = 2;
  if (this->writer_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->writer_name().data(), static_cast<int>(this->writer_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusPublishRequest.writer_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->writer_name(), output);
  }

  // .metamoto.types.NormalDistribution latency = 3;
  if (this->has_latency()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_latency(), output);
  }

  // string ego_vehicle_id = 4;
  if (this->ego_vehicle_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ego_vehicle_id().data(), static_cast<int>(this->ego_vehicle_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusPublishRequest.ego_vehicle_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->ego_vehicle_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.DataBusPublishRequest)
}

::google::protobuf::uint8* DataBusPublishRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.DataBusPublishRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusPublishRequest.topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->topic(), target);
  }

  // string writer_name = 2;
  if (this->writer_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->writer_name().data(), static_cast<int>(this->writer_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusPublishRequest.writer_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->writer_name(), target);
  }

  // .metamoto.types.NormalDistribution latency = 3;
  if (this->has_latency()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_latency(), deterministic, target);
  }

  // string ego_vehicle_id = 4;
  if (this->ego_vehicle_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ego_vehicle_id().data(), static_cast<int>(this->ego_vehicle_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusPublishRequest.ego_vehicle_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->ego_vehicle_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.DataBusPublishRequest)
  return target;
}

size_t DataBusPublishRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.DataBusPublishRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string topic = 1;
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->topic());
  }

  // string writer_name = 2;
  if (this->writer_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->writer_name());
  }

  // string ego_vehicle_id = 4;
  if (this->ego_vehicle_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ego_vehicle_id());
  }

  // .metamoto.types.NormalDistribution latency = 3;
  if (this->has_latency()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *latency_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataBusPublishRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.DataBusPublishRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DataBusPublishRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataBusPublishRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.DataBusPublishRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.DataBusPublishRequest)
    MergeFrom(*source);
  }
}

void DataBusPublishRequest::MergeFrom(const DataBusPublishRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.DataBusPublishRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.topic().size() > 0) {

    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  if (from.writer_name().size() > 0) {

    writer_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.writer_name_);
  }
  if (from.ego_vehicle_id().size() > 0) {

    ego_vehicle_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ego_vehicle_id_);
  }
  if (from.has_latency()) {
    mutable_latency()->::metamoto::types::NormalDistribution::MergeFrom(from.latency());
  }
}

void DataBusPublishRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.DataBusPublishRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataBusPublishRequest::CopyFrom(const DataBusPublishRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.DataBusPublishRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataBusPublishRequest::IsInitialized() const {
  return true;
}

void DataBusPublishRequest::Swap(DataBusPublishRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataBusPublishRequest::InternalSwap(DataBusPublishRequest* other) {
  using std::swap;
  topic_.Swap(&other->topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  writer_name_.Swap(&other->writer_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ego_vehicle_id_.Swap(&other->ego_vehicle_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(latency_, other->latency_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataBusPublishRequest::GetMetadata() const {
  protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataBusPublishReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataBusPublishReply::DataBusPublishReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::scc_info_DataBusPublishReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.DataBusPublishReply)
}
DataBusPublishReply::DataBusPublishReply(const DataBusPublishReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:metamoto.services.DataBusPublishReply)
}

void DataBusPublishReply::SharedCtor() {
}

DataBusPublishReply::~DataBusPublishReply() {
  // @@protoc_insertion_point(destructor:metamoto.services.DataBusPublishReply)
  SharedDtor();
}

void DataBusPublishReply::SharedDtor() {
}

void DataBusPublishReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataBusPublishReply::descriptor() {
  ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataBusPublishReply& DataBusPublishReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::scc_info_DataBusPublishReply.base);
  return *internal_default_instance();
}


void DataBusPublishReply::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.DataBusPublishReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool DataBusPublishReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.DataBusPublishReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.DataBusPublishReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.DataBusPublishReply)
  return false;
#undef DO_
}

void DataBusPublishReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.DataBusPublishReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.DataBusPublishReply)
}

::google::protobuf::uint8* DataBusPublishReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.DataBusPublishReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.DataBusPublishReply)
  return target;
}

size_t DataBusPublishReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.DataBusPublishReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataBusPublishReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.DataBusPublishReply)
  GOOGLE_DCHECK_NE(&from, this);
  const DataBusPublishReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataBusPublishReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.DataBusPublishReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.DataBusPublishReply)
    MergeFrom(*source);
  }
}

void DataBusPublishReply::MergeFrom(const DataBusPublishReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.DataBusPublishReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DataBusPublishReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.DataBusPublishReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataBusPublishReply::CopyFrom(const DataBusPublishReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.DataBusPublishReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataBusPublishReply::IsInitialized() const {
  return true;
}

void DataBusPublishReply::Swap(DataBusPublishReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataBusPublishReply::InternalSwap(DataBusPublishReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataBusPublishReply::GetMetadata() const {
  protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataBusSubscribeRequest::InitAsDefaultInstance() {
  ::metamoto::services::_DataBusSubscribeRequest_default_instance_._instance.get_mutable()->latency_ = const_cast< ::metamoto::types::NormalDistribution*>(
      ::metamoto::types::NormalDistribution::internal_default_instance());
}
void DataBusSubscribeRequest::clear_latency() {
  if (GetArenaNoVirtual() == NULL && latency_ != NULL) {
    delete latency_;
  }
  latency_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataBusSubscribeRequest::kTopicFieldNumber;
const int DataBusSubscribeRequest::kReaderNameFieldNumber;
const int DataBusSubscribeRequest::kLatencyFieldNumber;
const int DataBusSubscribeRequest::kEgoVehicleIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataBusSubscribeRequest::DataBusSubscribeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::scc_info_DataBusSubscribeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.DataBusSubscribeRequest)
}
DataBusSubscribeRequest::DataBusSubscribeRequest(const DataBusSubscribeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.topic().size() > 0) {
    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  reader_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reader_name().size() > 0) {
    reader_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reader_name_);
  }
  ego_vehicle_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ego_vehicle_id().size() > 0) {
    ego_vehicle_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ego_vehicle_id_);
  }
  if (from.has_latency()) {
    latency_ = new ::metamoto::types::NormalDistribution(*from.latency_);
  } else {
    latency_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:metamoto.services.DataBusSubscribeRequest)
}

void DataBusSubscribeRequest::SharedCtor() {
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reader_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ego_vehicle_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  latency_ = NULL;
}

DataBusSubscribeRequest::~DataBusSubscribeRequest() {
  // @@protoc_insertion_point(destructor:metamoto.services.DataBusSubscribeRequest)
  SharedDtor();
}

void DataBusSubscribeRequest::SharedDtor() {
  topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reader_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ego_vehicle_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete latency_;
}

void DataBusSubscribeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataBusSubscribeRequest::descriptor() {
  ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataBusSubscribeRequest& DataBusSubscribeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::scc_info_DataBusSubscribeRequest.base);
  return *internal_default_instance();
}


void DataBusSubscribeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.DataBusSubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reader_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ego_vehicle_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && latency_ != NULL) {
    delete latency_;
  }
  latency_ = NULL;
  _internal_metadata_.Clear();
}

bool DataBusSubscribeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.DataBusSubscribeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string topic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topic().data(), static_cast<int>(this->topic().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.services.DataBusSubscribeRequest.topic"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reader_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reader_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reader_name().data(), static_cast<int>(this->reader_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.services.DataBusSubscribeRequest.reader_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.NormalDistribution latency = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_latency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ego_vehicle_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ego_vehicle_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ego_vehicle_id().data(), static_cast<int>(this->ego_vehicle_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.services.DataBusSubscribeRequest.ego_vehicle_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.DataBusSubscribeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.DataBusSubscribeRequest)
  return false;
#undef DO_
}

void DataBusSubscribeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.DataBusSubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusSubscribeRequest.topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->topic(), output);
  }

  // string reader_name = 2;
  if (this->reader_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reader_name().data(), static_cast<int>(this->reader_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusSubscribeRequest.reader_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->reader_name(), output);
  }

  // .metamoto.types.NormalDistribution latency = 3;
  if (this->has_latency()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_latency(), output);
  }

  // string ego_vehicle_id = 4;
  if (this->ego_vehicle_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ego_vehicle_id().data(), static_cast<int>(this->ego_vehicle_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusSubscribeRequest.ego_vehicle_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->ego_vehicle_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.DataBusSubscribeRequest)
}

::google::protobuf::uint8* DataBusSubscribeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.DataBusSubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusSubscribeRequest.topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->topic(), target);
  }

  // string reader_name = 2;
  if (this->reader_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reader_name().data(), static_cast<int>(this->reader_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusSubscribeRequest.reader_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->reader_name(), target);
  }

  // .metamoto.types.NormalDistribution latency = 3;
  if (this->has_latency()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_latency(), deterministic, target);
  }

  // string ego_vehicle_id = 4;
  if (this->ego_vehicle_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ego_vehicle_id().data(), static_cast<int>(this->ego_vehicle_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusSubscribeRequest.ego_vehicle_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->ego_vehicle_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.DataBusSubscribeRequest)
  return target;
}

size_t DataBusSubscribeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.DataBusSubscribeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string topic = 1;
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->topic());
  }

  // string reader_name = 2;
  if (this->reader_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reader_name());
  }

  // string ego_vehicle_id = 4;
  if (this->ego_vehicle_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ego_vehicle_id());
  }

  // .metamoto.types.NormalDistribution latency = 3;
  if (this->has_latency()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *latency_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataBusSubscribeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.DataBusSubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DataBusSubscribeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataBusSubscribeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.DataBusSubscribeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.DataBusSubscribeRequest)
    MergeFrom(*source);
  }
}

void DataBusSubscribeRequest::MergeFrom(const DataBusSubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.DataBusSubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.topic().size() > 0) {

    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  if (from.reader_name().size() > 0) {

    reader_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reader_name_);
  }
  if (from.ego_vehicle_id().size() > 0) {

    ego_vehicle_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ego_vehicle_id_);
  }
  if (from.has_latency()) {
    mutable_latency()->::metamoto::types::NormalDistribution::MergeFrom(from.latency());
  }
}

void DataBusSubscribeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.DataBusSubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataBusSubscribeRequest::CopyFrom(const DataBusSubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.DataBusSubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataBusSubscribeRequest::IsInitialized() const {
  return true;
}

void DataBusSubscribeRequest::Swap(DataBusSubscribeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataBusSubscribeRequest::InternalSwap(DataBusSubscribeRequest* other) {
  using std::swap;
  topic_.Swap(&other->topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  reader_name_.Swap(&other->reader_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ego_vehicle_id_.Swap(&other->ego_vehicle_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(latency_, other->latency_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataBusSubscribeRequest::GetMetadata() const {
  protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataBusSubscribeReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataBusSubscribeReply::DataBusSubscribeReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::scc_info_DataBusSubscribeReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.DataBusSubscribeReply)
}
DataBusSubscribeReply::DataBusSubscribeReply(const DataBusSubscribeReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:metamoto.services.DataBusSubscribeReply)
}

void DataBusSubscribeReply::SharedCtor() {
}

DataBusSubscribeReply::~DataBusSubscribeReply() {
  // @@protoc_insertion_point(destructor:metamoto.services.DataBusSubscribeReply)
  SharedDtor();
}

void DataBusSubscribeReply::SharedDtor() {
}

void DataBusSubscribeReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataBusSubscribeReply::descriptor() {
  ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataBusSubscribeReply& DataBusSubscribeReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::scc_info_DataBusSubscribeReply.base);
  return *internal_default_instance();
}


void DataBusSubscribeReply::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.DataBusSubscribeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool DataBusSubscribeReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.DataBusSubscribeReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.DataBusSubscribeReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.DataBusSubscribeReply)
  return false;
#undef DO_
}

void DataBusSubscribeReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.DataBusSubscribeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.DataBusSubscribeReply)
}

::google::protobuf::uint8* DataBusSubscribeReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.DataBusSubscribeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.DataBusSubscribeReply)
  return target;
}

size_t DataBusSubscribeReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.DataBusSubscribeReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataBusSubscribeReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.DataBusSubscribeReply)
  GOOGLE_DCHECK_NE(&from, this);
  const DataBusSubscribeReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataBusSubscribeReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.DataBusSubscribeReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.DataBusSubscribeReply)
    MergeFrom(*source);
  }
}

void DataBusSubscribeReply::MergeFrom(const DataBusSubscribeReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.DataBusSubscribeReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DataBusSubscribeReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.DataBusSubscribeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataBusSubscribeReply::CopyFrom(const DataBusSubscribeReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.DataBusSubscribeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataBusSubscribeReply::IsInitialized() const {
  return true;
}

void DataBusSubscribeReply::Swap(DataBusSubscribeReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataBusSubscribeReply::InternalSwap(DataBusSubscribeReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataBusSubscribeReply::GetMetadata() const {
  protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataBusWriteRequest::InitAsDefaultInstance() {
  ::metamoto::services::_DataBusWriteRequest_default_instance_._instance.get_mutable()->message_ = const_cast< ::metamoto::messages::DataBusMessage*>(
      ::metamoto::messages::DataBusMessage::internal_default_instance());
}
void DataBusWriteRequest::clear_message() {
  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataBusWriteRequest::kTopicFieldNumber;
const int DataBusWriteRequest::kWriterNameFieldNumber;
const int DataBusWriteRequest::kMessageFieldNumber;
const int DataBusWriteRequest::kEgoVehicleIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataBusWriteRequest::DataBusWriteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::scc_info_DataBusWriteRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.DataBusWriteRequest)
}
DataBusWriteRequest::DataBusWriteRequest(const DataBusWriteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.topic().size() > 0) {
    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  writer_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.writer_name().size() > 0) {
    writer_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.writer_name_);
  }
  ego_vehicle_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ego_vehicle_id().size() > 0) {
    ego_vehicle_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ego_vehicle_id_);
  }
  if (from.has_message()) {
    message_ = new ::metamoto::messages::DataBusMessage(*from.message_);
  } else {
    message_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:metamoto.services.DataBusWriteRequest)
}

void DataBusWriteRequest::SharedCtor() {
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  writer_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ego_vehicle_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_ = NULL;
}

DataBusWriteRequest::~DataBusWriteRequest() {
  // @@protoc_insertion_point(destructor:metamoto.services.DataBusWriteRequest)
  SharedDtor();
}

void DataBusWriteRequest::SharedDtor() {
  topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  writer_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ego_vehicle_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete message_;
}

void DataBusWriteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataBusWriteRequest::descriptor() {
  ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataBusWriteRequest& DataBusWriteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::scc_info_DataBusWriteRequest.base);
  return *internal_default_instance();
}


void DataBusWriteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.DataBusWriteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  writer_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ego_vehicle_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
  _internal_metadata_.Clear();
}

bool DataBusWriteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.DataBusWriteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string topic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topic().data(), static_cast<int>(this->topic().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.services.DataBusWriteRequest.topic"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string writer_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_writer_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->writer_name().data(), static_cast<int>(this->writer_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.services.DataBusWriteRequest.writer_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.messages.DataBusMessage message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ego_vehicle_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ego_vehicle_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ego_vehicle_id().data(), static_cast<int>(this->ego_vehicle_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.services.DataBusWriteRequest.ego_vehicle_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.DataBusWriteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.DataBusWriteRequest)
  return false;
#undef DO_
}

void DataBusWriteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.DataBusWriteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusWriteRequest.topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->topic(), output);
  }

  // string writer_name = 2;
  if (this->writer_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->writer_name().data(), static_cast<int>(this->writer_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusWriteRequest.writer_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->writer_name(), output);
  }

  // .metamoto.messages.DataBusMessage message = 3;
  if (this->has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_message(), output);
  }

  // string ego_vehicle_id = 4;
  if (this->ego_vehicle_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ego_vehicle_id().data(), static_cast<int>(this->ego_vehicle_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusWriteRequest.ego_vehicle_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->ego_vehicle_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.DataBusWriteRequest)
}

::google::protobuf::uint8* DataBusWriteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.DataBusWriteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusWriteRequest.topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->topic(), target);
  }

  // string writer_name = 2;
  if (this->writer_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->writer_name().data(), static_cast<int>(this->writer_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusWriteRequest.writer_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->writer_name(), target);
  }

  // .metamoto.messages.DataBusMessage message = 3;
  if (this->has_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_message(), deterministic, target);
  }

  // string ego_vehicle_id = 4;
  if (this->ego_vehicle_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ego_vehicle_id().data(), static_cast<int>(this->ego_vehicle_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusWriteRequest.ego_vehicle_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->ego_vehicle_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.DataBusWriteRequest)
  return target;
}

size_t DataBusWriteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.DataBusWriteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string topic = 1;
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->topic());
  }

  // string writer_name = 2;
  if (this->writer_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->writer_name());
  }

  // string ego_vehicle_id = 4;
  if (this->ego_vehicle_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ego_vehicle_id());
  }

  // .metamoto.messages.DataBusMessage message = 3;
  if (this->has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *message_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataBusWriteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.DataBusWriteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DataBusWriteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataBusWriteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.DataBusWriteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.DataBusWriteRequest)
    MergeFrom(*source);
  }
}

void DataBusWriteRequest::MergeFrom(const DataBusWriteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.DataBusWriteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.topic().size() > 0) {

    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  if (from.writer_name().size() > 0) {

    writer_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.writer_name_);
  }
  if (from.ego_vehicle_id().size() > 0) {

    ego_vehicle_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ego_vehicle_id_);
  }
  if (from.has_message()) {
    mutable_message()->::metamoto::messages::DataBusMessage::MergeFrom(from.message());
  }
}

void DataBusWriteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.DataBusWriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataBusWriteRequest::CopyFrom(const DataBusWriteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.DataBusWriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataBusWriteRequest::IsInitialized() const {
  return true;
}

void DataBusWriteRequest::Swap(DataBusWriteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataBusWriteRequest::InternalSwap(DataBusWriteRequest* other) {
  using std::swap;
  topic_.Swap(&other->topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  writer_name_.Swap(&other->writer_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ego_vehicle_id_.Swap(&other->ego_vehicle_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(message_, other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataBusWriteRequest::GetMetadata() const {
  protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataBusWriteReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataBusWriteReply::DataBusWriteReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::scc_info_DataBusWriteReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.DataBusWriteReply)
}
DataBusWriteReply::DataBusWriteReply(const DataBusWriteReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:metamoto.services.DataBusWriteReply)
}

void DataBusWriteReply::SharedCtor() {
}

DataBusWriteReply::~DataBusWriteReply() {
  // @@protoc_insertion_point(destructor:metamoto.services.DataBusWriteReply)
  SharedDtor();
}

void DataBusWriteReply::SharedDtor() {
}

void DataBusWriteReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataBusWriteReply::descriptor() {
  ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataBusWriteReply& DataBusWriteReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::scc_info_DataBusWriteReply.base);
  return *internal_default_instance();
}


void DataBusWriteReply::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.DataBusWriteReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool DataBusWriteReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.DataBusWriteReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.DataBusWriteReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.DataBusWriteReply)
  return false;
#undef DO_
}

void DataBusWriteReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.DataBusWriteReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.DataBusWriteReply)
}

::google::protobuf::uint8* DataBusWriteReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.DataBusWriteReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.DataBusWriteReply)
  return target;
}

size_t DataBusWriteReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.DataBusWriteReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataBusWriteReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.DataBusWriteReply)
  GOOGLE_DCHECK_NE(&from, this);
  const DataBusWriteReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataBusWriteReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.DataBusWriteReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.DataBusWriteReply)
    MergeFrom(*source);
  }
}

void DataBusWriteReply::MergeFrom(const DataBusWriteReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.DataBusWriteReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DataBusWriteReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.DataBusWriteReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataBusWriteReply::CopyFrom(const DataBusWriteReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.DataBusWriteReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataBusWriteReply::IsInitialized() const {
  return true;
}

void DataBusWriteReply::Swap(DataBusWriteReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataBusWriteReply::InternalSwap(DataBusWriteReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataBusWriteReply::GetMetadata() const {
  protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataBusReadRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataBusReadRequest::kTopicFieldNumber;
const int DataBusReadRequest::kReaderNameFieldNumber;
const int DataBusReadRequest::kTimeFieldNumber;
const int DataBusReadRequest::kEgoVehicleIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataBusReadRequest::DataBusReadRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::scc_info_DataBusReadRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.DataBusReadRequest)
}
DataBusReadRequest::DataBusReadRequest(const DataBusReadRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.topic().size() > 0) {
    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  reader_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reader_name().size() > 0) {
    reader_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reader_name_);
  }
  ego_vehicle_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ego_vehicle_id().size() > 0) {
    ego_vehicle_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ego_vehicle_id_);
  }
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:metamoto.services.DataBusReadRequest)
}

void DataBusReadRequest::SharedCtor() {
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reader_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ego_vehicle_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = 0;
}

DataBusReadRequest::~DataBusReadRequest() {
  // @@protoc_insertion_point(destructor:metamoto.services.DataBusReadRequest)
  SharedDtor();
}

void DataBusReadRequest::SharedDtor() {
  topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reader_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ego_vehicle_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DataBusReadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataBusReadRequest::descriptor() {
  ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataBusReadRequest& DataBusReadRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::scc_info_DataBusReadRequest.base);
  return *internal_default_instance();
}


void DataBusReadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.DataBusReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reader_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ego_vehicle_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = 0;
  _internal_metadata_.Clear();
}

bool DataBusReadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.DataBusReadRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string topic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topic().data(), static_cast<int>(this->topic().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.services.DataBusReadRequest.topic"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reader_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reader_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reader_name().data(), static_cast<int>(this->reader_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.services.DataBusReadRequest.reader_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ego_vehicle_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ego_vehicle_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ego_vehicle_id().data(), static_cast<int>(this->ego_vehicle_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.services.DataBusReadRequest.ego_vehicle_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.DataBusReadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.DataBusReadRequest)
  return false;
#undef DO_
}

void DataBusReadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.DataBusReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusReadRequest.topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->topic(), output);
  }

  // string reader_name = 2;
  if (this->reader_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reader_name().data(), static_cast<int>(this->reader_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusReadRequest.reader_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->reader_name(), output);
  }

  // double time = 3;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->time(), output);
  }

  // string ego_vehicle_id = 4;
  if (this->ego_vehicle_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ego_vehicle_id().data(), static_cast<int>(this->ego_vehicle_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusReadRequest.ego_vehicle_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->ego_vehicle_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.DataBusReadRequest)
}

::google::protobuf::uint8* DataBusReadRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.DataBusReadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusReadRequest.topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->topic(), target);
  }

  // string reader_name = 2;
  if (this->reader_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reader_name().data(), static_cast<int>(this->reader_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusReadRequest.reader_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->reader_name(), target);
  }

  // double time = 3;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->time(), target);
  }

  // string ego_vehicle_id = 4;
  if (this->ego_vehicle_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ego_vehicle_id().data(), static_cast<int>(this->ego_vehicle_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusReadRequest.ego_vehicle_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->ego_vehicle_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.DataBusReadRequest)
  return target;
}

size_t DataBusReadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.DataBusReadRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string topic = 1;
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->topic());
  }

  // string reader_name = 2;
  if (this->reader_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reader_name());
  }

  // string ego_vehicle_id = 4;
  if (this->ego_vehicle_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ego_vehicle_id());
  }

  // double time = 3;
  if (this->time() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataBusReadRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.DataBusReadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DataBusReadRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataBusReadRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.DataBusReadRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.DataBusReadRequest)
    MergeFrom(*source);
  }
}

void DataBusReadRequest::MergeFrom(const DataBusReadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.DataBusReadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.topic().size() > 0) {

    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  if (from.reader_name().size() > 0) {

    reader_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reader_name_);
  }
  if (from.ego_vehicle_id().size() > 0) {

    ego_vehicle_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ego_vehicle_id_);
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void DataBusReadRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.DataBusReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataBusReadRequest::CopyFrom(const DataBusReadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.DataBusReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataBusReadRequest::IsInitialized() const {
  return true;
}

void DataBusReadRequest::Swap(DataBusReadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataBusReadRequest::InternalSwap(DataBusReadRequest* other) {
  using std::swap;
  topic_.Swap(&other->topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  reader_name_.Swap(&other->reader_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ego_vehicle_id_.Swap(&other->ego_vehicle_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(time_, other->time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataBusReadRequest::GetMetadata() const {
  protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataBusReadReply::InitAsDefaultInstance() {
  ::metamoto::services::_DataBusReadReply_default_instance_._instance.get_mutable()->message_ = const_cast< ::metamoto::messages::DataBusMessage*>(
      ::metamoto::messages::DataBusMessage::internal_default_instance());
}
void DataBusReadReply::clear_message() {
  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataBusReadReply::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataBusReadReply::DataBusReadReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::scc_info_DataBusReadReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.DataBusReadReply)
}
DataBusReadReply::DataBusReadReply(const DataBusReadReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_message()) {
    message_ = new ::metamoto::messages::DataBusMessage(*from.message_);
  } else {
    message_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:metamoto.services.DataBusReadReply)
}

void DataBusReadReply::SharedCtor() {
  message_ = NULL;
}

DataBusReadReply::~DataBusReadReply() {
  // @@protoc_insertion_point(destructor:metamoto.services.DataBusReadReply)
  SharedDtor();
}

void DataBusReadReply::SharedDtor() {
  if (this != internal_default_instance()) delete message_;
}

void DataBusReadReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataBusReadReply::descriptor() {
  ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataBusReadReply& DataBusReadReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::scc_info_DataBusReadReply.base);
  return *internal_default_instance();
}


void DataBusReadReply::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.DataBusReadReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
  _internal_metadata_.Clear();
}

bool DataBusReadReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.DataBusReadReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .metamoto.messages.DataBusMessage message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.DataBusReadReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.DataBusReadReply)
  return false;
#undef DO_
}

void DataBusReadReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.DataBusReadReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .metamoto.messages.DataBusMessage message = 1;
  if (this->has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.DataBusReadReply)
}

::google::protobuf::uint8* DataBusReadReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.DataBusReadReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .metamoto.messages.DataBusMessage message = 1;
  if (this->has_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_message(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.DataBusReadReply)
  return target;
}

size_t DataBusReadReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.DataBusReadReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .metamoto.messages.DataBusMessage message = 1;
  if (this->has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *message_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataBusReadReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.DataBusReadReply)
  GOOGLE_DCHECK_NE(&from, this);
  const DataBusReadReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataBusReadReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.DataBusReadReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.DataBusReadReply)
    MergeFrom(*source);
  }
}

void DataBusReadReply::MergeFrom(const DataBusReadReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.DataBusReadReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_message()) {
    mutable_message()->::metamoto::messages::DataBusMessage::MergeFrom(from.message());
  }
}

void DataBusReadReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.DataBusReadReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataBusReadReply::CopyFrom(const DataBusReadReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.DataBusReadReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataBusReadReply::IsInitialized() const {
  return true;
}

void DataBusReadReply::Swap(DataBusReadReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataBusReadReply::InternalSwap(DataBusReadReply* other) {
  using std::swap;
  swap(message_, other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataBusReadReply::GetMetadata() const {
  protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataBusReadAllRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataBusReadAllRequest::kTopicFieldNumber;
const int DataBusReadAllRequest::kReaderNameFieldNumber;
const int DataBusReadAllRequest::kTimeFieldNumber;
const int DataBusReadAllRequest::kEgoVehicleIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataBusReadAllRequest::DataBusReadAllRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::scc_info_DataBusReadAllRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.DataBusReadAllRequest)
}
DataBusReadAllRequest::DataBusReadAllRequest(const DataBusReadAllRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.topic().size() > 0) {
    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  reader_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reader_name().size() > 0) {
    reader_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reader_name_);
  }
  ego_vehicle_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ego_vehicle_id().size() > 0) {
    ego_vehicle_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ego_vehicle_id_);
  }
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:metamoto.services.DataBusReadAllRequest)
}

void DataBusReadAllRequest::SharedCtor() {
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reader_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ego_vehicle_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = 0;
}

DataBusReadAllRequest::~DataBusReadAllRequest() {
  // @@protoc_insertion_point(destructor:metamoto.services.DataBusReadAllRequest)
  SharedDtor();
}

void DataBusReadAllRequest::SharedDtor() {
  topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reader_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ego_vehicle_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DataBusReadAllRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataBusReadAllRequest::descriptor() {
  ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataBusReadAllRequest& DataBusReadAllRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::scc_info_DataBusReadAllRequest.base);
  return *internal_default_instance();
}


void DataBusReadAllRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.DataBusReadAllRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reader_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ego_vehicle_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = 0;
  _internal_metadata_.Clear();
}

bool DataBusReadAllRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.DataBusReadAllRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string topic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topic().data(), static_cast<int>(this->topic().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.services.DataBusReadAllRequest.topic"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reader_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reader_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reader_name().data(), static_cast<int>(this->reader_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.services.DataBusReadAllRequest.reader_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ego_vehicle_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ego_vehicle_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ego_vehicle_id().data(), static_cast<int>(this->ego_vehicle_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.services.DataBusReadAllRequest.ego_vehicle_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.DataBusReadAllRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.DataBusReadAllRequest)
  return false;
#undef DO_
}

void DataBusReadAllRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.DataBusReadAllRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusReadAllRequest.topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->topic(), output);
  }

  // string reader_name = 2;
  if (this->reader_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reader_name().data(), static_cast<int>(this->reader_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusReadAllRequest.reader_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->reader_name(), output);
  }

  // double time = 3;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->time(), output);
  }

  // string ego_vehicle_id = 4;
  if (this->ego_vehicle_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ego_vehicle_id().data(), static_cast<int>(this->ego_vehicle_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusReadAllRequest.ego_vehicle_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->ego_vehicle_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.DataBusReadAllRequest)
}

::google::protobuf::uint8* DataBusReadAllRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.DataBusReadAllRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusReadAllRequest.topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->topic(), target);
  }

  // string reader_name = 2;
  if (this->reader_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reader_name().data(), static_cast<int>(this->reader_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusReadAllRequest.reader_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->reader_name(), target);
  }

  // double time = 3;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->time(), target);
  }

  // string ego_vehicle_id = 4;
  if (this->ego_vehicle_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ego_vehicle_id().data(), static_cast<int>(this->ego_vehicle_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusReadAllRequest.ego_vehicle_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->ego_vehicle_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.DataBusReadAllRequest)
  return target;
}

size_t DataBusReadAllRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.DataBusReadAllRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string topic = 1;
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->topic());
  }

  // string reader_name = 2;
  if (this->reader_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reader_name());
  }

  // string ego_vehicle_id = 4;
  if (this->ego_vehicle_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ego_vehicle_id());
  }

  // double time = 3;
  if (this->time() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataBusReadAllRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.DataBusReadAllRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DataBusReadAllRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataBusReadAllRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.DataBusReadAllRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.DataBusReadAllRequest)
    MergeFrom(*source);
  }
}

void DataBusReadAllRequest::MergeFrom(const DataBusReadAllRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.DataBusReadAllRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.topic().size() > 0) {

    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  if (from.reader_name().size() > 0) {

    reader_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reader_name_);
  }
  if (from.ego_vehicle_id().size() > 0) {

    ego_vehicle_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ego_vehicle_id_);
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void DataBusReadAllRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.DataBusReadAllRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataBusReadAllRequest::CopyFrom(const DataBusReadAllRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.DataBusReadAllRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataBusReadAllRequest::IsInitialized() const {
  return true;
}

void DataBusReadAllRequest::Swap(DataBusReadAllRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataBusReadAllRequest::InternalSwap(DataBusReadAllRequest* other) {
  using std::swap;
  topic_.Swap(&other->topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  reader_name_.Swap(&other->reader_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ego_vehicle_id_.Swap(&other->ego_vehicle_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(time_, other->time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataBusReadAllRequest::GetMetadata() const {
  protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataBusReadAllReply::InitAsDefaultInstance() {
}
void DataBusReadAllReply::clear_messages() {
  messages_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataBusReadAllReply::kMessagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataBusReadAllReply::DataBusReadAllReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::scc_info_DataBusReadAllReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.DataBusReadAllReply)
}
DataBusReadAllReply::DataBusReadAllReply(const DataBusReadAllReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      messages_(from.messages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:metamoto.services.DataBusReadAllReply)
}

void DataBusReadAllReply::SharedCtor() {
}

DataBusReadAllReply::~DataBusReadAllReply() {
  // @@protoc_insertion_point(destructor:metamoto.services.DataBusReadAllReply)
  SharedDtor();
}

void DataBusReadAllReply::SharedDtor() {
}

void DataBusReadAllReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataBusReadAllReply::descriptor() {
  ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataBusReadAllReply& DataBusReadAllReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::scc_info_DataBusReadAllReply.base);
  return *internal_default_instance();
}


void DataBusReadAllReply::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.DataBusReadAllReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  messages_.Clear();
  _internal_metadata_.Clear();
}

bool DataBusReadAllReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.DataBusReadAllReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .metamoto.messages.DataBusMessage messages = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_messages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.DataBusReadAllReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.DataBusReadAllReply)
  return false;
#undef DO_
}

void DataBusReadAllReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.DataBusReadAllReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .metamoto.messages.DataBusMessage messages = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->messages_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->messages(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.DataBusReadAllReply)
}

::google::protobuf::uint8* DataBusReadAllReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.DataBusReadAllReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .metamoto.messages.DataBusMessage messages = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->messages_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->messages(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.DataBusReadAllReply)
  return target;
}

size_t DataBusReadAllReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.DataBusReadAllReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .metamoto.messages.DataBusMessage messages = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->messages_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->messages(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataBusReadAllReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.DataBusReadAllReply)
  GOOGLE_DCHECK_NE(&from, this);
  const DataBusReadAllReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataBusReadAllReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.DataBusReadAllReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.DataBusReadAllReply)
    MergeFrom(*source);
  }
}

void DataBusReadAllReply::MergeFrom(const DataBusReadAllReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.DataBusReadAllReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  messages_.MergeFrom(from.messages_);
}

void DataBusReadAllReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.DataBusReadAllReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataBusReadAllReply::CopyFrom(const DataBusReadAllReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.DataBusReadAllReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataBusReadAllReply::IsInitialized() const {
  return true;
}

void DataBusReadAllReply::Swap(DataBusReadAllReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataBusReadAllReply::InternalSwap(DataBusReadAllReply* other) {
  using std::swap;
  CastToBase(&messages_)->InternalSwap(CastToBase(&other->messages_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataBusReadAllReply::GetMetadata() const {
  protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataBusReadLastRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataBusReadLastRequest::kTopicFieldNumber;
const int DataBusReadLastRequest::kReaderNameFieldNumber;
const int DataBusReadLastRequest::kTimeFieldNumber;
const int DataBusReadLastRequest::kEgoVehicleIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataBusReadLastRequest::DataBusReadLastRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::scc_info_DataBusReadLastRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.DataBusReadLastRequest)
}
DataBusReadLastRequest::DataBusReadLastRequest(const DataBusReadLastRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.topic().size() > 0) {
    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  reader_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reader_name().size() > 0) {
    reader_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reader_name_);
  }
  ego_vehicle_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ego_vehicle_id().size() > 0) {
    ego_vehicle_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ego_vehicle_id_);
  }
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:metamoto.services.DataBusReadLastRequest)
}

void DataBusReadLastRequest::SharedCtor() {
  topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reader_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ego_vehicle_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = 0;
}

DataBusReadLastRequest::~DataBusReadLastRequest() {
  // @@protoc_insertion_point(destructor:metamoto.services.DataBusReadLastRequest)
  SharedDtor();
}

void DataBusReadLastRequest::SharedDtor() {
  topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reader_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ego_vehicle_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DataBusReadLastRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataBusReadLastRequest::descriptor() {
  ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataBusReadLastRequest& DataBusReadLastRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::scc_info_DataBusReadLastRequest.base);
  return *internal_default_instance();
}


void DataBusReadLastRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.DataBusReadLastRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reader_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ego_vehicle_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = 0;
  _internal_metadata_.Clear();
}

bool DataBusReadLastRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.DataBusReadLastRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string topic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topic().data(), static_cast<int>(this->topic().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.services.DataBusReadLastRequest.topic"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reader_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reader_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reader_name().data(), static_cast<int>(this->reader_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.services.DataBusReadLastRequest.reader_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ego_vehicle_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ego_vehicle_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ego_vehicle_id().data(), static_cast<int>(this->ego_vehicle_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.services.DataBusReadLastRequest.ego_vehicle_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.DataBusReadLastRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.DataBusReadLastRequest)
  return false;
#undef DO_
}

void DataBusReadLastRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.DataBusReadLastRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusReadLastRequest.topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->topic(), output);
  }

  // string reader_name = 2;
  if (this->reader_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reader_name().data(), static_cast<int>(this->reader_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusReadLastRequest.reader_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->reader_name(), output);
  }

  // double time = 3;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->time(), output);
  }

  // string ego_vehicle_id = 4;
  if (this->ego_vehicle_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ego_vehicle_id().data(), static_cast<int>(this->ego_vehicle_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusReadLastRequest.ego_vehicle_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->ego_vehicle_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.DataBusReadLastRequest)
}

::google::protobuf::uint8* DataBusReadLastRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.DataBusReadLastRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic = 1;
  if (this->topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic().data(), static_cast<int>(this->topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusReadLastRequest.topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->topic(), target);
  }

  // string reader_name = 2;
  if (this->reader_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reader_name().data(), static_cast<int>(this->reader_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusReadLastRequest.reader_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->reader_name(), target);
  }

  // double time = 3;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->time(), target);
  }

  // string ego_vehicle_id = 4;
  if (this->ego_vehicle_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ego_vehicle_id().data(), static_cast<int>(this->ego_vehicle_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.DataBusReadLastRequest.ego_vehicle_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->ego_vehicle_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.DataBusReadLastRequest)
  return target;
}

size_t DataBusReadLastRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.DataBusReadLastRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string topic = 1;
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->topic());
  }

  // string reader_name = 2;
  if (this->reader_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reader_name());
  }

  // string ego_vehicle_id = 4;
  if (this->ego_vehicle_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ego_vehicle_id());
  }

  // double time = 3;
  if (this->time() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataBusReadLastRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.DataBusReadLastRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DataBusReadLastRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataBusReadLastRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.DataBusReadLastRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.DataBusReadLastRequest)
    MergeFrom(*source);
  }
}

void DataBusReadLastRequest::MergeFrom(const DataBusReadLastRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.DataBusReadLastRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.topic().size() > 0) {

    topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  if (from.reader_name().size() > 0) {

    reader_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reader_name_);
  }
  if (from.ego_vehicle_id().size() > 0) {

    ego_vehicle_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ego_vehicle_id_);
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void DataBusReadLastRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.DataBusReadLastRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataBusReadLastRequest::CopyFrom(const DataBusReadLastRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.DataBusReadLastRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataBusReadLastRequest::IsInitialized() const {
  return true;
}

void DataBusReadLastRequest::Swap(DataBusReadLastRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataBusReadLastRequest::InternalSwap(DataBusReadLastRequest* other) {
  using std::swap;
  topic_.Swap(&other->topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  reader_name_.Swap(&other->reader_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ego_vehicle_id_.Swap(&other->ego_vehicle_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(time_, other->time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataBusReadLastRequest::GetMetadata() const {
  protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataBusReadLastReply::InitAsDefaultInstance() {
  ::metamoto::services::_DataBusReadLastReply_default_instance_._instance.get_mutable()->message_ = const_cast< ::metamoto::messages::DataBusMessage*>(
      ::metamoto::messages::DataBusMessage::internal_default_instance());
}
void DataBusReadLastReply::clear_message() {
  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataBusReadLastReply::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataBusReadLastReply::DataBusReadLastReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::scc_info_DataBusReadLastReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.DataBusReadLastReply)
}
DataBusReadLastReply::DataBusReadLastReply(const DataBusReadLastReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_message()) {
    message_ = new ::metamoto::messages::DataBusMessage(*from.message_);
  } else {
    message_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:metamoto.services.DataBusReadLastReply)
}

void DataBusReadLastReply::SharedCtor() {
  message_ = NULL;
}

DataBusReadLastReply::~DataBusReadLastReply() {
  // @@protoc_insertion_point(destructor:metamoto.services.DataBusReadLastReply)
  SharedDtor();
}

void DataBusReadLastReply::SharedDtor() {
  if (this != internal_default_instance()) delete message_;
}

void DataBusReadLastReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataBusReadLastReply::descriptor() {
  ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataBusReadLastReply& DataBusReadLastReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::scc_info_DataBusReadLastReply.base);
  return *internal_default_instance();
}


void DataBusReadLastReply::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.DataBusReadLastReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
  _internal_metadata_.Clear();
}

bool DataBusReadLastReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.DataBusReadLastReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .metamoto.messages.DataBusMessage message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.DataBusReadLastReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.DataBusReadLastReply)
  return false;
#undef DO_
}

void DataBusReadLastReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.DataBusReadLastReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .metamoto.messages.DataBusMessage message = 1;
  if (this->has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.DataBusReadLastReply)
}

::google::protobuf::uint8* DataBusReadLastReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.DataBusReadLastReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .metamoto.messages.DataBusMessage message = 1;
  if (this->has_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_message(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.DataBusReadLastReply)
  return target;
}

size_t DataBusReadLastReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.DataBusReadLastReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .metamoto.messages.DataBusMessage message = 1;
  if (this->has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *message_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataBusReadLastReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.DataBusReadLastReply)
  GOOGLE_DCHECK_NE(&from, this);
  const DataBusReadLastReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataBusReadLastReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.DataBusReadLastReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.DataBusReadLastReply)
    MergeFrom(*source);
  }
}

void DataBusReadLastReply::MergeFrom(const DataBusReadLastReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.DataBusReadLastReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_message()) {
    mutable_message()->::metamoto::messages::DataBusMessage::MergeFrom(from.message());
  }
}

void DataBusReadLastReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.DataBusReadLastReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataBusReadLastReply::CopyFrom(const DataBusReadLastReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.DataBusReadLastReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataBusReadLastReply::IsInitialized() const {
  return true;
}

void DataBusReadLastReply::Swap(DataBusReadLastReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataBusReadLastReply::InternalSwap(DataBusReadLastReply* other) {
  using std::swap;
  swap(message_, other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataBusReadLastReply::GetMetadata() const {
  protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fdata_5fbus_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace services
}  // namespace metamoto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::DataBusPublishRequest* Arena::CreateMaybeMessage< ::metamoto::services::DataBusPublishRequest >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::DataBusPublishRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::DataBusPublishReply* Arena::CreateMaybeMessage< ::metamoto::services::DataBusPublishReply >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::DataBusPublishReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::DataBusSubscribeRequest* Arena::CreateMaybeMessage< ::metamoto::services::DataBusSubscribeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::DataBusSubscribeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::DataBusSubscribeReply* Arena::CreateMaybeMessage< ::metamoto::services::DataBusSubscribeReply >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::DataBusSubscribeReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::DataBusWriteRequest* Arena::CreateMaybeMessage< ::metamoto::services::DataBusWriteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::DataBusWriteRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::DataBusWriteReply* Arena::CreateMaybeMessage< ::metamoto::services::DataBusWriteReply >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::DataBusWriteReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::DataBusReadRequest* Arena::CreateMaybeMessage< ::metamoto::services::DataBusReadRequest >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::DataBusReadRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::DataBusReadReply* Arena::CreateMaybeMessage< ::metamoto::services::DataBusReadReply >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::DataBusReadReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::DataBusReadAllRequest* Arena::CreateMaybeMessage< ::metamoto::services::DataBusReadAllRequest >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::DataBusReadAllRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::DataBusReadAllReply* Arena::CreateMaybeMessage< ::metamoto::services::DataBusReadAllReply >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::DataBusReadAllReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::DataBusReadLastRequest* Arena::CreateMaybeMessage< ::metamoto::services::DataBusReadLastRequest >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::DataBusReadLastRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::DataBusReadLastReply* Arena::CreateMaybeMessage< ::metamoto::services::DataBusReadLastReply >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::DataBusReadLastReply >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
