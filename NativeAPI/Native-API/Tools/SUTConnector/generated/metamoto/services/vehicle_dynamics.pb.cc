// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metamoto/services/vehicle_dynamics.proto

#include "metamoto/services/vehicle_dynamics.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fstruct_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fstruct_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListValue;
}  // namespace protobuf_google_2fprotobuf_2fstruct_2eproto
namespace protobuf_google_2fprotobuf_2fwrappers_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FloatValue;
}  // namespace protobuf_google_2fprotobuf_2fwrappers_2eproto
namespace protobuf_metamoto_2fmessages_2fvehicle_5fcontrols_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2fmessages_2fvehicle_5fcontrols_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_VehicleControls;
}  // namespace protobuf_metamoto_2fmessages_2fvehicle_5fcontrols_2eproto
namespace protobuf_metamoto_2ftypes_2fresult_5fmetadata_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fresult_5fmetadata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ResultMetadata;
}  // namespace protobuf_metamoto_2ftypes_2fresult_5fmetadata_2eproto
namespace protobuf_metamoto_2ftypes_2frigid_5fbody_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2frigid_5fbody_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TireContact;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2frigid_5fbody_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_RigidBody;
}  // namespace protobuf_metamoto_2ftypes_2frigid_5fbody_2eproto
namespace protobuf_metamoto_2ftypes_2fterrain_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fterrain_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Terrain;
}  // namespace protobuf_metamoto_2ftypes_2fterrain_2eproto
namespace metamoto {
namespace services {
class VehicleDynamicsInitializeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VehicleDynamicsInitializeRequest>
      _instance;
} _VehicleDynamicsInitializeRequest_default_instance_;
class VehicleDynamicsInitializeReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VehicleDynamicsInitializeReply>
      _instance;
} _VehicleDynamicsInitializeReply_default_instance_;
class VehicleDynamicsUpdateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VehicleDynamicsUpdateRequest>
      _instance;
} _VehicleDynamicsUpdateRequest_default_instance_;
class VehicleDynamicsUpdateReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VehicleDynamicsUpdateReply>
      _instance;
} _VehicleDynamicsUpdateReply_default_instance_;
class VehicleDynamicsCloseRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VehicleDynamicsCloseRequest>
      _instance;
} _VehicleDynamicsCloseRequest_default_instance_;
class VehicleDynamicsCloseReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VehicleDynamicsCloseReply>
      _instance;
} _VehicleDynamicsCloseReply_default_instance_;
}  // namespace services
}  // namespace metamoto
namespace protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto {
static void InitDefaultsVehicleDynamicsInitializeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_VehicleDynamicsInitializeRequest_default_instance_;
    new (ptr) ::metamoto::services::VehicleDynamicsInitializeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::VehicleDynamicsInitializeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_VehicleDynamicsInitializeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsVehicleDynamicsInitializeRequest}, {
      &protobuf_google_2fprotobuf_2fstruct_2eproto::scc_info_ListValue.base,
      &protobuf_metamoto_2ftypes_2frigid_5fbody_2eproto::scc_info_RigidBody.base,
      &protobuf_metamoto_2ftypes_2frigid_5fbody_2eproto::scc_info_TireContact.base,
      &protobuf_metamoto_2ftypes_2fterrain_2eproto::scc_info_Terrain.base,}};

static void InitDefaultsVehicleDynamicsInitializeReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_VehicleDynamicsInitializeReply_default_instance_;
    new (ptr) ::metamoto::services::VehicleDynamicsInitializeReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::VehicleDynamicsInitializeReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VehicleDynamicsInitializeReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVehicleDynamicsInitializeReply}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_FloatValue.base,}};

static void InitDefaultsVehicleDynamicsUpdateRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_VehicleDynamicsUpdateRequest_default_instance_;
    new (ptr) ::metamoto::services::VehicleDynamicsUpdateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::VehicleDynamicsUpdateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_VehicleDynamicsUpdateRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsVehicleDynamicsUpdateRequest}, {
      &protobuf_metamoto_2fmessages_2fvehicle_5fcontrols_2eproto::scc_info_VehicleControls.base,
      &protobuf_metamoto_2ftypes_2frigid_5fbody_2eproto::scc_info_TireContact.base,}};

static void InitDefaultsVehicleDynamicsUpdateReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_VehicleDynamicsUpdateReply_default_instance_;
    new (ptr) ::metamoto::services::VehicleDynamicsUpdateReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::VehicleDynamicsUpdateReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VehicleDynamicsUpdateReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVehicleDynamicsUpdateReply}, {
      &protobuf_metamoto_2ftypes_2frigid_5fbody_2eproto::scc_info_RigidBody.base,}};

static void InitDefaultsVehicleDynamicsCloseRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_VehicleDynamicsCloseRequest_default_instance_;
    new (ptr) ::metamoto::services::VehicleDynamicsCloseRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::VehicleDynamicsCloseRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VehicleDynamicsCloseRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVehicleDynamicsCloseRequest}, {}};

static void InitDefaultsVehicleDynamicsCloseReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::services::_VehicleDynamicsCloseReply_default_instance_;
    new (ptr) ::metamoto::services::VehicleDynamicsCloseReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::services::VehicleDynamicsCloseReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VehicleDynamicsCloseReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVehicleDynamicsCloseReply}, {
      &protobuf_metamoto_2ftypes_2fresult_5fmetadata_2eproto::scc_info_ResultMetadata.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_VehicleDynamicsInitializeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VehicleDynamicsInitializeReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VehicleDynamicsUpdateRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VehicleDynamicsUpdateReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VehicleDynamicsCloseRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VehicleDynamicsCloseReply.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::VehicleDynamicsInitializeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::VehicleDynamicsInitializeRequest, parameters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::VehicleDynamicsInitializeRequest, results_directory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::VehicleDynamicsInitializeRequest, rigid_bodies_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::VehicleDynamicsInitializeRequest, tire_contacts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::VehicleDynamicsInitializeRequest, terrain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::VehicleDynamicsInitializeRequest, front_hitch_offsets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::VehicleDynamicsInitializeRequest, rear_hitch_offsets_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::VehicleDynamicsInitializeReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::VehicleDynamicsInitializeReply, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::VehicleDynamicsInitializeReply, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::VehicleDynamicsInitializeReply, update_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::VehicleDynamicsInitializeReply, update_timeout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::VehicleDynamicsInitializeReply, max_steer_angle_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::VehicleDynamicsUpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::VehicleDynamicsUpdateRequest, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::VehicleDynamicsUpdateRequest, last_step_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::VehicleDynamicsUpdateRequest, next_step_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::VehicleDynamicsUpdateRequest, vehicle_controls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::VehicleDynamicsUpdateRequest, tire_contacts_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::VehicleDynamicsUpdateReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::VehicleDynamicsUpdateReply, next_update_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::VehicleDynamicsUpdateReply, rigid_bodies_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::VehicleDynamicsCloseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::VehicleDynamicsCloseReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::services::VehicleDynamicsCloseReply, results_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::metamoto::services::VehicleDynamicsInitializeRequest)},
  { 12, -1, sizeof(::metamoto::services::VehicleDynamicsInitializeReply)},
  { 22, -1, sizeof(::metamoto::services::VehicleDynamicsUpdateRequest)},
  { 32, -1, sizeof(::metamoto::services::VehicleDynamicsUpdateReply)},
  { 39, -1, sizeof(::metamoto::services::VehicleDynamicsCloseRequest)},
  { 44, -1, sizeof(::metamoto::services::VehicleDynamicsCloseReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_VehicleDynamicsInitializeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_VehicleDynamicsInitializeReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_VehicleDynamicsUpdateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_VehicleDynamicsUpdateReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_VehicleDynamicsCloseRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::services::_VehicleDynamicsCloseReply_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "metamoto/services/vehicle_dynamics.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n(metamoto/services/vehicle_dynamics.pro"
      "to\022\021metamoto.services\032\034google/protobuf/s"
      "truct.proto\032\036google/protobuf/wrappers.pr"
      "oto\032$metamoto/types/result_metadata.prot"
      "o\032\034metamoto/types/terrain.proto\032\037metamot"
      "o/types/rigid_body.proto\032(metamoto/messa"
      "ges/vehicle_controls.proto\"\262\002\n VehicleDy"
      "namicsInitializeRequest\022+\n\nparameters\030\001 "
      "\001(\0132\027.google.protobuf.Struct\022\031\n\021results_"
      "directory\030\002 \001(\t\022/\n\014rigid_bodies\030\003 \003(\0132\031."
      "metamoto.types.RigidBody\0222\n\rtire_contact"
      "s\030\004 \003(\0132\033.metamoto.types.TireContact\022(\n\007"
      "terrain\030\005 \001(\0132\027.metamoto.types.Terrain\022\033"
      "\n\023front_hitch_offsets\030\006 \003(\002\022\032\n\022rear_hitc"
      "h_offsets\030\007 \003(\002\"\242\001\n\036VehicleDynamicsIniti"
      "alizeReply\022\014\n\004name\030\001 \001(\t\022\017\n\007version\030\002 \001("
      "\t\022\023\n\013update_rate\030\003 \001(\001\022\026\n\016update_timeout"
      "\030\004 \001(\r\0224\n\017max_steer_angle\030\005 \001(\0132\033.google"
      ".protobuf.FloatValue\"\316\001\n\034VehicleDynamics"
      "UpdateRequest\022\014\n\004time\030\001 \001(\001\022\026\n\016last_step"
      "_time\030\002 \001(\001\022\026\n\016next_step_time\030\003 \001(\001\022<\n\020v"
      "ehicle_controls\030\004 \001(\0132\".metamoto.message"
      "s.VehicleControls\0222\n\rtire_contacts\030\005 \003(\013"
      "2\033.metamoto.types.TireContact\"g\n\032Vehicle"
      "DynamicsUpdateReply\022\030\n\020next_update_time\030"
      "\001 \001(\001\022/\n\014rigid_bodies\030\002 \003(\0132\031.metamoto.t"
      "ypes.RigidBody\"\035\n\033VehicleDynamicsCloseRe"
      "quest\"L\n\031VehicleDynamicsCloseReply\022/\n\007re"
      "sults\030\001 \003(\0132\036.metamoto.types.ResultMetad"
      "ata2\336\002\n\017VehicleDynamics\022v\n\nInitialize\0223."
      "metamoto.services.VehicleDynamicsInitial"
      "izeRequest\0321.metamoto.services.VehicleDy"
      "namicsInitializeReply\"\000\022j\n\006Update\022/.meta"
      "moto.services.VehicleDynamicsUpdateReque"
      "st\032-.metamoto.services.VehicleDynamicsUp"
      "dateReply\"\000\022g\n\005Close\022..metamoto.services"
      ".VehicleDynamicsCloseRequest\032,.metamoto."
      "services.VehicleDynamicsCloseReply\"\000B\024\252\002"
      "\021Metamoto.Servicesb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1546);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "metamoto/services/vehicle_dynamics.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fstruct_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2fresult_5fmetadata_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2fterrain_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2frigid_5fbody_2eproto::AddDescriptors();
  ::protobuf_metamoto_2fmessages_2fvehicle_5fcontrols_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto
namespace metamoto {
namespace services {

// ===================================================================

void VehicleDynamicsInitializeRequest::InitAsDefaultInstance() {
  ::metamoto::services::_VehicleDynamicsInitializeRequest_default_instance_._instance.get_mutable()->parameters_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
  ::metamoto::services::_VehicleDynamicsInitializeRequest_default_instance_._instance.get_mutable()->terrain_ = const_cast< ::metamoto::types::Terrain*>(
      ::metamoto::types::Terrain::internal_default_instance());
}
void VehicleDynamicsInitializeRequest::clear_parameters() {
  if (GetArenaNoVirtual() == NULL && parameters_ != NULL) {
    delete parameters_;
  }
  parameters_ = NULL;
}
void VehicleDynamicsInitializeRequest::clear_rigid_bodies() {
  rigid_bodies_.Clear();
}
void VehicleDynamicsInitializeRequest::clear_tire_contacts() {
  tire_contacts_.Clear();
}
void VehicleDynamicsInitializeRequest::clear_terrain() {
  if (GetArenaNoVirtual() == NULL && terrain_ != NULL) {
    delete terrain_;
  }
  terrain_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleDynamicsInitializeRequest::kParametersFieldNumber;
const int VehicleDynamicsInitializeRequest::kResultsDirectoryFieldNumber;
const int VehicleDynamicsInitializeRequest::kRigidBodiesFieldNumber;
const int VehicleDynamicsInitializeRequest::kTireContactsFieldNumber;
const int VehicleDynamicsInitializeRequest::kTerrainFieldNumber;
const int VehicleDynamicsInitializeRequest::kFrontHitchOffsetsFieldNumber;
const int VehicleDynamicsInitializeRequest::kRearHitchOffsetsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleDynamicsInitializeRequest::VehicleDynamicsInitializeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::scc_info_VehicleDynamicsInitializeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.VehicleDynamicsInitializeRequest)
}
VehicleDynamicsInitializeRequest::VehicleDynamicsInitializeRequest(const VehicleDynamicsInitializeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rigid_bodies_(from.rigid_bodies_),
      tire_contacts_(from.tire_contacts_),
      front_hitch_offsets_(from.front_hitch_offsets_),
      rear_hitch_offsets_(from.rear_hitch_offsets_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  results_directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.results_directory().size() > 0) {
    results_directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.results_directory_);
  }
  if (from.has_parameters()) {
    parameters_ = new ::google::protobuf::Struct(*from.parameters_);
  } else {
    parameters_ = NULL;
  }
  if (from.has_terrain()) {
    terrain_ = new ::metamoto::types::Terrain(*from.terrain_);
  } else {
    terrain_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:metamoto.services.VehicleDynamicsInitializeRequest)
}

void VehicleDynamicsInitializeRequest::SharedCtor() {
  results_directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&parameters_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&terrain_) -
      reinterpret_cast<char*>(&parameters_)) + sizeof(terrain_));
}

VehicleDynamicsInitializeRequest::~VehicleDynamicsInitializeRequest() {
  // @@protoc_insertion_point(destructor:metamoto.services.VehicleDynamicsInitializeRequest)
  SharedDtor();
}

void VehicleDynamicsInitializeRequest::SharedDtor() {
  results_directory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete parameters_;
  if (this != internal_default_instance()) delete terrain_;
}

void VehicleDynamicsInitializeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VehicleDynamicsInitializeRequest::descriptor() {
  ::protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleDynamicsInitializeRequest& VehicleDynamicsInitializeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::scc_info_VehicleDynamicsInitializeRequest.base);
  return *internal_default_instance();
}


void VehicleDynamicsInitializeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.VehicleDynamicsInitializeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rigid_bodies_.Clear();
  tire_contacts_.Clear();
  front_hitch_offsets_.Clear();
  rear_hitch_offsets_.Clear();
  results_directory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && parameters_ != NULL) {
    delete parameters_;
  }
  parameters_ = NULL;
  if (GetArenaNoVirtual() == NULL && terrain_ != NULL) {
    delete terrain_;
  }
  terrain_ = NULL;
  _internal_metadata_.Clear();
}

bool VehicleDynamicsInitializeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.VehicleDynamicsInitializeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Struct parameters = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string results_directory = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_results_directory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->results_directory().data(), static_cast<int>(this->results_directory().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.services.VehicleDynamicsInitializeRequest.results_directory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metamoto.types.RigidBody rigid_bodies = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rigid_bodies()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metamoto.types.TireContact tire_contacts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tire_contacts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.Terrain terrain = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_terrain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float front_hitch_offsets = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_front_hitch_offsets())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 50u, input, this->mutable_front_hitch_offsets())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float rear_hitch_offsets = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_rear_hitch_offsets())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 58u, input, this->mutable_rear_hitch_offsets())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.VehicleDynamicsInitializeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.VehicleDynamicsInitializeRequest)
  return false;
#undef DO_
}

void VehicleDynamicsInitializeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.VehicleDynamicsInitializeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Struct parameters = 1;
  if (this->has_parameters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_parameters(), output);
  }

  // string results_directory = 2;
  if (this->results_directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->results_directory().data(), static_cast<int>(this->results_directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.VehicleDynamicsInitializeRequest.results_directory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->results_directory(), output);
  }

  // repeated .metamoto.types.RigidBody rigid_bodies = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rigid_bodies_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->rigid_bodies(static_cast<int>(i)),
      output);
  }

  // repeated .metamoto.types.TireContact tire_contacts = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tire_contacts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->tire_contacts(static_cast<int>(i)),
      output);
  }

  // .metamoto.types.Terrain terrain = 5;
  if (this->has_terrain()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_terrain(), output);
  }

  // repeated float front_hitch_offsets = 6;
  if (this->front_hitch_offsets_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _front_hitch_offsets_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->front_hitch_offsets().data(), this->front_hitch_offsets_size(), output);
  }

  // repeated float rear_hitch_offsets = 7;
  if (this->rear_hitch_offsets_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _rear_hitch_offsets_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->rear_hitch_offsets().data(), this->rear_hitch_offsets_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.VehicleDynamicsInitializeRequest)
}

::google::protobuf::uint8* VehicleDynamicsInitializeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.VehicleDynamicsInitializeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Struct parameters = 1;
  if (this->has_parameters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_parameters(), deterministic, target);
  }

  // string results_directory = 2;
  if (this->results_directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->results_directory().data(), static_cast<int>(this->results_directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.VehicleDynamicsInitializeRequest.results_directory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->results_directory(), target);
  }

  // repeated .metamoto.types.RigidBody rigid_bodies = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rigid_bodies_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->rigid_bodies(static_cast<int>(i)), deterministic, target);
  }

  // repeated .metamoto.types.TireContact tire_contacts = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tire_contacts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->tire_contacts(static_cast<int>(i)), deterministic, target);
  }

  // .metamoto.types.Terrain terrain = 5;
  if (this->has_terrain()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_terrain(), deterministic, target);
  }

  // repeated float front_hitch_offsets = 6;
  if (this->front_hitch_offsets_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _front_hitch_offsets_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->front_hitch_offsets_, target);
  }

  // repeated float rear_hitch_offsets = 7;
  if (this->rear_hitch_offsets_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _rear_hitch_offsets_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->rear_hitch_offsets_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.VehicleDynamicsInitializeRequest)
  return target;
}

size_t VehicleDynamicsInitializeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.VehicleDynamicsInitializeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .metamoto.types.RigidBody rigid_bodies = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->rigid_bodies_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rigid_bodies(static_cast<int>(i)));
    }
  }

  // repeated .metamoto.types.TireContact tire_contacts = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->tire_contacts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tire_contacts(static_cast<int>(i)));
    }
  }

  // repeated float front_hitch_offsets = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->front_hitch_offsets_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _front_hitch_offsets_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float rear_hitch_offsets = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->rear_hitch_offsets_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rear_hitch_offsets_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string results_directory = 2;
  if (this->results_directory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->results_directory());
  }

  // .google.protobuf.Struct parameters = 1;
  if (this->has_parameters()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *parameters_);
  }

  // .metamoto.types.Terrain terrain = 5;
  if (this->has_terrain()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *terrain_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleDynamicsInitializeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.VehicleDynamicsInitializeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleDynamicsInitializeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleDynamicsInitializeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.VehicleDynamicsInitializeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.VehicleDynamicsInitializeRequest)
    MergeFrom(*source);
  }
}

void VehicleDynamicsInitializeRequest::MergeFrom(const VehicleDynamicsInitializeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.VehicleDynamicsInitializeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rigid_bodies_.MergeFrom(from.rigid_bodies_);
  tire_contacts_.MergeFrom(from.tire_contacts_);
  front_hitch_offsets_.MergeFrom(from.front_hitch_offsets_);
  rear_hitch_offsets_.MergeFrom(from.rear_hitch_offsets_);
  if (from.results_directory().size() > 0) {

    results_directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.results_directory_);
  }
  if (from.has_parameters()) {
    mutable_parameters()->::google::protobuf::Struct::MergeFrom(from.parameters());
  }
  if (from.has_terrain()) {
    mutable_terrain()->::metamoto::types::Terrain::MergeFrom(from.terrain());
  }
}

void VehicleDynamicsInitializeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.VehicleDynamicsInitializeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleDynamicsInitializeRequest::CopyFrom(const VehicleDynamicsInitializeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.VehicleDynamicsInitializeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleDynamicsInitializeRequest::IsInitialized() const {
  return true;
}

void VehicleDynamicsInitializeRequest::Swap(VehicleDynamicsInitializeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleDynamicsInitializeRequest::InternalSwap(VehicleDynamicsInitializeRequest* other) {
  using std::swap;
  CastToBase(&rigid_bodies_)->InternalSwap(CastToBase(&other->rigid_bodies_));
  CastToBase(&tire_contacts_)->InternalSwap(CastToBase(&other->tire_contacts_));
  front_hitch_offsets_.InternalSwap(&other->front_hitch_offsets_);
  rear_hitch_offsets_.InternalSwap(&other->rear_hitch_offsets_);
  results_directory_.Swap(&other->results_directory_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(parameters_, other->parameters_);
  swap(terrain_, other->terrain_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VehicleDynamicsInitializeRequest::GetMetadata() const {
  protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VehicleDynamicsInitializeReply::InitAsDefaultInstance() {
  ::metamoto::services::_VehicleDynamicsInitializeReply_default_instance_._instance.get_mutable()->max_steer_angle_ = const_cast< ::google::protobuf::FloatValue*>(
      ::google::protobuf::FloatValue::internal_default_instance());
}
void VehicleDynamicsInitializeReply::clear_max_steer_angle() {
  if (GetArenaNoVirtual() == NULL && max_steer_angle_ != NULL) {
    delete max_steer_angle_;
  }
  max_steer_angle_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleDynamicsInitializeReply::kNameFieldNumber;
const int VehicleDynamicsInitializeReply::kVersionFieldNumber;
const int VehicleDynamicsInitializeReply::kUpdateRateFieldNumber;
const int VehicleDynamicsInitializeReply::kUpdateTimeoutFieldNumber;
const int VehicleDynamicsInitializeReply::kMaxSteerAngleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleDynamicsInitializeReply::VehicleDynamicsInitializeReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::scc_info_VehicleDynamicsInitializeReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.VehicleDynamicsInitializeReply)
}
VehicleDynamicsInitializeReply::VehicleDynamicsInitializeReply(const VehicleDynamicsInitializeReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.has_max_steer_angle()) {
    max_steer_angle_ = new ::google::protobuf::FloatValue(*from.max_steer_angle_);
  } else {
    max_steer_angle_ = NULL;
  }
  ::memcpy(&update_rate_, &from.update_rate_,
    static_cast<size_t>(reinterpret_cast<char*>(&update_timeout_) -
    reinterpret_cast<char*>(&update_rate_)) + sizeof(update_timeout_));
  // @@protoc_insertion_point(copy_constructor:metamoto.services.VehicleDynamicsInitializeReply)
}

void VehicleDynamicsInitializeReply::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&max_steer_angle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_timeout_) -
      reinterpret_cast<char*>(&max_steer_angle_)) + sizeof(update_timeout_));
}

VehicleDynamicsInitializeReply::~VehicleDynamicsInitializeReply() {
  // @@protoc_insertion_point(destructor:metamoto.services.VehicleDynamicsInitializeReply)
  SharedDtor();
}

void VehicleDynamicsInitializeReply::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete max_steer_angle_;
}

void VehicleDynamicsInitializeReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VehicleDynamicsInitializeReply::descriptor() {
  ::protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleDynamicsInitializeReply& VehicleDynamicsInitializeReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::scc_info_VehicleDynamicsInitializeReply.base);
  return *internal_default_instance();
}


void VehicleDynamicsInitializeReply::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.VehicleDynamicsInitializeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && max_steer_angle_ != NULL) {
    delete max_steer_angle_;
  }
  max_steer_angle_ = NULL;
  ::memset(&update_rate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_timeout_) -
      reinterpret_cast<char*>(&update_rate_)) + sizeof(update_timeout_));
  _internal_metadata_.Clear();
}

bool VehicleDynamicsInitializeReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.VehicleDynamicsInitializeReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.services.VehicleDynamicsInitializeReply.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.services.VehicleDynamicsInitializeReply.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double update_rate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &update_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 update_timeout = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &update_timeout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.FloatValue max_steer_angle = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_steer_angle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.VehicleDynamicsInitializeReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.VehicleDynamicsInitializeReply)
  return false;
#undef DO_
}

void VehicleDynamicsInitializeReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.VehicleDynamicsInitializeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.VehicleDynamicsInitializeReply.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.VehicleDynamicsInitializeReply.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->version(), output);
  }

  // double update_rate = 3;
  if (this->update_rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->update_rate(), output);
  }

  // uint32 update_timeout = 4;
  if (this->update_timeout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->update_timeout(), output);
  }

  // .google.protobuf.FloatValue max_steer_angle = 5;
  if (this->has_max_steer_angle()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_max_steer_angle(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.VehicleDynamicsInitializeReply)
}

::google::protobuf::uint8* VehicleDynamicsInitializeReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.VehicleDynamicsInitializeReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.VehicleDynamicsInitializeReply.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.services.VehicleDynamicsInitializeReply.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->version(), target);
  }

  // double update_rate = 3;
  if (this->update_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->update_rate(), target);
  }

  // uint32 update_timeout = 4;
  if (this->update_timeout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->update_timeout(), target);
  }

  // .google.protobuf.FloatValue max_steer_angle = 5;
  if (this->has_max_steer_angle()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_max_steer_angle(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.VehicleDynamicsInitializeReply)
  return target;
}

size_t VehicleDynamicsInitializeReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.VehicleDynamicsInitializeReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string version = 2;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // .google.protobuf.FloatValue max_steer_angle = 5;
  if (this->has_max_steer_angle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *max_steer_angle_);
  }

  // double update_rate = 3;
  if (this->update_rate() != 0) {
    total_size += 1 + 8;
  }

  // uint32 update_timeout = 4;
  if (this->update_timeout() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->update_timeout());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleDynamicsInitializeReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.VehicleDynamicsInitializeReply)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleDynamicsInitializeReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleDynamicsInitializeReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.VehicleDynamicsInitializeReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.VehicleDynamicsInitializeReply)
    MergeFrom(*source);
  }
}

void VehicleDynamicsInitializeReply::MergeFrom(const VehicleDynamicsInitializeReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.VehicleDynamicsInitializeReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.has_max_steer_angle()) {
    mutable_max_steer_angle()->::google::protobuf::FloatValue::MergeFrom(from.max_steer_angle());
  }
  if (from.update_rate() != 0) {
    set_update_rate(from.update_rate());
  }
  if (from.update_timeout() != 0) {
    set_update_timeout(from.update_timeout());
  }
}

void VehicleDynamicsInitializeReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.VehicleDynamicsInitializeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleDynamicsInitializeReply::CopyFrom(const VehicleDynamicsInitializeReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.VehicleDynamicsInitializeReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleDynamicsInitializeReply::IsInitialized() const {
  return true;
}

void VehicleDynamicsInitializeReply::Swap(VehicleDynamicsInitializeReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleDynamicsInitializeReply::InternalSwap(VehicleDynamicsInitializeReply* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(max_steer_angle_, other->max_steer_angle_);
  swap(update_rate_, other->update_rate_);
  swap(update_timeout_, other->update_timeout_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VehicleDynamicsInitializeReply::GetMetadata() const {
  protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VehicleDynamicsUpdateRequest::InitAsDefaultInstance() {
  ::metamoto::services::_VehicleDynamicsUpdateRequest_default_instance_._instance.get_mutable()->vehicle_controls_ = const_cast< ::metamoto::messages::VehicleControls*>(
      ::metamoto::messages::VehicleControls::internal_default_instance());
}
void VehicleDynamicsUpdateRequest::clear_vehicle_controls() {
  if (GetArenaNoVirtual() == NULL && vehicle_controls_ != NULL) {
    delete vehicle_controls_;
  }
  vehicle_controls_ = NULL;
}
void VehicleDynamicsUpdateRequest::clear_tire_contacts() {
  tire_contacts_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleDynamicsUpdateRequest::kTimeFieldNumber;
const int VehicleDynamicsUpdateRequest::kLastStepTimeFieldNumber;
const int VehicleDynamicsUpdateRequest::kNextStepTimeFieldNumber;
const int VehicleDynamicsUpdateRequest::kVehicleControlsFieldNumber;
const int VehicleDynamicsUpdateRequest::kTireContactsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleDynamicsUpdateRequest::VehicleDynamicsUpdateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::scc_info_VehicleDynamicsUpdateRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.VehicleDynamicsUpdateRequest)
}
VehicleDynamicsUpdateRequest::VehicleDynamicsUpdateRequest(const VehicleDynamicsUpdateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tire_contacts_(from.tire_contacts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_vehicle_controls()) {
    vehicle_controls_ = new ::metamoto::messages::VehicleControls(*from.vehicle_controls_);
  } else {
    vehicle_controls_ = NULL;
  }
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&next_step_time_) -
    reinterpret_cast<char*>(&time_)) + sizeof(next_step_time_));
  // @@protoc_insertion_point(copy_constructor:metamoto.services.VehicleDynamicsUpdateRequest)
}

void VehicleDynamicsUpdateRequest::SharedCtor() {
  ::memset(&vehicle_controls_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&next_step_time_) -
      reinterpret_cast<char*>(&vehicle_controls_)) + sizeof(next_step_time_));
}

VehicleDynamicsUpdateRequest::~VehicleDynamicsUpdateRequest() {
  // @@protoc_insertion_point(destructor:metamoto.services.VehicleDynamicsUpdateRequest)
  SharedDtor();
}

void VehicleDynamicsUpdateRequest::SharedDtor() {
  if (this != internal_default_instance()) delete vehicle_controls_;
}

void VehicleDynamicsUpdateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VehicleDynamicsUpdateRequest::descriptor() {
  ::protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleDynamicsUpdateRequest& VehicleDynamicsUpdateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::scc_info_VehicleDynamicsUpdateRequest.base);
  return *internal_default_instance();
}


void VehicleDynamicsUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.VehicleDynamicsUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tire_contacts_.Clear();
  if (GetArenaNoVirtual() == NULL && vehicle_controls_ != NULL) {
    delete vehicle_controls_;
  }
  vehicle_controls_ = NULL;
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&next_step_time_) -
      reinterpret_cast<char*>(&time_)) + sizeof(next_step_time_));
  _internal_metadata_.Clear();
}

bool VehicleDynamicsUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.VehicleDynamicsUpdateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double last_step_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &last_step_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double next_step_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &next_step_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.messages.VehicleControls vehicle_controls = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vehicle_controls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metamoto.types.TireContact tire_contacts = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tire_contacts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.VehicleDynamicsUpdateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.VehicleDynamicsUpdateRequest)
  return false;
#undef DO_
}

void VehicleDynamicsUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.VehicleDynamicsUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->time(), output);
  }

  // double last_step_time = 2;
  if (this->last_step_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->last_step_time(), output);
  }

  // double next_step_time = 3;
  if (this->next_step_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->next_step_time(), output);
  }

  // .metamoto.messages.VehicleControls vehicle_controls = 4;
  if (this->has_vehicle_controls()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_vehicle_controls(), output);
  }

  // repeated .metamoto.types.TireContact tire_contacts = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tire_contacts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->tire_contacts(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.VehicleDynamicsUpdateRequest)
}

::google::protobuf::uint8* VehicleDynamicsUpdateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.VehicleDynamicsUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->time(), target);
  }

  // double last_step_time = 2;
  if (this->last_step_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->last_step_time(), target);
  }

  // double next_step_time = 3;
  if (this->next_step_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->next_step_time(), target);
  }

  // .metamoto.messages.VehicleControls vehicle_controls = 4;
  if (this->has_vehicle_controls()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_vehicle_controls(), deterministic, target);
  }

  // repeated .metamoto.types.TireContact tire_contacts = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tire_contacts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->tire_contacts(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.VehicleDynamicsUpdateRequest)
  return target;
}

size_t VehicleDynamicsUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.VehicleDynamicsUpdateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .metamoto.types.TireContact tire_contacts = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->tire_contacts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tire_contacts(static_cast<int>(i)));
    }
  }

  // .metamoto.messages.VehicleControls vehicle_controls = 4;
  if (this->has_vehicle_controls()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vehicle_controls_);
  }

  // double time = 1;
  if (this->time() != 0) {
    total_size += 1 + 8;
  }

  // double last_step_time = 2;
  if (this->last_step_time() != 0) {
    total_size += 1 + 8;
  }

  // double next_step_time = 3;
  if (this->next_step_time() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleDynamicsUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.VehicleDynamicsUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleDynamicsUpdateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleDynamicsUpdateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.VehicleDynamicsUpdateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.VehicleDynamicsUpdateRequest)
    MergeFrom(*source);
  }
}

void VehicleDynamicsUpdateRequest::MergeFrom(const VehicleDynamicsUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.VehicleDynamicsUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tire_contacts_.MergeFrom(from.tire_contacts_);
  if (from.has_vehicle_controls()) {
    mutable_vehicle_controls()->::metamoto::messages::VehicleControls::MergeFrom(from.vehicle_controls());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.last_step_time() != 0) {
    set_last_step_time(from.last_step_time());
  }
  if (from.next_step_time() != 0) {
    set_next_step_time(from.next_step_time());
  }
}

void VehicleDynamicsUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.VehicleDynamicsUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleDynamicsUpdateRequest::CopyFrom(const VehicleDynamicsUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.VehicleDynamicsUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleDynamicsUpdateRequest::IsInitialized() const {
  return true;
}

void VehicleDynamicsUpdateRequest::Swap(VehicleDynamicsUpdateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleDynamicsUpdateRequest::InternalSwap(VehicleDynamicsUpdateRequest* other) {
  using std::swap;
  CastToBase(&tire_contacts_)->InternalSwap(CastToBase(&other->tire_contacts_));
  swap(vehicle_controls_, other->vehicle_controls_);
  swap(time_, other->time_);
  swap(last_step_time_, other->last_step_time_);
  swap(next_step_time_, other->next_step_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VehicleDynamicsUpdateRequest::GetMetadata() const {
  protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VehicleDynamicsUpdateReply::InitAsDefaultInstance() {
}
void VehicleDynamicsUpdateReply::clear_rigid_bodies() {
  rigid_bodies_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleDynamicsUpdateReply::kNextUpdateTimeFieldNumber;
const int VehicleDynamicsUpdateReply::kRigidBodiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleDynamicsUpdateReply::VehicleDynamicsUpdateReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::scc_info_VehicleDynamicsUpdateReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.VehicleDynamicsUpdateReply)
}
VehicleDynamicsUpdateReply::VehicleDynamicsUpdateReply(const VehicleDynamicsUpdateReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rigid_bodies_(from.rigid_bodies_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_update_time_ = from.next_update_time_;
  // @@protoc_insertion_point(copy_constructor:metamoto.services.VehicleDynamicsUpdateReply)
}

void VehicleDynamicsUpdateReply::SharedCtor() {
  next_update_time_ = 0;
}

VehicleDynamicsUpdateReply::~VehicleDynamicsUpdateReply() {
  // @@protoc_insertion_point(destructor:metamoto.services.VehicleDynamicsUpdateReply)
  SharedDtor();
}

void VehicleDynamicsUpdateReply::SharedDtor() {
}

void VehicleDynamicsUpdateReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VehicleDynamicsUpdateReply::descriptor() {
  ::protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleDynamicsUpdateReply& VehicleDynamicsUpdateReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::scc_info_VehicleDynamicsUpdateReply.base);
  return *internal_default_instance();
}


void VehicleDynamicsUpdateReply::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.VehicleDynamicsUpdateReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rigid_bodies_.Clear();
  next_update_time_ = 0;
  _internal_metadata_.Clear();
}

bool VehicleDynamicsUpdateReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.VehicleDynamicsUpdateReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double next_update_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &next_update_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metamoto.types.RigidBody rigid_bodies = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rigid_bodies()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.VehicleDynamicsUpdateReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.VehicleDynamicsUpdateReply)
  return false;
#undef DO_
}

void VehicleDynamicsUpdateReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.VehicleDynamicsUpdateReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double next_update_time = 1;
  if (this->next_update_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->next_update_time(), output);
  }

  // repeated .metamoto.types.RigidBody rigid_bodies = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rigid_bodies_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->rigid_bodies(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.VehicleDynamicsUpdateReply)
}

::google::protobuf::uint8* VehicleDynamicsUpdateReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.VehicleDynamicsUpdateReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double next_update_time = 1;
  if (this->next_update_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->next_update_time(), target);
  }

  // repeated .metamoto.types.RigidBody rigid_bodies = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rigid_bodies_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->rigid_bodies(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.VehicleDynamicsUpdateReply)
  return target;
}

size_t VehicleDynamicsUpdateReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.VehicleDynamicsUpdateReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .metamoto.types.RigidBody rigid_bodies = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->rigid_bodies_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rigid_bodies(static_cast<int>(i)));
    }
  }

  // double next_update_time = 1;
  if (this->next_update_time() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleDynamicsUpdateReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.VehicleDynamicsUpdateReply)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleDynamicsUpdateReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleDynamicsUpdateReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.VehicleDynamicsUpdateReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.VehicleDynamicsUpdateReply)
    MergeFrom(*source);
  }
}

void VehicleDynamicsUpdateReply::MergeFrom(const VehicleDynamicsUpdateReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.VehicleDynamicsUpdateReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rigid_bodies_.MergeFrom(from.rigid_bodies_);
  if (from.next_update_time() != 0) {
    set_next_update_time(from.next_update_time());
  }
}

void VehicleDynamicsUpdateReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.VehicleDynamicsUpdateReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleDynamicsUpdateReply::CopyFrom(const VehicleDynamicsUpdateReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.VehicleDynamicsUpdateReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleDynamicsUpdateReply::IsInitialized() const {
  return true;
}

void VehicleDynamicsUpdateReply::Swap(VehicleDynamicsUpdateReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleDynamicsUpdateReply::InternalSwap(VehicleDynamicsUpdateReply* other) {
  using std::swap;
  CastToBase(&rigid_bodies_)->InternalSwap(CastToBase(&other->rigid_bodies_));
  swap(next_update_time_, other->next_update_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VehicleDynamicsUpdateReply::GetMetadata() const {
  protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VehicleDynamicsCloseRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleDynamicsCloseRequest::VehicleDynamicsCloseRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::scc_info_VehicleDynamicsCloseRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.VehicleDynamicsCloseRequest)
}
VehicleDynamicsCloseRequest::VehicleDynamicsCloseRequest(const VehicleDynamicsCloseRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:metamoto.services.VehicleDynamicsCloseRequest)
}

void VehicleDynamicsCloseRequest::SharedCtor() {
}

VehicleDynamicsCloseRequest::~VehicleDynamicsCloseRequest() {
  // @@protoc_insertion_point(destructor:metamoto.services.VehicleDynamicsCloseRequest)
  SharedDtor();
}

void VehicleDynamicsCloseRequest::SharedDtor() {
}

void VehicleDynamicsCloseRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VehicleDynamicsCloseRequest::descriptor() {
  ::protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleDynamicsCloseRequest& VehicleDynamicsCloseRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::scc_info_VehicleDynamicsCloseRequest.base);
  return *internal_default_instance();
}


void VehicleDynamicsCloseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.VehicleDynamicsCloseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool VehicleDynamicsCloseRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.VehicleDynamicsCloseRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.VehicleDynamicsCloseRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.VehicleDynamicsCloseRequest)
  return false;
#undef DO_
}

void VehicleDynamicsCloseRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.VehicleDynamicsCloseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.VehicleDynamicsCloseRequest)
}

::google::protobuf::uint8* VehicleDynamicsCloseRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.VehicleDynamicsCloseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.VehicleDynamicsCloseRequest)
  return target;
}

size_t VehicleDynamicsCloseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.VehicleDynamicsCloseRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleDynamicsCloseRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.VehicleDynamicsCloseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleDynamicsCloseRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleDynamicsCloseRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.VehicleDynamicsCloseRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.VehicleDynamicsCloseRequest)
    MergeFrom(*source);
  }
}

void VehicleDynamicsCloseRequest::MergeFrom(const VehicleDynamicsCloseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.VehicleDynamicsCloseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void VehicleDynamicsCloseRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.VehicleDynamicsCloseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleDynamicsCloseRequest::CopyFrom(const VehicleDynamicsCloseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.VehicleDynamicsCloseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleDynamicsCloseRequest::IsInitialized() const {
  return true;
}

void VehicleDynamicsCloseRequest::Swap(VehicleDynamicsCloseRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleDynamicsCloseRequest::InternalSwap(VehicleDynamicsCloseRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VehicleDynamicsCloseRequest::GetMetadata() const {
  protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VehicleDynamicsCloseReply::InitAsDefaultInstance() {
}
void VehicleDynamicsCloseReply::clear_results() {
  results_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VehicleDynamicsCloseReply::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VehicleDynamicsCloseReply::VehicleDynamicsCloseReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::scc_info_VehicleDynamicsCloseReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.services.VehicleDynamicsCloseReply)
}
VehicleDynamicsCloseReply::VehicleDynamicsCloseReply(const VehicleDynamicsCloseReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      results_(from.results_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:metamoto.services.VehicleDynamicsCloseReply)
}

void VehicleDynamicsCloseReply::SharedCtor() {
}

VehicleDynamicsCloseReply::~VehicleDynamicsCloseReply() {
  // @@protoc_insertion_point(destructor:metamoto.services.VehicleDynamicsCloseReply)
  SharedDtor();
}

void VehicleDynamicsCloseReply::SharedDtor() {
}

void VehicleDynamicsCloseReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VehicleDynamicsCloseReply::descriptor() {
  ::protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VehicleDynamicsCloseReply& VehicleDynamicsCloseReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::scc_info_VehicleDynamicsCloseReply.base);
  return *internal_default_instance();
}


void VehicleDynamicsCloseReply::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.services.VehicleDynamicsCloseReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  _internal_metadata_.Clear();
}

bool VehicleDynamicsCloseReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.services.VehicleDynamicsCloseReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .metamoto.types.ResultMetadata results = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.services.VehicleDynamicsCloseReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.services.VehicleDynamicsCloseReply)
  return false;
#undef DO_
}

void VehicleDynamicsCloseReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.services.VehicleDynamicsCloseReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .metamoto.types.ResultMetadata results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->results(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.services.VehicleDynamicsCloseReply)
}

::google::protobuf::uint8* VehicleDynamicsCloseReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.services.VehicleDynamicsCloseReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .metamoto.types.ResultMetadata results = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->results(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.services.VehicleDynamicsCloseReply)
  return target;
}

size_t VehicleDynamicsCloseReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.services.VehicleDynamicsCloseReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .metamoto.types.ResultMetadata results = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->results(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleDynamicsCloseReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.services.VehicleDynamicsCloseReply)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleDynamicsCloseReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VehicleDynamicsCloseReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.services.VehicleDynamicsCloseReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.services.VehicleDynamicsCloseReply)
    MergeFrom(*source);
  }
}

void VehicleDynamicsCloseReply::MergeFrom(const VehicleDynamicsCloseReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.services.VehicleDynamicsCloseReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
}

void VehicleDynamicsCloseReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.services.VehicleDynamicsCloseReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleDynamicsCloseReply::CopyFrom(const VehicleDynamicsCloseReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.services.VehicleDynamicsCloseReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleDynamicsCloseReply::IsInitialized() const {
  return true;
}

void VehicleDynamicsCloseReply::Swap(VehicleDynamicsCloseReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VehicleDynamicsCloseReply::InternalSwap(VehicleDynamicsCloseReply* other) {
  using std::swap;
  CastToBase(&results_)->InternalSwap(CastToBase(&other->results_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VehicleDynamicsCloseReply::GetMetadata() const {
  protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fservices_2fvehicle_5fdynamics_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace services
}  // namespace metamoto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::VehicleDynamicsInitializeRequest* Arena::CreateMaybeMessage< ::metamoto::services::VehicleDynamicsInitializeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::VehicleDynamicsInitializeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::VehicleDynamicsInitializeReply* Arena::CreateMaybeMessage< ::metamoto::services::VehicleDynamicsInitializeReply >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::VehicleDynamicsInitializeReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::VehicleDynamicsUpdateRequest* Arena::CreateMaybeMessage< ::metamoto::services::VehicleDynamicsUpdateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::VehicleDynamicsUpdateRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::VehicleDynamicsUpdateReply* Arena::CreateMaybeMessage< ::metamoto::services::VehicleDynamicsUpdateReply >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::VehicleDynamicsUpdateReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::VehicleDynamicsCloseRequest* Arena::CreateMaybeMessage< ::metamoto::services::VehicleDynamicsCloseRequest >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::VehicleDynamicsCloseRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::services::VehicleDynamicsCloseReply* Arena::CreateMaybeMessage< ::metamoto::services::VehicleDynamicsCloseReply >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::services::VehicleDynamicsCloseReply >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
