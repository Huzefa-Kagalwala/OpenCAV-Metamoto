// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metamoto/services/scenario_service.proto

#ifndef PROTOBUF_INCLUDED_metamoto_2fservices_2fscenario_5fservice_2eproto
#define PROTOBUF_INCLUDED_metamoto_2fservices_2fscenario_5fservice_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "metamoto/messages/ground_truth.pb.h"
#include "metamoto/types/scenario.pb.h"
#include "metamoto/types/waypoint.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2fservices_2fscenario_5fservice_2eproto 

namespace protobuf_metamoto_2fservices_2fscenario_5fservice_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[10];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_metamoto_2fservices_2fscenario_5fservice_2eproto
namespace metamoto {
namespace services {
class ScenarioGetVehicleWaypointsReply;
class ScenarioGetVehicleWaypointsReplyDefaultTypeInternal;
extern ScenarioGetVehicleWaypointsReplyDefaultTypeInternal _ScenarioGetVehicleWaypointsReply_default_instance_;
class ScenarioGetVehicleWaypointsRequest;
class ScenarioGetVehicleWaypointsRequestDefaultTypeInternal;
extern ScenarioGetVehicleWaypointsRequestDefaultTypeInternal _ScenarioGetVehicleWaypointsRequest_default_instance_;
class ScenarioSetDriverModelReply;
class ScenarioSetDriverModelReplyDefaultTypeInternal;
extern ScenarioSetDriverModelReplyDefaultTypeInternal _ScenarioSetDriverModelReply_default_instance_;
class ScenarioSetDriverModelRequest;
class ScenarioSetDriverModelRequestDefaultTypeInternal;
extern ScenarioSetDriverModelRequestDefaultTypeInternal _ScenarioSetDriverModelRequest_default_instance_;
class ScenarioSetVehicleWaypointsReply;
class ScenarioSetVehicleWaypointsReplyDefaultTypeInternal;
extern ScenarioSetVehicleWaypointsReplyDefaultTypeInternal _ScenarioSetVehicleWaypointsReply_default_instance_;
class ScenarioSetVehicleWaypointsRequest;
class ScenarioSetVehicleWaypointsRequestDefaultTypeInternal;
extern ScenarioSetVehicleWaypointsRequestDefaultTypeInternal _ScenarioSetVehicleWaypointsRequest_default_instance_;
class ScenarioSetupReply;
class ScenarioSetupReplyDefaultTypeInternal;
extern ScenarioSetupReplyDefaultTypeInternal _ScenarioSetupReply_default_instance_;
class ScenarioSetupRequest;
class ScenarioSetupRequestDefaultTypeInternal;
extern ScenarioSetupRequestDefaultTypeInternal _ScenarioSetupRequest_default_instance_;
class ScenarioUpdateReply;
class ScenarioUpdateReplyDefaultTypeInternal;
extern ScenarioUpdateReplyDefaultTypeInternal _ScenarioUpdateReply_default_instance_;
class ScenarioUpdateRequest;
class ScenarioUpdateRequestDefaultTypeInternal;
extern ScenarioUpdateRequestDefaultTypeInternal _ScenarioUpdateRequest_default_instance_;
}  // namespace services
}  // namespace metamoto
namespace google {
namespace protobuf {
template<> ::metamoto::services::ScenarioGetVehicleWaypointsReply* Arena::CreateMaybeMessage<::metamoto::services::ScenarioGetVehicleWaypointsReply>(Arena*);
template<> ::metamoto::services::ScenarioGetVehicleWaypointsRequest* Arena::CreateMaybeMessage<::metamoto::services::ScenarioGetVehicleWaypointsRequest>(Arena*);
template<> ::metamoto::services::ScenarioSetDriverModelReply* Arena::CreateMaybeMessage<::metamoto::services::ScenarioSetDriverModelReply>(Arena*);
template<> ::metamoto::services::ScenarioSetDriverModelRequest* Arena::CreateMaybeMessage<::metamoto::services::ScenarioSetDriverModelRequest>(Arena*);
template<> ::metamoto::services::ScenarioSetVehicleWaypointsReply* Arena::CreateMaybeMessage<::metamoto::services::ScenarioSetVehicleWaypointsReply>(Arena*);
template<> ::metamoto::services::ScenarioSetVehicleWaypointsRequest* Arena::CreateMaybeMessage<::metamoto::services::ScenarioSetVehicleWaypointsRequest>(Arena*);
template<> ::metamoto::services::ScenarioSetupReply* Arena::CreateMaybeMessage<::metamoto::services::ScenarioSetupReply>(Arena*);
template<> ::metamoto::services::ScenarioSetupRequest* Arena::CreateMaybeMessage<::metamoto::services::ScenarioSetupRequest>(Arena*);
template<> ::metamoto::services::ScenarioUpdateReply* Arena::CreateMaybeMessage<::metamoto::services::ScenarioUpdateReply>(Arena*);
template<> ::metamoto::services::ScenarioUpdateRequest* Arena::CreateMaybeMessage<::metamoto::services::ScenarioUpdateRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace metamoto {
namespace services {

// ===================================================================

class ScenarioSetupRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metamoto.services.ScenarioSetupRequest) */ {
 public:
  ScenarioSetupRequest();
  virtual ~ScenarioSetupRequest();

  ScenarioSetupRequest(const ScenarioSetupRequest& from);

  inline ScenarioSetupRequest& operator=(const ScenarioSetupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScenarioSetupRequest(ScenarioSetupRequest&& from) noexcept
    : ScenarioSetupRequest() {
    *this = ::std::move(from);
  }

  inline ScenarioSetupRequest& operator=(ScenarioSetupRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScenarioSetupRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScenarioSetupRequest* internal_default_instance() {
    return reinterpret_cast<const ScenarioSetupRequest*>(
               &_ScenarioSetupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ScenarioSetupRequest* other);
  friend void swap(ScenarioSetupRequest& a, ScenarioSetupRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScenarioSetupRequest* New() const final {
    return CreateMaybeMessage<ScenarioSetupRequest>(NULL);
  }

  ScenarioSetupRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ScenarioSetupRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ScenarioSetupRequest& from);
  void MergeFrom(const ScenarioSetupRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioSetupRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .metamoto.types.Scenario scenario = 1;
  bool has_scenario() const;
  void clear_scenario();
  static const int kScenarioFieldNumber = 1;
  private:
  const ::metamoto::types::Scenario& _internal_scenario() const;
  public:
  const ::metamoto::types::Scenario& scenario() const;
  ::metamoto::types::Scenario* release_scenario();
  ::metamoto::types::Scenario* mutable_scenario();
  void set_allocated_scenario(::metamoto::types::Scenario* scenario);

  // @@protoc_insertion_point(class_scope:metamoto.services.ScenarioSetupRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::metamoto::types::Scenario* scenario_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_metamoto_2fservices_2fscenario_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScenarioSetupReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metamoto.services.ScenarioSetupReply) */ {
 public:
  ScenarioSetupReply();
  virtual ~ScenarioSetupReply();

  ScenarioSetupReply(const ScenarioSetupReply& from);

  inline ScenarioSetupReply& operator=(const ScenarioSetupReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScenarioSetupReply(ScenarioSetupReply&& from) noexcept
    : ScenarioSetupReply() {
    *this = ::std::move(from);
  }

  inline ScenarioSetupReply& operator=(ScenarioSetupReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScenarioSetupReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScenarioSetupReply* internal_default_instance() {
    return reinterpret_cast<const ScenarioSetupReply*>(
               &_ScenarioSetupReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ScenarioSetupReply* other);
  friend void swap(ScenarioSetupReply& a, ScenarioSetupReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScenarioSetupReply* New() const final {
    return CreateMaybeMessage<ScenarioSetupReply>(NULL);
  }

  ScenarioSetupReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ScenarioSetupReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ScenarioSetupReply& from);
  void MergeFrom(const ScenarioSetupReply& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioSetupReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:metamoto.services.ScenarioSetupReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_metamoto_2fservices_2fscenario_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScenarioUpdateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metamoto.services.ScenarioUpdateRequest) */ {
 public:
  ScenarioUpdateRequest();
  virtual ~ScenarioUpdateRequest();

  ScenarioUpdateRequest(const ScenarioUpdateRequest& from);

  inline ScenarioUpdateRequest& operator=(const ScenarioUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScenarioUpdateRequest(ScenarioUpdateRequest&& from) noexcept
    : ScenarioUpdateRequest() {
    *this = ::std::move(from);
  }

  inline ScenarioUpdateRequest& operator=(ScenarioUpdateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScenarioUpdateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScenarioUpdateRequest* internal_default_instance() {
    return reinterpret_cast<const ScenarioUpdateRequest*>(
               &_ScenarioUpdateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ScenarioUpdateRequest* other);
  friend void swap(ScenarioUpdateRequest& a, ScenarioUpdateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScenarioUpdateRequest* New() const final {
    return CreateMaybeMessage<ScenarioUpdateRequest>(NULL);
  }

  ScenarioUpdateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ScenarioUpdateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ScenarioUpdateRequest& from);
  void MergeFrom(const ScenarioUpdateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioUpdateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .metamoto.messages.GroundTruth ground_truth = 1;
  bool has_ground_truth() const;
  void clear_ground_truth();
  static const int kGroundTruthFieldNumber = 1;
  private:
  const ::metamoto::messages::GroundTruth& _internal_ground_truth() const;
  public:
  const ::metamoto::messages::GroundTruth& ground_truth() const;
  ::metamoto::messages::GroundTruth* release_ground_truth();
  ::metamoto::messages::GroundTruth* mutable_ground_truth();
  void set_allocated_ground_truth(::metamoto::messages::GroundTruth* ground_truth);

  // @@protoc_insertion_point(class_scope:metamoto.services.ScenarioUpdateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::metamoto::messages::GroundTruth* ground_truth_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_metamoto_2fservices_2fscenario_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScenarioUpdateReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metamoto.services.ScenarioUpdateReply) */ {
 public:
  ScenarioUpdateReply();
  virtual ~ScenarioUpdateReply();

  ScenarioUpdateReply(const ScenarioUpdateReply& from);

  inline ScenarioUpdateReply& operator=(const ScenarioUpdateReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScenarioUpdateReply(ScenarioUpdateReply&& from) noexcept
    : ScenarioUpdateReply() {
    *this = ::std::move(from);
  }

  inline ScenarioUpdateReply& operator=(ScenarioUpdateReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScenarioUpdateReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScenarioUpdateReply* internal_default_instance() {
    return reinterpret_cast<const ScenarioUpdateReply*>(
               &_ScenarioUpdateReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ScenarioUpdateReply* other);
  friend void swap(ScenarioUpdateReply& a, ScenarioUpdateReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScenarioUpdateReply* New() const final {
    return CreateMaybeMessage<ScenarioUpdateReply>(NULL);
  }

  ScenarioUpdateReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ScenarioUpdateReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ScenarioUpdateReply& from);
  void MergeFrom(const ScenarioUpdateReply& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioUpdateReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:metamoto.services.ScenarioUpdateReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_metamoto_2fservices_2fscenario_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScenarioGetVehicleWaypointsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metamoto.services.ScenarioGetVehicleWaypointsRequest) */ {
 public:
  ScenarioGetVehicleWaypointsRequest();
  virtual ~ScenarioGetVehicleWaypointsRequest();

  ScenarioGetVehicleWaypointsRequest(const ScenarioGetVehicleWaypointsRequest& from);

  inline ScenarioGetVehicleWaypointsRequest& operator=(const ScenarioGetVehicleWaypointsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScenarioGetVehicleWaypointsRequest(ScenarioGetVehicleWaypointsRequest&& from) noexcept
    : ScenarioGetVehicleWaypointsRequest() {
    *this = ::std::move(from);
  }

  inline ScenarioGetVehicleWaypointsRequest& operator=(ScenarioGetVehicleWaypointsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScenarioGetVehicleWaypointsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScenarioGetVehicleWaypointsRequest* internal_default_instance() {
    return reinterpret_cast<const ScenarioGetVehicleWaypointsRequest*>(
               &_ScenarioGetVehicleWaypointsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ScenarioGetVehicleWaypointsRequest* other);
  friend void swap(ScenarioGetVehicleWaypointsRequest& a, ScenarioGetVehicleWaypointsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScenarioGetVehicleWaypointsRequest* New() const final {
    return CreateMaybeMessage<ScenarioGetVehicleWaypointsRequest>(NULL);
  }

  ScenarioGetVehicleWaypointsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ScenarioGetVehicleWaypointsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ScenarioGetVehicleWaypointsRequest& from);
  void MergeFrom(const ScenarioGetVehicleWaypointsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioGetVehicleWaypointsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string vehicle_id = 1;
  void clear_vehicle_id();
  static const int kVehicleIdFieldNumber = 1;
  const ::std::string& vehicle_id() const;
  void set_vehicle_id(const ::std::string& value);
  #if LANG_CXX11
  void set_vehicle_id(::std::string&& value);
  #endif
  void set_vehicle_id(const char* value);
  void set_vehicle_id(const char* value, size_t size);
  ::std::string* mutable_vehicle_id();
  ::std::string* release_vehicle_id();
  void set_allocated_vehicle_id(::std::string* vehicle_id);

  // uint32 max_number = 2;
  void clear_max_number();
  static const int kMaxNumberFieldNumber = 2;
  ::google::protobuf::uint32 max_number() const;
  void set_max_number(::google::protobuf::uint32 value);

  // float max_distance = 3;
  void clear_max_distance();
  static const int kMaxDistanceFieldNumber = 3;
  float max_distance() const;
  void set_max_distance(float value);

  // float max_time = 4;
  void clear_max_time();
  static const int kMaxTimeFieldNumber = 4;
  float max_time() const;
  void set_max_time(float value);

  // @@protoc_insertion_point(class_scope:metamoto.services.ScenarioGetVehicleWaypointsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr vehicle_id_;
  ::google::protobuf::uint32 max_number_;
  float max_distance_;
  float max_time_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_metamoto_2fservices_2fscenario_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScenarioGetVehicleWaypointsReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metamoto.services.ScenarioGetVehicleWaypointsReply) */ {
 public:
  ScenarioGetVehicleWaypointsReply();
  virtual ~ScenarioGetVehicleWaypointsReply();

  ScenarioGetVehicleWaypointsReply(const ScenarioGetVehicleWaypointsReply& from);

  inline ScenarioGetVehicleWaypointsReply& operator=(const ScenarioGetVehicleWaypointsReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScenarioGetVehicleWaypointsReply(ScenarioGetVehicleWaypointsReply&& from) noexcept
    : ScenarioGetVehicleWaypointsReply() {
    *this = ::std::move(from);
  }

  inline ScenarioGetVehicleWaypointsReply& operator=(ScenarioGetVehicleWaypointsReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScenarioGetVehicleWaypointsReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScenarioGetVehicleWaypointsReply* internal_default_instance() {
    return reinterpret_cast<const ScenarioGetVehicleWaypointsReply*>(
               &_ScenarioGetVehicleWaypointsReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(ScenarioGetVehicleWaypointsReply* other);
  friend void swap(ScenarioGetVehicleWaypointsReply& a, ScenarioGetVehicleWaypointsReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScenarioGetVehicleWaypointsReply* New() const final {
    return CreateMaybeMessage<ScenarioGetVehicleWaypointsReply>(NULL);
  }

  ScenarioGetVehicleWaypointsReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ScenarioGetVehicleWaypointsReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ScenarioGetVehicleWaypointsReply& from);
  void MergeFrom(const ScenarioGetVehicleWaypointsReply& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioGetVehicleWaypointsReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .metamoto.types.Waypoint waypoints = 1;
  int waypoints_size() const;
  void clear_waypoints();
  static const int kWaypointsFieldNumber = 1;
  ::metamoto::types::Waypoint* mutable_waypoints(int index);
  ::google::protobuf::RepeatedPtrField< ::metamoto::types::Waypoint >*
      mutable_waypoints();
  const ::metamoto::types::Waypoint& waypoints(int index) const;
  ::metamoto::types::Waypoint* add_waypoints();
  const ::google::protobuf::RepeatedPtrField< ::metamoto::types::Waypoint >&
      waypoints() const;

  // @@protoc_insertion_point(class_scope:metamoto.services.ScenarioGetVehicleWaypointsReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::metamoto::types::Waypoint > waypoints_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_metamoto_2fservices_2fscenario_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScenarioSetVehicleWaypointsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metamoto.services.ScenarioSetVehicleWaypointsRequest) */ {
 public:
  ScenarioSetVehicleWaypointsRequest();
  virtual ~ScenarioSetVehicleWaypointsRequest();

  ScenarioSetVehicleWaypointsRequest(const ScenarioSetVehicleWaypointsRequest& from);

  inline ScenarioSetVehicleWaypointsRequest& operator=(const ScenarioSetVehicleWaypointsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScenarioSetVehicleWaypointsRequest(ScenarioSetVehicleWaypointsRequest&& from) noexcept
    : ScenarioSetVehicleWaypointsRequest() {
    *this = ::std::move(from);
  }

  inline ScenarioSetVehicleWaypointsRequest& operator=(ScenarioSetVehicleWaypointsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScenarioSetVehicleWaypointsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScenarioSetVehicleWaypointsRequest* internal_default_instance() {
    return reinterpret_cast<const ScenarioSetVehicleWaypointsRequest*>(
               &_ScenarioSetVehicleWaypointsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ScenarioSetVehicleWaypointsRequest* other);
  friend void swap(ScenarioSetVehicleWaypointsRequest& a, ScenarioSetVehicleWaypointsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScenarioSetVehicleWaypointsRequest* New() const final {
    return CreateMaybeMessage<ScenarioSetVehicleWaypointsRequest>(NULL);
  }

  ScenarioSetVehicleWaypointsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ScenarioSetVehicleWaypointsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ScenarioSetVehicleWaypointsRequest& from);
  void MergeFrom(const ScenarioSetVehicleWaypointsRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioSetVehicleWaypointsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .metamoto.types.Waypoint waypoints = 2;
  int waypoints_size() const;
  void clear_waypoints();
  static const int kWaypointsFieldNumber = 2;
  ::metamoto::types::Waypoint* mutable_waypoints(int index);
  ::google::protobuf::RepeatedPtrField< ::metamoto::types::Waypoint >*
      mutable_waypoints();
  const ::metamoto::types::Waypoint& waypoints(int index) const;
  ::metamoto::types::Waypoint* add_waypoints();
  const ::google::protobuf::RepeatedPtrField< ::metamoto::types::Waypoint >&
      waypoints() const;

  // string vehicle_id = 1;
  void clear_vehicle_id();
  static const int kVehicleIdFieldNumber = 1;
  const ::std::string& vehicle_id() const;
  void set_vehicle_id(const ::std::string& value);
  #if LANG_CXX11
  void set_vehicle_id(::std::string&& value);
  #endif
  void set_vehicle_id(const char* value);
  void set_vehicle_id(const char* value, size_t size);
  ::std::string* mutable_vehicle_id();
  ::std::string* release_vehicle_id();
  void set_allocated_vehicle_id(::std::string* vehicle_id);

  // bool append = 3;
  void clear_append();
  static const int kAppendFieldNumber = 3;
  bool append() const;
  void set_append(bool value);

  // @@protoc_insertion_point(class_scope:metamoto.services.ScenarioSetVehicleWaypointsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::metamoto::types::Waypoint > waypoints_;
  ::google::protobuf::internal::ArenaStringPtr vehicle_id_;
  bool append_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_metamoto_2fservices_2fscenario_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScenarioSetVehicleWaypointsReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metamoto.services.ScenarioSetVehicleWaypointsReply) */ {
 public:
  ScenarioSetVehicleWaypointsReply();
  virtual ~ScenarioSetVehicleWaypointsReply();

  ScenarioSetVehicleWaypointsReply(const ScenarioSetVehicleWaypointsReply& from);

  inline ScenarioSetVehicleWaypointsReply& operator=(const ScenarioSetVehicleWaypointsReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScenarioSetVehicleWaypointsReply(ScenarioSetVehicleWaypointsReply&& from) noexcept
    : ScenarioSetVehicleWaypointsReply() {
    *this = ::std::move(from);
  }

  inline ScenarioSetVehicleWaypointsReply& operator=(ScenarioSetVehicleWaypointsReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScenarioSetVehicleWaypointsReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScenarioSetVehicleWaypointsReply* internal_default_instance() {
    return reinterpret_cast<const ScenarioSetVehicleWaypointsReply*>(
               &_ScenarioSetVehicleWaypointsReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(ScenarioSetVehicleWaypointsReply* other);
  friend void swap(ScenarioSetVehicleWaypointsReply& a, ScenarioSetVehicleWaypointsReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScenarioSetVehicleWaypointsReply* New() const final {
    return CreateMaybeMessage<ScenarioSetVehicleWaypointsReply>(NULL);
  }

  ScenarioSetVehicleWaypointsReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ScenarioSetVehicleWaypointsReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ScenarioSetVehicleWaypointsReply& from);
  void MergeFrom(const ScenarioSetVehicleWaypointsReply& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioSetVehicleWaypointsReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:metamoto.services.ScenarioSetVehicleWaypointsReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_metamoto_2fservices_2fscenario_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScenarioSetDriverModelRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metamoto.services.ScenarioSetDriverModelRequest) */ {
 public:
  ScenarioSetDriverModelRequest();
  virtual ~ScenarioSetDriverModelRequest();

  ScenarioSetDriverModelRequest(const ScenarioSetDriverModelRequest& from);

  inline ScenarioSetDriverModelRequest& operator=(const ScenarioSetDriverModelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScenarioSetDriverModelRequest(ScenarioSetDriverModelRequest&& from) noexcept
    : ScenarioSetDriverModelRequest() {
    *this = ::std::move(from);
  }

  inline ScenarioSetDriverModelRequest& operator=(ScenarioSetDriverModelRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScenarioSetDriverModelRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScenarioSetDriverModelRequest* internal_default_instance() {
    return reinterpret_cast<const ScenarioSetDriverModelRequest*>(
               &_ScenarioSetDriverModelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(ScenarioSetDriverModelRequest* other);
  friend void swap(ScenarioSetDriverModelRequest& a, ScenarioSetDriverModelRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScenarioSetDriverModelRequest* New() const final {
    return CreateMaybeMessage<ScenarioSetDriverModelRequest>(NULL);
  }

  ScenarioSetDriverModelRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ScenarioSetDriverModelRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ScenarioSetDriverModelRequest& from);
  void MergeFrom(const ScenarioSetDriverModelRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioSetDriverModelRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string vehicle_id = 1;
  void clear_vehicle_id();
  static const int kVehicleIdFieldNumber = 1;
  const ::std::string& vehicle_id() const;
  void set_vehicle_id(const ::std::string& value);
  #if LANG_CXX11
  void set_vehicle_id(::std::string&& value);
  #endif
  void set_vehicle_id(const char* value);
  void set_vehicle_id(const char* value, size_t size);
  ::std::string* mutable_vehicle_id();
  ::std::string* release_vehicle_id();
  void set_allocated_vehicle_id(::std::string* vehicle_id);

  // .metamoto.types.DriverModel driver_model = 2;
  bool has_driver_model() const;
  void clear_driver_model();
  static const int kDriverModelFieldNumber = 2;
  private:
  const ::metamoto::types::DriverModel& _internal_driver_model() const;
  public:
  const ::metamoto::types::DriverModel& driver_model() const;
  ::metamoto::types::DriverModel* release_driver_model();
  ::metamoto::types::DriverModel* mutable_driver_model();
  void set_allocated_driver_model(::metamoto::types::DriverModel* driver_model);

  // @@protoc_insertion_point(class_scope:metamoto.services.ScenarioSetDriverModelRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr vehicle_id_;
  ::metamoto::types::DriverModel* driver_model_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_metamoto_2fservices_2fscenario_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScenarioSetDriverModelReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metamoto.services.ScenarioSetDriverModelReply) */ {
 public:
  ScenarioSetDriverModelReply();
  virtual ~ScenarioSetDriverModelReply();

  ScenarioSetDriverModelReply(const ScenarioSetDriverModelReply& from);

  inline ScenarioSetDriverModelReply& operator=(const ScenarioSetDriverModelReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScenarioSetDriverModelReply(ScenarioSetDriverModelReply&& from) noexcept
    : ScenarioSetDriverModelReply() {
    *this = ::std::move(from);
  }

  inline ScenarioSetDriverModelReply& operator=(ScenarioSetDriverModelReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScenarioSetDriverModelReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScenarioSetDriverModelReply* internal_default_instance() {
    return reinterpret_cast<const ScenarioSetDriverModelReply*>(
               &_ScenarioSetDriverModelReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(ScenarioSetDriverModelReply* other);
  friend void swap(ScenarioSetDriverModelReply& a, ScenarioSetDriverModelReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScenarioSetDriverModelReply* New() const final {
    return CreateMaybeMessage<ScenarioSetDriverModelReply>(NULL);
  }

  ScenarioSetDriverModelReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ScenarioSetDriverModelReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ScenarioSetDriverModelReply& from);
  void MergeFrom(const ScenarioSetDriverModelReply& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScenarioSetDriverModelReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:metamoto.services.ScenarioSetDriverModelReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_metamoto_2fservices_2fscenario_5fservice_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ScenarioSetupRequest

// .metamoto.types.Scenario scenario = 1;
inline bool ScenarioSetupRequest::has_scenario() const {
  return this != internal_default_instance() && scenario_ != NULL;
}
inline const ::metamoto::types::Scenario& ScenarioSetupRequest::_internal_scenario() const {
  return *scenario_;
}
inline const ::metamoto::types::Scenario& ScenarioSetupRequest::scenario() const {
  const ::metamoto::types::Scenario* p = scenario_;
  // @@protoc_insertion_point(field_get:metamoto.services.ScenarioSetupRequest.scenario)
  return p != NULL ? *p : *reinterpret_cast<const ::metamoto::types::Scenario*>(
      &::metamoto::types::_Scenario_default_instance_);
}
inline ::metamoto::types::Scenario* ScenarioSetupRequest::release_scenario() {
  // @@protoc_insertion_point(field_release:metamoto.services.ScenarioSetupRequest.scenario)
  
  ::metamoto::types::Scenario* temp = scenario_;
  scenario_ = NULL;
  return temp;
}
inline ::metamoto::types::Scenario* ScenarioSetupRequest::mutable_scenario() {
  
  if (scenario_ == NULL) {
    auto* p = CreateMaybeMessage<::metamoto::types::Scenario>(GetArenaNoVirtual());
    scenario_ = p;
  }
  // @@protoc_insertion_point(field_mutable:metamoto.services.ScenarioSetupRequest.scenario)
  return scenario_;
}
inline void ScenarioSetupRequest::set_allocated_scenario(::metamoto::types::Scenario* scenario) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(scenario_);
  }
  if (scenario) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scenario = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scenario, submessage_arena);
    }
    
  } else {
    
  }
  scenario_ = scenario;
  // @@protoc_insertion_point(field_set_allocated:metamoto.services.ScenarioSetupRequest.scenario)
}

// -------------------------------------------------------------------

// ScenarioSetupReply

// -------------------------------------------------------------------

// ScenarioUpdateRequest

// .metamoto.messages.GroundTruth ground_truth = 1;
inline bool ScenarioUpdateRequest::has_ground_truth() const {
  return this != internal_default_instance() && ground_truth_ != NULL;
}
inline const ::metamoto::messages::GroundTruth& ScenarioUpdateRequest::_internal_ground_truth() const {
  return *ground_truth_;
}
inline const ::metamoto::messages::GroundTruth& ScenarioUpdateRequest::ground_truth() const {
  const ::metamoto::messages::GroundTruth* p = ground_truth_;
  // @@protoc_insertion_point(field_get:metamoto.services.ScenarioUpdateRequest.ground_truth)
  return p != NULL ? *p : *reinterpret_cast<const ::metamoto::messages::GroundTruth*>(
      &::metamoto::messages::_GroundTruth_default_instance_);
}
inline ::metamoto::messages::GroundTruth* ScenarioUpdateRequest::release_ground_truth() {
  // @@protoc_insertion_point(field_release:metamoto.services.ScenarioUpdateRequest.ground_truth)
  
  ::metamoto::messages::GroundTruth* temp = ground_truth_;
  ground_truth_ = NULL;
  return temp;
}
inline ::metamoto::messages::GroundTruth* ScenarioUpdateRequest::mutable_ground_truth() {
  
  if (ground_truth_ == NULL) {
    auto* p = CreateMaybeMessage<::metamoto::messages::GroundTruth>(GetArenaNoVirtual());
    ground_truth_ = p;
  }
  // @@protoc_insertion_point(field_mutable:metamoto.services.ScenarioUpdateRequest.ground_truth)
  return ground_truth_;
}
inline void ScenarioUpdateRequest::set_allocated_ground_truth(::metamoto::messages::GroundTruth* ground_truth) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ground_truth_);
  }
  if (ground_truth) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ground_truth = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ground_truth, submessage_arena);
    }
    
  } else {
    
  }
  ground_truth_ = ground_truth;
  // @@protoc_insertion_point(field_set_allocated:metamoto.services.ScenarioUpdateRequest.ground_truth)
}

// -------------------------------------------------------------------

// ScenarioUpdateReply

// -------------------------------------------------------------------

// ScenarioGetVehicleWaypointsRequest

// string vehicle_id = 1;
inline void ScenarioGetVehicleWaypointsRequest::clear_vehicle_id() {
  vehicle_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScenarioGetVehicleWaypointsRequest::vehicle_id() const {
  // @@protoc_insertion_point(field_get:metamoto.services.ScenarioGetVehicleWaypointsRequest.vehicle_id)
  return vehicle_id_.GetNoArena();
}
inline void ScenarioGetVehicleWaypointsRequest::set_vehicle_id(const ::std::string& value) {
  
  vehicle_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metamoto.services.ScenarioGetVehicleWaypointsRequest.vehicle_id)
}
#if LANG_CXX11
inline void ScenarioGetVehicleWaypointsRequest::set_vehicle_id(::std::string&& value) {
  
  vehicle_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metamoto.services.ScenarioGetVehicleWaypointsRequest.vehicle_id)
}
#endif
inline void ScenarioGetVehicleWaypointsRequest::set_vehicle_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  vehicle_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metamoto.services.ScenarioGetVehicleWaypointsRequest.vehicle_id)
}
inline void ScenarioGetVehicleWaypointsRequest::set_vehicle_id(const char* value, size_t size) {
  
  vehicle_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metamoto.services.ScenarioGetVehicleWaypointsRequest.vehicle_id)
}
inline ::std::string* ScenarioGetVehicleWaypointsRequest::mutable_vehicle_id() {
  
  // @@protoc_insertion_point(field_mutable:metamoto.services.ScenarioGetVehicleWaypointsRequest.vehicle_id)
  return vehicle_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScenarioGetVehicleWaypointsRequest::release_vehicle_id() {
  // @@protoc_insertion_point(field_release:metamoto.services.ScenarioGetVehicleWaypointsRequest.vehicle_id)
  
  return vehicle_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScenarioGetVehicleWaypointsRequest::set_allocated_vehicle_id(::std::string* vehicle_id) {
  if (vehicle_id != NULL) {
    
  } else {
    
  }
  vehicle_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vehicle_id);
  // @@protoc_insertion_point(field_set_allocated:metamoto.services.ScenarioGetVehicleWaypointsRequest.vehicle_id)
}

// uint32 max_number = 2;
inline void ScenarioGetVehicleWaypointsRequest::clear_max_number() {
  max_number_ = 0u;
}
inline ::google::protobuf::uint32 ScenarioGetVehicleWaypointsRequest::max_number() const {
  // @@protoc_insertion_point(field_get:metamoto.services.ScenarioGetVehicleWaypointsRequest.max_number)
  return max_number_;
}
inline void ScenarioGetVehicleWaypointsRequest::set_max_number(::google::protobuf::uint32 value) {
  
  max_number_ = value;
  // @@protoc_insertion_point(field_set:metamoto.services.ScenarioGetVehicleWaypointsRequest.max_number)
}

// float max_distance = 3;
inline void ScenarioGetVehicleWaypointsRequest::clear_max_distance() {
  max_distance_ = 0;
}
inline float ScenarioGetVehicleWaypointsRequest::max_distance() const {
  // @@protoc_insertion_point(field_get:metamoto.services.ScenarioGetVehicleWaypointsRequest.max_distance)
  return max_distance_;
}
inline void ScenarioGetVehicleWaypointsRequest::set_max_distance(float value) {
  
  max_distance_ = value;
  // @@protoc_insertion_point(field_set:metamoto.services.ScenarioGetVehicleWaypointsRequest.max_distance)
}

// float max_time = 4;
inline void ScenarioGetVehicleWaypointsRequest::clear_max_time() {
  max_time_ = 0;
}
inline float ScenarioGetVehicleWaypointsRequest::max_time() const {
  // @@protoc_insertion_point(field_get:metamoto.services.ScenarioGetVehicleWaypointsRequest.max_time)
  return max_time_;
}
inline void ScenarioGetVehicleWaypointsRequest::set_max_time(float value) {
  
  max_time_ = value;
  // @@protoc_insertion_point(field_set:metamoto.services.ScenarioGetVehicleWaypointsRequest.max_time)
}

// -------------------------------------------------------------------

// ScenarioGetVehicleWaypointsReply

// repeated .metamoto.types.Waypoint waypoints = 1;
inline int ScenarioGetVehicleWaypointsReply::waypoints_size() const {
  return waypoints_.size();
}
inline ::metamoto::types::Waypoint* ScenarioGetVehicleWaypointsReply::mutable_waypoints(int index) {
  // @@protoc_insertion_point(field_mutable:metamoto.services.ScenarioGetVehicleWaypointsReply.waypoints)
  return waypoints_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::metamoto::types::Waypoint >*
ScenarioGetVehicleWaypointsReply::mutable_waypoints() {
  // @@protoc_insertion_point(field_mutable_list:metamoto.services.ScenarioGetVehicleWaypointsReply.waypoints)
  return &waypoints_;
}
inline const ::metamoto::types::Waypoint& ScenarioGetVehicleWaypointsReply::waypoints(int index) const {
  // @@protoc_insertion_point(field_get:metamoto.services.ScenarioGetVehicleWaypointsReply.waypoints)
  return waypoints_.Get(index);
}
inline ::metamoto::types::Waypoint* ScenarioGetVehicleWaypointsReply::add_waypoints() {
  // @@protoc_insertion_point(field_add:metamoto.services.ScenarioGetVehicleWaypointsReply.waypoints)
  return waypoints_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::metamoto::types::Waypoint >&
ScenarioGetVehicleWaypointsReply::waypoints() const {
  // @@protoc_insertion_point(field_list:metamoto.services.ScenarioGetVehicleWaypointsReply.waypoints)
  return waypoints_;
}

// -------------------------------------------------------------------

// ScenarioSetVehicleWaypointsRequest

// string vehicle_id = 1;
inline void ScenarioSetVehicleWaypointsRequest::clear_vehicle_id() {
  vehicle_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScenarioSetVehicleWaypointsRequest::vehicle_id() const {
  // @@protoc_insertion_point(field_get:metamoto.services.ScenarioSetVehicleWaypointsRequest.vehicle_id)
  return vehicle_id_.GetNoArena();
}
inline void ScenarioSetVehicleWaypointsRequest::set_vehicle_id(const ::std::string& value) {
  
  vehicle_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metamoto.services.ScenarioSetVehicleWaypointsRequest.vehicle_id)
}
#if LANG_CXX11
inline void ScenarioSetVehicleWaypointsRequest::set_vehicle_id(::std::string&& value) {
  
  vehicle_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metamoto.services.ScenarioSetVehicleWaypointsRequest.vehicle_id)
}
#endif
inline void ScenarioSetVehicleWaypointsRequest::set_vehicle_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  vehicle_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metamoto.services.ScenarioSetVehicleWaypointsRequest.vehicle_id)
}
inline void ScenarioSetVehicleWaypointsRequest::set_vehicle_id(const char* value, size_t size) {
  
  vehicle_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metamoto.services.ScenarioSetVehicleWaypointsRequest.vehicle_id)
}
inline ::std::string* ScenarioSetVehicleWaypointsRequest::mutable_vehicle_id() {
  
  // @@protoc_insertion_point(field_mutable:metamoto.services.ScenarioSetVehicleWaypointsRequest.vehicle_id)
  return vehicle_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScenarioSetVehicleWaypointsRequest::release_vehicle_id() {
  // @@protoc_insertion_point(field_release:metamoto.services.ScenarioSetVehicleWaypointsRequest.vehicle_id)
  
  return vehicle_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScenarioSetVehicleWaypointsRequest::set_allocated_vehicle_id(::std::string* vehicle_id) {
  if (vehicle_id != NULL) {
    
  } else {
    
  }
  vehicle_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vehicle_id);
  // @@protoc_insertion_point(field_set_allocated:metamoto.services.ScenarioSetVehicleWaypointsRequest.vehicle_id)
}

// repeated .metamoto.types.Waypoint waypoints = 2;
inline int ScenarioSetVehicleWaypointsRequest::waypoints_size() const {
  return waypoints_.size();
}
inline ::metamoto::types::Waypoint* ScenarioSetVehicleWaypointsRequest::mutable_waypoints(int index) {
  // @@protoc_insertion_point(field_mutable:metamoto.services.ScenarioSetVehicleWaypointsRequest.waypoints)
  return waypoints_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::metamoto::types::Waypoint >*
ScenarioSetVehicleWaypointsRequest::mutable_waypoints() {
  // @@protoc_insertion_point(field_mutable_list:metamoto.services.ScenarioSetVehicleWaypointsRequest.waypoints)
  return &waypoints_;
}
inline const ::metamoto::types::Waypoint& ScenarioSetVehicleWaypointsRequest::waypoints(int index) const {
  // @@protoc_insertion_point(field_get:metamoto.services.ScenarioSetVehicleWaypointsRequest.waypoints)
  return waypoints_.Get(index);
}
inline ::metamoto::types::Waypoint* ScenarioSetVehicleWaypointsRequest::add_waypoints() {
  // @@protoc_insertion_point(field_add:metamoto.services.ScenarioSetVehicleWaypointsRequest.waypoints)
  return waypoints_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::metamoto::types::Waypoint >&
ScenarioSetVehicleWaypointsRequest::waypoints() const {
  // @@protoc_insertion_point(field_list:metamoto.services.ScenarioSetVehicleWaypointsRequest.waypoints)
  return waypoints_;
}

// bool append = 3;
inline void ScenarioSetVehicleWaypointsRequest::clear_append() {
  append_ = false;
}
inline bool ScenarioSetVehicleWaypointsRequest::append() const {
  // @@protoc_insertion_point(field_get:metamoto.services.ScenarioSetVehicleWaypointsRequest.append)
  return append_;
}
inline void ScenarioSetVehicleWaypointsRequest::set_append(bool value) {
  
  append_ = value;
  // @@protoc_insertion_point(field_set:metamoto.services.ScenarioSetVehicleWaypointsRequest.append)
}

// -------------------------------------------------------------------

// ScenarioSetVehicleWaypointsReply

// -------------------------------------------------------------------

// ScenarioSetDriverModelRequest

// string vehicle_id = 1;
inline void ScenarioSetDriverModelRequest::clear_vehicle_id() {
  vehicle_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScenarioSetDriverModelRequest::vehicle_id() const {
  // @@protoc_insertion_point(field_get:metamoto.services.ScenarioSetDriverModelRequest.vehicle_id)
  return vehicle_id_.GetNoArena();
}
inline void ScenarioSetDriverModelRequest::set_vehicle_id(const ::std::string& value) {
  
  vehicle_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metamoto.services.ScenarioSetDriverModelRequest.vehicle_id)
}
#if LANG_CXX11
inline void ScenarioSetDriverModelRequest::set_vehicle_id(::std::string&& value) {
  
  vehicle_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metamoto.services.ScenarioSetDriverModelRequest.vehicle_id)
}
#endif
inline void ScenarioSetDriverModelRequest::set_vehicle_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  vehicle_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metamoto.services.ScenarioSetDriverModelRequest.vehicle_id)
}
inline void ScenarioSetDriverModelRequest::set_vehicle_id(const char* value, size_t size) {
  
  vehicle_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metamoto.services.ScenarioSetDriverModelRequest.vehicle_id)
}
inline ::std::string* ScenarioSetDriverModelRequest::mutable_vehicle_id() {
  
  // @@protoc_insertion_point(field_mutable:metamoto.services.ScenarioSetDriverModelRequest.vehicle_id)
  return vehicle_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScenarioSetDriverModelRequest::release_vehicle_id() {
  // @@protoc_insertion_point(field_release:metamoto.services.ScenarioSetDriverModelRequest.vehicle_id)
  
  return vehicle_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScenarioSetDriverModelRequest::set_allocated_vehicle_id(::std::string* vehicle_id) {
  if (vehicle_id != NULL) {
    
  } else {
    
  }
  vehicle_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vehicle_id);
  // @@protoc_insertion_point(field_set_allocated:metamoto.services.ScenarioSetDriverModelRequest.vehicle_id)
}

// .metamoto.types.DriverModel driver_model = 2;
inline bool ScenarioSetDriverModelRequest::has_driver_model() const {
  return this != internal_default_instance() && driver_model_ != NULL;
}
inline const ::metamoto::types::DriverModel& ScenarioSetDriverModelRequest::_internal_driver_model() const {
  return *driver_model_;
}
inline const ::metamoto::types::DriverModel& ScenarioSetDriverModelRequest::driver_model() const {
  const ::metamoto::types::DriverModel* p = driver_model_;
  // @@protoc_insertion_point(field_get:metamoto.services.ScenarioSetDriverModelRequest.driver_model)
  return p != NULL ? *p : *reinterpret_cast<const ::metamoto::types::DriverModel*>(
      &::metamoto::types::_DriverModel_default_instance_);
}
inline ::metamoto::types::DriverModel* ScenarioSetDriverModelRequest::release_driver_model() {
  // @@protoc_insertion_point(field_release:metamoto.services.ScenarioSetDriverModelRequest.driver_model)
  
  ::metamoto::types::DriverModel* temp = driver_model_;
  driver_model_ = NULL;
  return temp;
}
inline ::metamoto::types::DriverModel* ScenarioSetDriverModelRequest::mutable_driver_model() {
  
  if (driver_model_ == NULL) {
    auto* p = CreateMaybeMessage<::metamoto::types::DriverModel>(GetArenaNoVirtual());
    driver_model_ = p;
  }
  // @@protoc_insertion_point(field_mutable:metamoto.services.ScenarioSetDriverModelRequest.driver_model)
  return driver_model_;
}
inline void ScenarioSetDriverModelRequest::set_allocated_driver_model(::metamoto::types::DriverModel* driver_model) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(driver_model_);
  }
  if (driver_model) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      driver_model = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, driver_model, submessage_arena);
    }
    
  } else {
    
  }
  driver_model_ = driver_model;
  // @@protoc_insertion_point(field_set_allocated:metamoto.services.ScenarioSetDriverModelRequest.driver_model)
}

// -------------------------------------------------------------------

// ScenarioSetDriverModelReply

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace services
}  // namespace metamoto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_metamoto_2fservices_2fscenario_5fservice_2eproto
