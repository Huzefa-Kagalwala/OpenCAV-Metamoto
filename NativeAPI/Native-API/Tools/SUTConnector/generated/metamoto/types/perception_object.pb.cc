// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metamoto/types/perception_object.proto

#include "metamoto/types/perception_object.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_metamoto_2ftypes_2facceleration_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2facceleration_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Acceleration;
}  // namespace protobuf_metamoto_2ftypes_2facceleration_2eproto
namespace protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LocalFrame;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_PerceptionObject_TrafficLightBulb;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_GlobalFrame;
}  // namespace protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto
namespace protobuf_metamoto_2ftypes_2fpose_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fpose_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Pose;
}  // namespace protobuf_metamoto_2ftypes_2fpose_2eproto
namespace protobuf_metamoto_2ftypes_2fshape_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fshape_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Shape;
}  // namespace protobuf_metamoto_2ftypes_2fshape_2eproto
namespace protobuf_metamoto_2ftypes_2fsignal_5fconfiguration_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fsignal_5fconfiguration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SignalConfiguration_Signal_BulbState;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fsignal_5fconfiguration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SignalConfiguration_Signal_BulbType;
}  // namespace protobuf_metamoto_2ftypes_2fsignal_5fconfiguration_2eproto
namespace protobuf_metamoto_2ftypes_2fvelocity_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fvelocity_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Velocity;
}  // namespace protobuf_metamoto_2ftypes_2fvelocity_2eproto
namespace metamoto {
namespace types {
class PerceptionObject_TrafficLightBulbDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PerceptionObject_TrafficLightBulb>
      _instance;
} _PerceptionObject_TrafficLightBulb_default_instance_;
class PerceptionObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PerceptionObject>
      _instance;
} _PerceptionObject_default_instance_;
class LocalFrameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LocalFrame>
      _instance;
} _LocalFrame_default_instance_;
class GlobalFrameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GlobalFrame>
      _instance;
} _GlobalFrame_default_instance_;
}  // namespace types
}  // namespace metamoto
namespace protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto {
static void InitDefaultsPerceptionObject_TrafficLightBulb() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::types::_PerceptionObject_TrafficLightBulb_default_instance_;
    new (ptr) ::metamoto::types::PerceptionObject_TrafficLightBulb();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::types::PerceptionObject_TrafficLightBulb::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PerceptionObject_TrafficLightBulb =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPerceptionObject_TrafficLightBulb}, {
      &protobuf_metamoto_2ftypes_2fsignal_5fconfiguration_2eproto::scc_info_SignalConfiguration_Signal_BulbType.base,
      &protobuf_metamoto_2ftypes_2fsignal_5fconfiguration_2eproto::scc_info_SignalConfiguration_Signal_BulbState.base,}};

static void InitDefaultsPerceptionObject() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::types::_PerceptionObject_default_instance_;
    new (ptr) ::metamoto::types::PerceptionObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::types::PerceptionObject::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_PerceptionObject =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsPerceptionObject}, {
      &protobuf_metamoto_2ftypes_2fshape_2eproto::scc_info_Shape.base,
      &protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto::scc_info_GlobalFrame.base,
      &protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto::scc_info_LocalFrame.base,
      &protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto::scc_info_PerceptionObject_TrafficLightBulb.base,}};

static void InitDefaultsLocalFrame() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::types::_LocalFrame_default_instance_;
    new (ptr) ::metamoto::types::LocalFrame();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::types::LocalFrame::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LocalFrame =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLocalFrame}, {}};

static void InitDefaultsGlobalFrame() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::types::_GlobalFrame_default_instance_;
    new (ptr) ::metamoto::types::GlobalFrame();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::types::GlobalFrame::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_GlobalFrame =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsGlobalFrame}, {
      &protobuf_metamoto_2ftypes_2fpose_2eproto::scc_info_Pose.base,
      &protobuf_metamoto_2ftypes_2fvelocity_2eproto::scc_info_Velocity.base,
      &protobuf_metamoto_2ftypes_2facceleration_2eproto::scc_info_Acceleration.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PerceptionObject_TrafficLightBulb.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PerceptionObject.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LocalFrame.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GlobalFrame.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::PerceptionObject_TrafficLightBulb, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::PerceptionObject_TrafficLightBulb, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::PerceptionObject_TrafficLightBulb, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::PerceptionObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::PerceptionObject, object_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::PerceptionObject, object_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::PerceptionObject, shape_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::PerceptionObject, tracking_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::PerceptionObject, global_frame_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::PerceptionObject, local_frame_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::PerceptionObject, head_lights_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::PerceptionObject, reverse_lights_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::PerceptionObject, brake_lights_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::PerceptionObject, signal_lights_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::PerceptionObject, traffic_light_bulbs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::LocalFrame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::LocalFrame, range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::LocalFrame, azimuth_angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::LocalFrame, elevation_angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::LocalFrame, radial_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::LocalFrame, cross_speed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::GlobalFrame, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::GlobalFrame, pose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::GlobalFrame, velocity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::GlobalFrame, acceleration_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::metamoto::types::PerceptionObject_TrafficLightBulb)},
  { 7, -1, sizeof(::metamoto::types::PerceptionObject)},
  { 23, -1, sizeof(::metamoto::types::LocalFrame)},
  { 33, -1, sizeof(::metamoto::types::GlobalFrame)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::types::_PerceptionObject_TrafficLightBulb_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::types::_PerceptionObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::types::_LocalFrame_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::types::_GlobalFrame_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "metamoto/types/perception_object.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n&metamoto/types/perception_object.proto"
      "\022\016metamoto.types\032!metamoto/types/enumera"
      "tions.proto\032\031metamoto/types/pose.proto\032\032"
      "metamoto/types/shape.proto\032\035metamoto/typ"
      "es/velocity.proto\032!metamoto/types/accele"
      "ration.proto\032\034metamoto/types/vehicle.pro"
      "to\032)metamoto/types/signal_configuration."
      "proto\"\324\005\n\020PerceptionObject\022\021\n\tobject_id\030"
      "\001 \001(\r\022/\n\013object_type\030\002 \001(\0162\032.metamoto.ty"
      "pes.ObjectType\022$\n\005shape\030\003 \001(\0132\025.metamoto"
      ".types.Shape\022\025\n\rtracking_time\030\004 \001(\001\0221\n\014g"
      "lobal_frame\030\005 \001(\0132\033.metamoto.types.Globa"
      "lFrame\022/\n\013local_frame\030\006 \001(\0132\032.metamoto.t"
      "ypes.LocalFrame\0227\n\013head_lights\030\n \001(\0162\".m"
      "etamoto.types.Vehicle.LightState\022:\n\016reve"
      "rse_lights\030\013 \001(\0162\".metamoto.types.Vehicl"
      "e.LightState\0228\n\014brake_lights\030\014 \001(\0162\".met"
      "amoto.types.Vehicle.LightState\022\?\n\rsignal"
      "_lights\030\r \001(\0162(.metamoto.types.Vehicle.S"
      "ignalLightState\022N\n\023traffic_light_bulbs\030\016"
      " \003(\01321.metamoto.types.PerceptionObject.T"
      "rafficLightBulb\032\232\001\n\020TrafficLightBulb\022A\n\004"
      "type\030\001 \001(\01323.metamoto.types.SignalConfig"
      "uration.Signal.BulbType\022C\n\005state\030\002 \001(\01324"
      ".metamoto.types.SignalConfiguration.Sign"
      "al.BulbState\"v\n\nLocalFrame\022\r\n\005range\030\001 \001("
      "\002\022\025\n\razimuth_angle\030\002 \001(\002\022\027\n\017elevation_an"
      "gle\030\003 \001(\002\022\024\n\014radial_speed\030\004 \001(\002\022\023\n\013cross"
      "_speed\030\005 \001(\002\"\221\001\n\013GlobalFrame\022\"\n\004pose\030\001 \001"
      "(\0132\024.metamoto.types.Pose\022*\n\010velocity\030\002 \001"
      "(\0132\030.metamoto.types.Velocity\0222\n\014accelera"
      "tion\030\003 \001(\0132\034.metamoto.types.Acceleration"
      "B\021\252\002\016Metamoto.Typesb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1307);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "metamoto/types/perception_object.proto", &protobuf_RegisterTypes);
  ::protobuf_metamoto_2ftypes_2fenumerations_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2fpose_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2fshape_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2fvelocity_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2facceleration_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2fvehicle_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2fsignal_5fconfiguration_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto
namespace metamoto {
namespace types {

// ===================================================================

void PerceptionObject_TrafficLightBulb::InitAsDefaultInstance() {
  ::metamoto::types::_PerceptionObject_TrafficLightBulb_default_instance_._instance.get_mutable()->type_ = const_cast< ::metamoto::types::SignalConfiguration_Signal_BulbType*>(
      ::metamoto::types::SignalConfiguration_Signal_BulbType::internal_default_instance());
  ::metamoto::types::_PerceptionObject_TrafficLightBulb_default_instance_._instance.get_mutable()->state_ = const_cast< ::metamoto::types::SignalConfiguration_Signal_BulbState*>(
      ::metamoto::types::SignalConfiguration_Signal_BulbState::internal_default_instance());
}
void PerceptionObject_TrafficLightBulb::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
}
void PerceptionObject_TrafficLightBulb::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PerceptionObject_TrafficLightBulb::kTypeFieldNumber;
const int PerceptionObject_TrafficLightBulb::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PerceptionObject_TrafficLightBulb::PerceptionObject_TrafficLightBulb()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto::scc_info_PerceptionObject_TrafficLightBulb.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.types.PerceptionObject.TrafficLightBulb)
}
PerceptionObject_TrafficLightBulb::PerceptionObject_TrafficLightBulb(const PerceptionObject_TrafficLightBulb& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_type()) {
    type_ = new ::metamoto::types::SignalConfiguration_Signal_BulbType(*from.type_);
  } else {
    type_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::metamoto::types::SignalConfiguration_Signal_BulbState(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:metamoto.types.PerceptionObject.TrafficLightBulb)
}

void PerceptionObject_TrafficLightBulb::SharedCtor() {
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&type_)) + sizeof(state_));
}

PerceptionObject_TrafficLightBulb::~PerceptionObject_TrafficLightBulb() {
  // @@protoc_insertion_point(destructor:metamoto.types.PerceptionObject.TrafficLightBulb)
  SharedDtor();
}

void PerceptionObject_TrafficLightBulb::SharedDtor() {
  if (this != internal_default_instance()) delete type_;
  if (this != internal_default_instance()) delete state_;
}

void PerceptionObject_TrafficLightBulb::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PerceptionObject_TrafficLightBulb::descriptor() {
  ::protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PerceptionObject_TrafficLightBulb& PerceptionObject_TrafficLightBulb::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto::scc_info_PerceptionObject_TrafficLightBulb.base);
  return *internal_default_instance();
}


void PerceptionObject_TrafficLightBulb::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.types.PerceptionObject.TrafficLightBulb)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool PerceptionObject_TrafficLightBulb::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.types.PerceptionObject.TrafficLightBulb)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .metamoto.types.SignalConfiguration.Signal.BulbType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.SignalConfiguration.Signal.BulbState state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.types.PerceptionObject.TrafficLightBulb)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.types.PerceptionObject.TrafficLightBulb)
  return false;
#undef DO_
}

void PerceptionObject_TrafficLightBulb::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.types.PerceptionObject.TrafficLightBulb)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .metamoto.types.SignalConfiguration.Signal.BulbType type = 1;
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_type(), output);
  }

  // .metamoto.types.SignalConfiguration.Signal.BulbState state = 2;
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.types.PerceptionObject.TrafficLightBulb)
}

::google::protobuf::uint8* PerceptionObject_TrafficLightBulb::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.types.PerceptionObject.TrafficLightBulb)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .metamoto.types.SignalConfiguration.Signal.BulbType type = 1;
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_type(), deterministic, target);
  }

  // .metamoto.types.SignalConfiguration.Signal.BulbState state = 2;
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_state(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.types.PerceptionObject.TrafficLightBulb)
  return target;
}

size_t PerceptionObject_TrafficLightBulb::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.types.PerceptionObject.TrafficLightBulb)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .metamoto.types.SignalConfiguration.Signal.BulbType type = 1;
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  // .metamoto.types.SignalConfiguration.Signal.BulbState state = 2;
  if (this->has_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PerceptionObject_TrafficLightBulb::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.types.PerceptionObject.TrafficLightBulb)
  GOOGLE_DCHECK_NE(&from, this);
  const PerceptionObject_TrafficLightBulb* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PerceptionObject_TrafficLightBulb>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.types.PerceptionObject.TrafficLightBulb)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.types.PerceptionObject.TrafficLightBulb)
    MergeFrom(*source);
  }
}

void PerceptionObject_TrafficLightBulb::MergeFrom(const PerceptionObject_TrafficLightBulb& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.types.PerceptionObject.TrafficLightBulb)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_type()) {
    mutable_type()->::metamoto::types::SignalConfiguration_Signal_BulbType::MergeFrom(from.type());
  }
  if (from.has_state()) {
    mutable_state()->::metamoto::types::SignalConfiguration_Signal_BulbState::MergeFrom(from.state());
  }
}

void PerceptionObject_TrafficLightBulb::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.types.PerceptionObject.TrafficLightBulb)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PerceptionObject_TrafficLightBulb::CopyFrom(const PerceptionObject_TrafficLightBulb& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.types.PerceptionObject.TrafficLightBulb)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PerceptionObject_TrafficLightBulb::IsInitialized() const {
  return true;
}

void PerceptionObject_TrafficLightBulb::Swap(PerceptionObject_TrafficLightBulb* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PerceptionObject_TrafficLightBulb::InternalSwap(PerceptionObject_TrafficLightBulb* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PerceptionObject_TrafficLightBulb::GetMetadata() const {
  protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PerceptionObject::InitAsDefaultInstance() {
  ::metamoto::types::_PerceptionObject_default_instance_._instance.get_mutable()->shape_ = const_cast< ::metamoto::types::Shape*>(
      ::metamoto::types::Shape::internal_default_instance());
  ::metamoto::types::_PerceptionObject_default_instance_._instance.get_mutable()->global_frame_ = const_cast< ::metamoto::types::GlobalFrame*>(
      ::metamoto::types::GlobalFrame::internal_default_instance());
  ::metamoto::types::_PerceptionObject_default_instance_._instance.get_mutable()->local_frame_ = const_cast< ::metamoto::types::LocalFrame*>(
      ::metamoto::types::LocalFrame::internal_default_instance());
}
void PerceptionObject::clear_shape() {
  if (GetArenaNoVirtual() == NULL && shape_ != NULL) {
    delete shape_;
  }
  shape_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PerceptionObject::kObjectIdFieldNumber;
const int PerceptionObject::kObjectTypeFieldNumber;
const int PerceptionObject::kShapeFieldNumber;
const int PerceptionObject::kTrackingTimeFieldNumber;
const int PerceptionObject::kGlobalFrameFieldNumber;
const int PerceptionObject::kLocalFrameFieldNumber;
const int PerceptionObject::kHeadLightsFieldNumber;
const int PerceptionObject::kReverseLightsFieldNumber;
const int PerceptionObject::kBrakeLightsFieldNumber;
const int PerceptionObject::kSignalLightsFieldNumber;
const int PerceptionObject::kTrafficLightBulbsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PerceptionObject::PerceptionObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto::scc_info_PerceptionObject.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.types.PerceptionObject)
}
PerceptionObject::PerceptionObject(const PerceptionObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      traffic_light_bulbs_(from.traffic_light_bulbs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_shape()) {
    shape_ = new ::metamoto::types::Shape(*from.shape_);
  } else {
    shape_ = NULL;
  }
  if (from.has_global_frame()) {
    global_frame_ = new ::metamoto::types::GlobalFrame(*from.global_frame_);
  } else {
    global_frame_ = NULL;
  }
  if (from.has_local_frame()) {
    local_frame_ = new ::metamoto::types::LocalFrame(*from.local_frame_);
  } else {
    local_frame_ = NULL;
  }
  ::memcpy(&object_id_, &from.object_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&signal_lights_) -
    reinterpret_cast<char*>(&object_id_)) + sizeof(signal_lights_));
  // @@protoc_insertion_point(copy_constructor:metamoto.types.PerceptionObject)
}

void PerceptionObject::SharedCtor() {
  ::memset(&shape_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&signal_lights_) -
      reinterpret_cast<char*>(&shape_)) + sizeof(signal_lights_));
}

PerceptionObject::~PerceptionObject() {
  // @@protoc_insertion_point(destructor:metamoto.types.PerceptionObject)
  SharedDtor();
}

void PerceptionObject::SharedDtor() {
  if (this != internal_default_instance()) delete shape_;
  if (this != internal_default_instance()) delete global_frame_;
  if (this != internal_default_instance()) delete local_frame_;
}

void PerceptionObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PerceptionObject::descriptor() {
  ::protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PerceptionObject& PerceptionObject::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto::scc_info_PerceptionObject.base);
  return *internal_default_instance();
}


void PerceptionObject::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.types.PerceptionObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  traffic_light_bulbs_.Clear();
  if (GetArenaNoVirtual() == NULL && shape_ != NULL) {
    delete shape_;
  }
  shape_ = NULL;
  if (GetArenaNoVirtual() == NULL && global_frame_ != NULL) {
    delete global_frame_;
  }
  global_frame_ = NULL;
  if (GetArenaNoVirtual() == NULL && local_frame_ != NULL) {
    delete local_frame_;
  }
  local_frame_ = NULL;
  ::memset(&object_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&signal_lights_) -
      reinterpret_cast<char*>(&object_id_)) + sizeof(signal_lights_));
  _internal_metadata_.Clear();
}

bool PerceptionObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.types.PerceptionObject)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 object_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &object_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.ObjectType object_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_object_type(static_cast< ::metamoto::types::ObjectType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.Shape shape = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shape()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double tracking_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tracking_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.GlobalFrame global_frame = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_global_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.LocalFrame local_frame = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_local_frame()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.Vehicle.LightState head_lights = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_head_lights(static_cast< ::metamoto::types::Vehicle_LightState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.Vehicle.LightState reverse_lights = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reverse_lights(static_cast< ::metamoto::types::Vehicle_LightState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.Vehicle.LightState brake_lights = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_brake_lights(static_cast< ::metamoto::types::Vehicle_LightState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.Vehicle.SignalLightState signal_lights = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_signal_lights(static_cast< ::metamoto::types::Vehicle_SignalLightState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metamoto.types.PerceptionObject.TrafficLightBulb traffic_light_bulbs = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_traffic_light_bulbs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.types.PerceptionObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.types.PerceptionObject)
  return false;
#undef DO_
}

void PerceptionObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.types.PerceptionObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 object_id = 1;
  if (this->object_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->object_id(), output);
  }

  // .metamoto.types.ObjectType object_type = 2;
  if (this->object_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->object_type(), output);
  }

  // .metamoto.types.Shape shape = 3;
  if (this->has_shape()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_shape(), output);
  }

  // double tracking_time = 4;
  if (this->tracking_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->tracking_time(), output);
  }

  // .metamoto.types.GlobalFrame global_frame = 5;
  if (this->has_global_frame()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_global_frame(), output);
  }

  // .metamoto.types.LocalFrame local_frame = 6;
  if (this->has_local_frame()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_local_frame(), output);
  }

  // .metamoto.types.Vehicle.LightState head_lights = 10;
  if (this->head_lights() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->head_lights(), output);
  }

  // .metamoto.types.Vehicle.LightState reverse_lights = 11;
  if (this->reverse_lights() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->reverse_lights(), output);
  }

  // .metamoto.types.Vehicle.LightState brake_lights = 12;
  if (this->brake_lights() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->brake_lights(), output);
  }

  // .metamoto.types.Vehicle.SignalLightState signal_lights = 13;
  if (this->signal_lights() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->signal_lights(), output);
  }

  // repeated .metamoto.types.PerceptionObject.TrafficLightBulb traffic_light_bulbs = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->traffic_light_bulbs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14,
      this->traffic_light_bulbs(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.types.PerceptionObject)
}

::google::protobuf::uint8* PerceptionObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.types.PerceptionObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 object_id = 1;
  if (this->object_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->object_id(), target);
  }

  // .metamoto.types.ObjectType object_type = 2;
  if (this->object_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->object_type(), target);
  }

  // .metamoto.types.Shape shape = 3;
  if (this->has_shape()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_shape(), deterministic, target);
  }

  // double tracking_time = 4;
  if (this->tracking_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->tracking_time(), target);
  }

  // .metamoto.types.GlobalFrame global_frame = 5;
  if (this->has_global_frame()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_global_frame(), deterministic, target);
  }

  // .metamoto.types.LocalFrame local_frame = 6;
  if (this->has_local_frame()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_local_frame(), deterministic, target);
  }

  // .metamoto.types.Vehicle.LightState head_lights = 10;
  if (this->head_lights() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->head_lights(), target);
  }

  // .metamoto.types.Vehicle.LightState reverse_lights = 11;
  if (this->reverse_lights() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->reverse_lights(), target);
  }

  // .metamoto.types.Vehicle.LightState brake_lights = 12;
  if (this->brake_lights() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->brake_lights(), target);
  }

  // .metamoto.types.Vehicle.SignalLightState signal_lights = 13;
  if (this->signal_lights() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->signal_lights(), target);
  }

  // repeated .metamoto.types.PerceptionObject.TrafficLightBulb traffic_light_bulbs = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->traffic_light_bulbs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->traffic_light_bulbs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.types.PerceptionObject)
  return target;
}

size_t PerceptionObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.types.PerceptionObject)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .metamoto.types.PerceptionObject.TrafficLightBulb traffic_light_bulbs = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->traffic_light_bulbs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->traffic_light_bulbs(static_cast<int>(i)));
    }
  }

  // .metamoto.types.Shape shape = 3;
  if (this->has_shape()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *shape_);
  }

  // .metamoto.types.GlobalFrame global_frame = 5;
  if (this->has_global_frame()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *global_frame_);
  }

  // .metamoto.types.LocalFrame local_frame = 6;
  if (this->has_local_frame()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *local_frame_);
  }

  // uint32 object_id = 1;
  if (this->object_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->object_id());
  }

  // .metamoto.types.ObjectType object_type = 2;
  if (this->object_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->object_type());
  }

  // double tracking_time = 4;
  if (this->tracking_time() != 0) {
    total_size += 1 + 8;
  }

  // .metamoto.types.Vehicle.LightState head_lights = 10;
  if (this->head_lights() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->head_lights());
  }

  // .metamoto.types.Vehicle.LightState reverse_lights = 11;
  if (this->reverse_lights() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reverse_lights());
  }

  // .metamoto.types.Vehicle.LightState brake_lights = 12;
  if (this->brake_lights() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->brake_lights());
  }

  // .metamoto.types.Vehicle.SignalLightState signal_lights = 13;
  if (this->signal_lights() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->signal_lights());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PerceptionObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.types.PerceptionObject)
  GOOGLE_DCHECK_NE(&from, this);
  const PerceptionObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PerceptionObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.types.PerceptionObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.types.PerceptionObject)
    MergeFrom(*source);
  }
}

void PerceptionObject::MergeFrom(const PerceptionObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.types.PerceptionObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  traffic_light_bulbs_.MergeFrom(from.traffic_light_bulbs_);
  if (from.has_shape()) {
    mutable_shape()->::metamoto::types::Shape::MergeFrom(from.shape());
  }
  if (from.has_global_frame()) {
    mutable_global_frame()->::metamoto::types::GlobalFrame::MergeFrom(from.global_frame());
  }
  if (from.has_local_frame()) {
    mutable_local_frame()->::metamoto::types::LocalFrame::MergeFrom(from.local_frame());
  }
  if (from.object_id() != 0) {
    set_object_id(from.object_id());
  }
  if (from.object_type() != 0) {
    set_object_type(from.object_type());
  }
  if (from.tracking_time() != 0) {
    set_tracking_time(from.tracking_time());
  }
  if (from.head_lights() != 0) {
    set_head_lights(from.head_lights());
  }
  if (from.reverse_lights() != 0) {
    set_reverse_lights(from.reverse_lights());
  }
  if (from.brake_lights() != 0) {
    set_brake_lights(from.brake_lights());
  }
  if (from.signal_lights() != 0) {
    set_signal_lights(from.signal_lights());
  }
}

void PerceptionObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.types.PerceptionObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PerceptionObject::CopyFrom(const PerceptionObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.types.PerceptionObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PerceptionObject::IsInitialized() const {
  return true;
}

void PerceptionObject::Swap(PerceptionObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PerceptionObject::InternalSwap(PerceptionObject* other) {
  using std::swap;
  CastToBase(&traffic_light_bulbs_)->InternalSwap(CastToBase(&other->traffic_light_bulbs_));
  swap(shape_, other->shape_);
  swap(global_frame_, other->global_frame_);
  swap(local_frame_, other->local_frame_);
  swap(object_id_, other->object_id_);
  swap(object_type_, other->object_type_);
  swap(tracking_time_, other->tracking_time_);
  swap(head_lights_, other->head_lights_);
  swap(reverse_lights_, other->reverse_lights_);
  swap(brake_lights_, other->brake_lights_);
  swap(signal_lights_, other->signal_lights_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PerceptionObject::GetMetadata() const {
  protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LocalFrame::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocalFrame::kRangeFieldNumber;
const int LocalFrame::kAzimuthAngleFieldNumber;
const int LocalFrame::kElevationAngleFieldNumber;
const int LocalFrame::kRadialSpeedFieldNumber;
const int LocalFrame::kCrossSpeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocalFrame::LocalFrame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto::scc_info_LocalFrame.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.types.LocalFrame)
}
LocalFrame::LocalFrame(const LocalFrame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&range_, &from.range_,
    static_cast<size_t>(reinterpret_cast<char*>(&cross_speed_) -
    reinterpret_cast<char*>(&range_)) + sizeof(cross_speed_));
  // @@protoc_insertion_point(copy_constructor:metamoto.types.LocalFrame)
}

void LocalFrame::SharedCtor() {
  ::memset(&range_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cross_speed_) -
      reinterpret_cast<char*>(&range_)) + sizeof(cross_speed_));
}

LocalFrame::~LocalFrame() {
  // @@protoc_insertion_point(destructor:metamoto.types.LocalFrame)
  SharedDtor();
}

void LocalFrame::SharedDtor() {
}

void LocalFrame::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LocalFrame::descriptor() {
  ::protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LocalFrame& LocalFrame::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto::scc_info_LocalFrame.base);
  return *internal_default_instance();
}


void LocalFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.types.LocalFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&range_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cross_speed_) -
      reinterpret_cast<char*>(&range_)) + sizeof(cross_speed_));
  _internal_metadata_.Clear();
}

bool LocalFrame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.types.LocalFrame)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float range = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &range_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float azimuth_angle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &azimuth_angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float elevation_angle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &elevation_angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float radial_speed = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &radial_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float cross_speed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cross_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.types.LocalFrame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.types.LocalFrame)
  return false;
#undef DO_
}

void LocalFrame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.types.LocalFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float range = 1;
  if (this->range() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->range(), output);
  }

  // float azimuth_angle = 2;
  if (this->azimuth_angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->azimuth_angle(), output);
  }

  // float elevation_angle = 3;
  if (this->elevation_angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->elevation_angle(), output);
  }

  // float radial_speed = 4;
  if (this->radial_speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->radial_speed(), output);
  }

  // float cross_speed = 5;
  if (this->cross_speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->cross_speed(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.types.LocalFrame)
}

::google::protobuf::uint8* LocalFrame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.types.LocalFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float range = 1;
  if (this->range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->range(), target);
  }

  // float azimuth_angle = 2;
  if (this->azimuth_angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->azimuth_angle(), target);
  }

  // float elevation_angle = 3;
  if (this->elevation_angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->elevation_angle(), target);
  }

  // float radial_speed = 4;
  if (this->radial_speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->radial_speed(), target);
  }

  // float cross_speed = 5;
  if (this->cross_speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->cross_speed(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.types.LocalFrame)
  return target;
}

size_t LocalFrame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.types.LocalFrame)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float range = 1;
  if (this->range() != 0) {
    total_size += 1 + 4;
  }

  // float azimuth_angle = 2;
  if (this->azimuth_angle() != 0) {
    total_size += 1 + 4;
  }

  // float elevation_angle = 3;
  if (this->elevation_angle() != 0) {
    total_size += 1 + 4;
  }

  // float radial_speed = 4;
  if (this->radial_speed() != 0) {
    total_size += 1 + 4;
  }

  // float cross_speed = 5;
  if (this->cross_speed() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LocalFrame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.types.LocalFrame)
  GOOGLE_DCHECK_NE(&from, this);
  const LocalFrame* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LocalFrame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.types.LocalFrame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.types.LocalFrame)
    MergeFrom(*source);
  }
}

void LocalFrame::MergeFrom(const LocalFrame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.types.LocalFrame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.range() != 0) {
    set_range(from.range());
  }
  if (from.azimuth_angle() != 0) {
    set_azimuth_angle(from.azimuth_angle());
  }
  if (from.elevation_angle() != 0) {
    set_elevation_angle(from.elevation_angle());
  }
  if (from.radial_speed() != 0) {
    set_radial_speed(from.radial_speed());
  }
  if (from.cross_speed() != 0) {
    set_cross_speed(from.cross_speed());
  }
}

void LocalFrame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.types.LocalFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalFrame::CopyFrom(const LocalFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.types.LocalFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalFrame::IsInitialized() const {
  return true;
}

void LocalFrame::Swap(LocalFrame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocalFrame::InternalSwap(LocalFrame* other) {
  using std::swap;
  swap(range_, other->range_);
  swap(azimuth_angle_, other->azimuth_angle_);
  swap(elevation_angle_, other->elevation_angle_);
  swap(radial_speed_, other->radial_speed_);
  swap(cross_speed_, other->cross_speed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LocalFrame::GetMetadata() const {
  protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GlobalFrame::InitAsDefaultInstance() {
  ::metamoto::types::_GlobalFrame_default_instance_._instance.get_mutable()->pose_ = const_cast< ::metamoto::types::Pose*>(
      ::metamoto::types::Pose::internal_default_instance());
  ::metamoto::types::_GlobalFrame_default_instance_._instance.get_mutable()->velocity_ = const_cast< ::metamoto::types::Velocity*>(
      ::metamoto::types::Velocity::internal_default_instance());
  ::metamoto::types::_GlobalFrame_default_instance_._instance.get_mutable()->acceleration_ = const_cast< ::metamoto::types::Acceleration*>(
      ::metamoto::types::Acceleration::internal_default_instance());
}
void GlobalFrame::clear_pose() {
  if (GetArenaNoVirtual() == NULL && pose_ != NULL) {
    delete pose_;
  }
  pose_ = NULL;
}
void GlobalFrame::clear_velocity() {
  if (GetArenaNoVirtual() == NULL && velocity_ != NULL) {
    delete velocity_;
  }
  velocity_ = NULL;
}
void GlobalFrame::clear_acceleration() {
  if (GetArenaNoVirtual() == NULL && acceleration_ != NULL) {
    delete acceleration_;
  }
  acceleration_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GlobalFrame::kPoseFieldNumber;
const int GlobalFrame::kVelocityFieldNumber;
const int GlobalFrame::kAccelerationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GlobalFrame::GlobalFrame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto::scc_info_GlobalFrame.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.types.GlobalFrame)
}
GlobalFrame::GlobalFrame(const GlobalFrame& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pose()) {
    pose_ = new ::metamoto::types::Pose(*from.pose_);
  } else {
    pose_ = NULL;
  }
  if (from.has_velocity()) {
    velocity_ = new ::metamoto::types::Velocity(*from.velocity_);
  } else {
    velocity_ = NULL;
  }
  if (from.has_acceleration()) {
    acceleration_ = new ::metamoto::types::Acceleration(*from.acceleration_);
  } else {
    acceleration_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:metamoto.types.GlobalFrame)
}

void GlobalFrame::SharedCtor() {
  ::memset(&pose_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&acceleration_) -
      reinterpret_cast<char*>(&pose_)) + sizeof(acceleration_));
}

GlobalFrame::~GlobalFrame() {
  // @@protoc_insertion_point(destructor:metamoto.types.GlobalFrame)
  SharedDtor();
}

void GlobalFrame::SharedDtor() {
  if (this != internal_default_instance()) delete pose_;
  if (this != internal_default_instance()) delete velocity_;
  if (this != internal_default_instance()) delete acceleration_;
}

void GlobalFrame::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GlobalFrame::descriptor() {
  ::protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GlobalFrame& GlobalFrame::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto::scc_info_GlobalFrame.base);
  return *internal_default_instance();
}


void GlobalFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.types.GlobalFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pose_ != NULL) {
    delete pose_;
  }
  pose_ = NULL;
  if (GetArenaNoVirtual() == NULL && velocity_ != NULL) {
    delete velocity_;
  }
  velocity_ = NULL;
  if (GetArenaNoVirtual() == NULL && acceleration_ != NULL) {
    delete acceleration_;
  }
  acceleration_ = NULL;
  _internal_metadata_.Clear();
}

bool GlobalFrame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.types.GlobalFrame)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .metamoto.types.Pose pose = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.Velocity velocity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_velocity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.Acceleration acceleration = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_acceleration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.types.GlobalFrame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.types.GlobalFrame)
  return false;
#undef DO_
}

void GlobalFrame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.types.GlobalFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .metamoto.types.Pose pose = 1;
  if (this->has_pose()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pose(), output);
  }

  // .metamoto.types.Velocity velocity = 2;
  if (this->has_velocity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_velocity(), output);
  }

  // .metamoto.types.Acceleration acceleration = 3;
  if (this->has_acceleration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_acceleration(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.types.GlobalFrame)
}

::google::protobuf::uint8* GlobalFrame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.types.GlobalFrame)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .metamoto.types.Pose pose = 1;
  if (this->has_pose()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pose(), deterministic, target);
  }

  // .metamoto.types.Velocity velocity = 2;
  if (this->has_velocity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_velocity(), deterministic, target);
  }

  // .metamoto.types.Acceleration acceleration = 3;
  if (this->has_acceleration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_acceleration(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.types.GlobalFrame)
  return target;
}

size_t GlobalFrame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.types.GlobalFrame)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .metamoto.types.Pose pose = 1;
  if (this->has_pose()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pose_);
  }

  // .metamoto.types.Velocity velocity = 2;
  if (this->has_velocity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *velocity_);
  }

  // .metamoto.types.Acceleration acceleration = 3;
  if (this->has_acceleration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *acceleration_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GlobalFrame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.types.GlobalFrame)
  GOOGLE_DCHECK_NE(&from, this);
  const GlobalFrame* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GlobalFrame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.types.GlobalFrame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.types.GlobalFrame)
    MergeFrom(*source);
  }
}

void GlobalFrame::MergeFrom(const GlobalFrame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.types.GlobalFrame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pose()) {
    mutable_pose()->::metamoto::types::Pose::MergeFrom(from.pose());
  }
  if (from.has_velocity()) {
    mutable_velocity()->::metamoto::types::Velocity::MergeFrom(from.velocity());
  }
  if (from.has_acceleration()) {
    mutable_acceleration()->::metamoto::types::Acceleration::MergeFrom(from.acceleration());
  }
}

void GlobalFrame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.types.GlobalFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalFrame::CopyFrom(const GlobalFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.types.GlobalFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalFrame::IsInitialized() const {
  return true;
}

void GlobalFrame::Swap(GlobalFrame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GlobalFrame::InternalSwap(GlobalFrame* other) {
  using std::swap;
  swap(pose_, other->pose_);
  swap(velocity_, other->velocity_);
  swap(acceleration_, other->acceleration_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GlobalFrame::GetMetadata() const {
  protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2fperception_5fobject_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace types
}  // namespace metamoto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::types::PerceptionObject_TrafficLightBulb* Arena::CreateMaybeMessage< ::metamoto::types::PerceptionObject_TrafficLightBulb >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::types::PerceptionObject_TrafficLightBulb >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::types::PerceptionObject* Arena::CreateMaybeMessage< ::metamoto::types::PerceptionObject >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::types::PerceptionObject >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::types::LocalFrame* Arena::CreateMaybeMessage< ::metamoto::types::LocalFrame >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::types::LocalFrame >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::types::GlobalFrame* Arena::CreateMaybeMessage< ::metamoto::types::GlobalFrame >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::types::GlobalFrame >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
