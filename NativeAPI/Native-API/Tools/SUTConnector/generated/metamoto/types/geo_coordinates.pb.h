// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metamoto/types/geo_coordinates.proto

#ifndef PROTOBUF_INCLUDED_metamoto_2ftypes_2fgeo_5fcoordinates_2eproto
#define PROTOBUF_INCLUDED_metamoto_2ftypes_2fgeo_5fcoordinates_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fgeo_5fcoordinates_2eproto 

namespace protobuf_metamoto_2ftypes_2fgeo_5fcoordinates_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_metamoto_2ftypes_2fgeo_5fcoordinates_2eproto
namespace metamoto {
namespace types {
class GeoCoordinates;
class GeoCoordinatesDefaultTypeInternal;
extern GeoCoordinatesDefaultTypeInternal _GeoCoordinates_default_instance_;
}  // namespace types
}  // namespace metamoto
namespace google {
namespace protobuf {
template<> ::metamoto::types::GeoCoordinates* Arena::CreateMaybeMessage<::metamoto::types::GeoCoordinates>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace metamoto {
namespace types {

// ===================================================================

class GeoCoordinates : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metamoto.types.GeoCoordinates) */ {
 public:
  GeoCoordinates();
  virtual ~GeoCoordinates();

  GeoCoordinates(const GeoCoordinates& from);

  inline GeoCoordinates& operator=(const GeoCoordinates& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GeoCoordinates(GeoCoordinates&& from) noexcept
    : GeoCoordinates() {
    *this = ::std::move(from);
  }

  inline GeoCoordinates& operator=(GeoCoordinates&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GeoCoordinates& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GeoCoordinates* internal_default_instance() {
    return reinterpret_cast<const GeoCoordinates*>(
               &_GeoCoordinates_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(GeoCoordinates* other);
  friend void swap(GeoCoordinates& a, GeoCoordinates& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GeoCoordinates* New() const final {
    return CreateMaybeMessage<GeoCoordinates>(NULL);
  }

  GeoCoordinates* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GeoCoordinates>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GeoCoordinates& from);
  void MergeFrom(const GeoCoordinates& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GeoCoordinates* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float latitude = 1;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 1;
  float latitude() const;
  void set_latitude(float value);

  // float longitude = 2;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 2;
  float longitude() const;
  void set_longitude(float value);

  // float altitude = 3;
  void clear_altitude();
  static const int kAltitudeFieldNumber = 3;
  float altitude() const;
  void set_altitude(float value);

  // @@protoc_insertion_point(class_scope:metamoto.types.GeoCoordinates)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float latitude_;
  float longitude_;
  float altitude_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_metamoto_2ftypes_2fgeo_5fcoordinates_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GeoCoordinates

// float latitude = 1;
inline void GeoCoordinates::clear_latitude() {
  latitude_ = 0;
}
inline float GeoCoordinates::latitude() const {
  // @@protoc_insertion_point(field_get:metamoto.types.GeoCoordinates.latitude)
  return latitude_;
}
inline void GeoCoordinates::set_latitude(float value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:metamoto.types.GeoCoordinates.latitude)
}

// float longitude = 2;
inline void GeoCoordinates::clear_longitude() {
  longitude_ = 0;
}
inline float GeoCoordinates::longitude() const {
  // @@protoc_insertion_point(field_get:metamoto.types.GeoCoordinates.longitude)
  return longitude_;
}
inline void GeoCoordinates::set_longitude(float value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:metamoto.types.GeoCoordinates.longitude)
}

// float altitude = 3;
inline void GeoCoordinates::clear_altitude() {
  altitude_ = 0;
}
inline float GeoCoordinates::altitude() const {
  // @@protoc_insertion_point(field_get:metamoto.types.GeoCoordinates.altitude)
  return altitude_;
}
inline void GeoCoordinates::set_altitude(float value) {
  
  altitude_ = value;
  // @@protoc_insertion_point(field_set:metamoto.types.GeoCoordinates.altitude)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace types
}  // namespace metamoto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_metamoto_2ftypes_2fgeo_5fcoordinates_2eproto
