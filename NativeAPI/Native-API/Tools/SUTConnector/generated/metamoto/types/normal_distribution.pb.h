// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metamoto/types/normal_distribution.proto

#ifndef PROTOBUF_INCLUDED_metamoto_2ftypes_2fnormal_5fdistribution_2eproto
#define PROTOBUF_INCLUDED_metamoto_2ftypes_2fnormal_5fdistribution_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fnormal_5fdistribution_2eproto 

namespace protobuf_metamoto_2ftypes_2fnormal_5fdistribution_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_metamoto_2ftypes_2fnormal_5fdistribution_2eproto
namespace metamoto {
namespace types {
class NormalDistribution;
class NormalDistributionDefaultTypeInternal;
extern NormalDistributionDefaultTypeInternal _NormalDistribution_default_instance_;
}  // namespace types
}  // namespace metamoto
namespace google {
namespace protobuf {
template<> ::metamoto::types::NormalDistribution* Arena::CreateMaybeMessage<::metamoto::types::NormalDistribution>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace metamoto {
namespace types {

// ===================================================================

class NormalDistribution : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metamoto.types.NormalDistribution) */ {
 public:
  NormalDistribution();
  virtual ~NormalDistribution();

  NormalDistribution(const NormalDistribution& from);

  inline NormalDistribution& operator=(const NormalDistribution& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NormalDistribution(NormalDistribution&& from) noexcept
    : NormalDistribution() {
    *this = ::std::move(from);
  }

  inline NormalDistribution& operator=(NormalDistribution&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NormalDistribution& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NormalDistribution* internal_default_instance() {
    return reinterpret_cast<const NormalDistribution*>(
               &_NormalDistribution_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(NormalDistribution* other);
  friend void swap(NormalDistribution& a, NormalDistribution& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NormalDistribution* New() const final {
    return CreateMaybeMessage<NormalDistribution>(NULL);
  }

  NormalDistribution* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NormalDistribution>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NormalDistribution& from);
  void MergeFrom(const NormalDistribution& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NormalDistribution* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double mean = 1;
  void clear_mean();
  static const int kMeanFieldNumber = 1;
  double mean() const;
  void set_mean(double value);

  // double std_dev = 2;
  void clear_std_dev();
  static const int kStdDevFieldNumber = 2;
  double std_dev() const;
  void set_std_dev(double value);

  // @@protoc_insertion_point(class_scope:metamoto.types.NormalDistribution)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double mean_;
  double std_dev_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_metamoto_2ftypes_2fnormal_5fdistribution_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// NormalDistribution

// double mean = 1;
inline void NormalDistribution::clear_mean() {
  mean_ = 0;
}
inline double NormalDistribution::mean() const {
  // @@protoc_insertion_point(field_get:metamoto.types.NormalDistribution.mean)
  return mean_;
}
inline void NormalDistribution::set_mean(double value) {
  
  mean_ = value;
  // @@protoc_insertion_point(field_set:metamoto.types.NormalDistribution.mean)
}

// double std_dev = 2;
inline void NormalDistribution::clear_std_dev() {
  std_dev_ = 0;
}
inline double NormalDistribution::std_dev() const {
  // @@protoc_insertion_point(field_get:metamoto.types.NormalDistribution.std_dev)
  return std_dev_;
}
inline void NormalDistribution::set_std_dev(double value) {
  
  std_dev_ = value;
  // @@protoc_insertion_point(field_set:metamoto.types.NormalDistribution.std_dev)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace types
}  // namespace metamoto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_metamoto_2ftypes_2fnormal_5fdistribution_2eproto
