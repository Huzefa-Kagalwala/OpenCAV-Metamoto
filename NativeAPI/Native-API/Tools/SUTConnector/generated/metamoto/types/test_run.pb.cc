// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metamoto/types/test_run.proto

#include "metamoto/types/test_run.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_metamoto_2ftypes_2ftest_5fjob_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2ftest_5fjob_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TestJob;
}  // namespace protobuf_metamoto_2ftypes_2ftest_5fjob_2eproto
namespace metamoto {
namespace types {
class TestRunDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestRun>
      _instance;
} _TestRun_default_instance_;
}  // namespace types
}  // namespace metamoto
namespace protobuf_metamoto_2ftypes_2ftest_5frun_2eproto {
static void InitDefaultsTestRun() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::types::_TestRun_default_instance_;
    new (ptr) ::metamoto::types::TestRun();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::types::TestRun::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TestRun =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTestRun}, {
      &protobuf_metamoto_2ftypes_2ftest_5fjob_2eproto::scc_info_TestJob.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TestRun.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestRun, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestRun, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestRun, test_suite_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestRun, test_suite_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestRun, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestRun, end_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestRun, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestRun, result_text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestRun, num_passed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestRun, num_failed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestRun, num_stopped_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestRun, num_errored_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestRun, num_running_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestRun, num_pending_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestRun, compute_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestRun, started_by_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestRun, progress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestRun, test_jobs_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::metamoto::types::TestRun)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::types::_TestRun_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "metamoto/types/test_run.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\035metamoto/types/test_run.proto\022\016metamot"
      "o.types\032 metamoto/types/test_result.prot"
      "o\032\035metamoto/types/test_job.proto\"\227\003\n\007Tes"
      "tRun\022\n\n\002id\030\001 \001(\t\022\025\n\rtest_suite_id\030\002 \001(\t\022"
      "\027\n\017test_suite_name\030\003 \001(\t\022\022\n\nstart_time\030\004"
      " \001(\t\022\020\n\010end_time\030\005 \001(\t\0221\n\006status\030\006 \001(\0162!"
      ".metamoto.types.TestResult.Status\022\023\n\013res"
      "ult_text\030\007 \001(\t\022\022\n\nnum_passed\030\010 \001(\005\022\022\n\nnu"
      "m_failed\030\t \001(\005\022\023\n\013num_stopped\030\n \001(\005\022\023\n\013n"
      "um_errored\030\013 \001(\005\022\023\n\013num_running\030\014 \001(\005\022\023\n"
      "\013num_pending\030\r \001(\005\022\024\n\014compute_time\030\016 \001(\002"
      "\022\022\n\nstarted_by\030\017 \001(\t\022\020\n\010progress\030\020 \001(\002\022*"
      "\n\ttest_jobs\030\021 \003(\0132\027.metamoto.types.TestJ"
      "obB\021\252\002\016Metamoto.Typesb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 549);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "metamoto/types/test_run.proto", &protobuf_RegisterTypes);
  ::protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2ftest_5fjob_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_metamoto_2ftypes_2ftest_5frun_2eproto
namespace metamoto {
namespace types {

// ===================================================================

void TestRun::InitAsDefaultInstance() {
}
void TestRun::clear_test_jobs() {
  test_jobs_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestRun::kIdFieldNumber;
const int TestRun::kTestSuiteIdFieldNumber;
const int TestRun::kTestSuiteNameFieldNumber;
const int TestRun::kStartTimeFieldNumber;
const int TestRun::kEndTimeFieldNumber;
const int TestRun::kStatusFieldNumber;
const int TestRun::kResultTextFieldNumber;
const int TestRun::kNumPassedFieldNumber;
const int TestRun::kNumFailedFieldNumber;
const int TestRun::kNumStoppedFieldNumber;
const int TestRun::kNumErroredFieldNumber;
const int TestRun::kNumRunningFieldNumber;
const int TestRun::kNumPendingFieldNumber;
const int TestRun::kComputeTimeFieldNumber;
const int TestRun::kStartedByFieldNumber;
const int TestRun::kProgressFieldNumber;
const int TestRun::kTestJobsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestRun::TestRun()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2ftypes_2ftest_5frun_2eproto::scc_info_TestRun.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.types.TestRun)
}
TestRun::TestRun(const TestRun& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      test_jobs_(from.test_jobs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  test_suite_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.test_suite_id().size() > 0) {
    test_suite_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_suite_id_);
  }
  test_suite_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.test_suite_name().size() > 0) {
    test_suite_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_suite_name_);
  }
  start_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.start_time().size() > 0) {
    start_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_time_);
  }
  end_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.end_time().size() > 0) {
    end_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_time_);
  }
  result_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.result_text().size() > 0) {
    result_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_text_);
  }
  started_by_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.started_by().size() > 0) {
    started_by_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.started_by_);
  }
  ::memcpy(&status_, &from.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&progress_) -
    reinterpret_cast<char*>(&status_)) + sizeof(progress_));
  // @@protoc_insertion_point(copy_constructor:metamoto.types.TestRun)
}

void TestRun::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_suite_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_suite_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  started_by_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_) -
      reinterpret_cast<char*>(&status_)) + sizeof(progress_));
}

TestRun::~TestRun() {
  // @@protoc_insertion_point(destructor:metamoto.types.TestRun)
  SharedDtor();
}

void TestRun::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_suite_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_suite_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  started_by_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestRun::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TestRun::descriptor() {
  ::protobuf_metamoto_2ftypes_2ftest_5frun_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2ftest_5frun_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestRun& TestRun::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2ftypes_2ftest_5frun_2eproto::scc_info_TestRun.base);
  return *internal_default_instance();
}


void TestRun::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.types.TestRun)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  test_jobs_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_suite_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_suite_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  started_by_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_) -
      reinterpret_cast<char*>(&status_)) + sizeof(progress_));
  _internal_metadata_.Clear();
}

bool TestRun::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.types.TestRun)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestRun.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string test_suite_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test_suite_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_suite_id().data(), static_cast<int>(this->test_suite_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestRun.test_suite_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string test_suite_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test_suite_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_suite_name().data(), static_cast<int>(this->test_suite_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestRun.test_suite_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string start_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_start_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->start_time().data(), static_cast<int>(this->start_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestRun.start_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string end_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_end_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->end_time().data(), static_cast<int>(this->end_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestRun.end_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.TestResult.Status status = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::metamoto::types::TestResult_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string result_text = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->result_text().data(), static_cast<int>(this->result_text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestRun.result_text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num_passed = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_passed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num_failed = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_failed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num_stopped = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_stopped_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num_errored = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_errored_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num_running = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_running_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num_pending = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_pending_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float compute_time = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(117u /* 117 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &compute_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string started_by = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_started_by()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->started_by().data(), static_cast<int>(this->started_by().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestRun.started_by"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float progress = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(133u /* 133 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metamoto.types.TestJob test_jobs = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_test_jobs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.types.TestRun)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.types.TestRun)
  return false;
#undef DO_
}

void TestRun::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.types.TestRun)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestRun.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string test_suite_id = 2;
  if (this->test_suite_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_suite_id().data(), static_cast<int>(this->test_suite_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestRun.test_suite_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->test_suite_id(), output);
  }

  // string test_suite_name = 3;
  if (this->test_suite_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_suite_name().data(), static_cast<int>(this->test_suite_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestRun.test_suite_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->test_suite_name(), output);
  }

  // string start_time = 4;
  if (this->start_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->start_time().data(), static_cast<int>(this->start_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestRun.start_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->start_time(), output);
  }

  // string end_time = 5;
  if (this->end_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->end_time().data(), static_cast<int>(this->end_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestRun.end_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->end_time(), output);
  }

  // .metamoto.types.TestResult.Status status = 6;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->status(), output);
  }

  // string result_text = 7;
  if (this->result_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result_text().data(), static_cast<int>(this->result_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestRun.result_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->result_text(), output);
  }

  // int32 num_passed = 8;
  if (this->num_passed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->num_passed(), output);
  }

  // int32 num_failed = 9;
  if (this->num_failed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->num_failed(), output);
  }

  // int32 num_stopped = 10;
  if (this->num_stopped() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->num_stopped(), output);
  }

  // int32 num_errored = 11;
  if (this->num_errored() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->num_errored(), output);
  }

  // int32 num_running = 12;
  if (this->num_running() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->num_running(), output);
  }

  // int32 num_pending = 13;
  if (this->num_pending() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->num_pending(), output);
  }

  // float compute_time = 14;
  if (this->compute_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->compute_time(), output);
  }

  // string started_by = 15;
  if (this->started_by().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->started_by().data(), static_cast<int>(this->started_by().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestRun.started_by");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->started_by(), output);
  }

  // float progress = 16;
  if (this->progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(16, this->progress(), output);
  }

  // repeated .metamoto.types.TestJob test_jobs = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->test_jobs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17,
      this->test_jobs(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.types.TestRun)
}

::google::protobuf::uint8* TestRun::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.types.TestRun)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestRun.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string test_suite_id = 2;
  if (this->test_suite_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_suite_id().data(), static_cast<int>(this->test_suite_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestRun.test_suite_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->test_suite_id(), target);
  }

  // string test_suite_name = 3;
  if (this->test_suite_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_suite_name().data(), static_cast<int>(this->test_suite_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestRun.test_suite_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->test_suite_name(), target);
  }

  // string start_time = 4;
  if (this->start_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->start_time().data(), static_cast<int>(this->start_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestRun.start_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->start_time(), target);
  }

  // string end_time = 5;
  if (this->end_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->end_time().data(), static_cast<int>(this->end_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestRun.end_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->end_time(), target);
  }

  // .metamoto.types.TestResult.Status status = 6;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->status(), target);
  }

  // string result_text = 7;
  if (this->result_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result_text().data(), static_cast<int>(this->result_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestRun.result_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->result_text(), target);
  }

  // int32 num_passed = 8;
  if (this->num_passed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->num_passed(), target);
  }

  // int32 num_failed = 9;
  if (this->num_failed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->num_failed(), target);
  }

  // int32 num_stopped = 10;
  if (this->num_stopped() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->num_stopped(), target);
  }

  // int32 num_errored = 11;
  if (this->num_errored() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->num_errored(), target);
  }

  // int32 num_running = 12;
  if (this->num_running() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->num_running(), target);
  }

  // int32 num_pending = 13;
  if (this->num_pending() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->num_pending(), target);
  }

  // float compute_time = 14;
  if (this->compute_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->compute_time(), target);
  }

  // string started_by = 15;
  if (this->started_by().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->started_by().data(), static_cast<int>(this->started_by().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestRun.started_by");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->started_by(), target);
  }

  // float progress = 16;
  if (this->progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(16, this->progress(), target);
  }

  // repeated .metamoto.types.TestJob test_jobs = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->test_jobs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->test_jobs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.types.TestRun)
  return target;
}

size_t TestRun::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.types.TestRun)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .metamoto.types.TestJob test_jobs = 17;
  {
    unsigned int count = static_cast<unsigned int>(this->test_jobs_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->test_jobs(static_cast<int>(i)));
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string test_suite_id = 2;
  if (this->test_suite_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->test_suite_id());
  }

  // string test_suite_name = 3;
  if (this->test_suite_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->test_suite_name());
  }

  // string start_time = 4;
  if (this->start_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->start_time());
  }

  // string end_time = 5;
  if (this->end_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->end_time());
  }

  // string result_text = 7;
  if (this->result_text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result_text());
  }

  // string started_by = 15;
  if (this->started_by().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->started_by());
  }

  // .metamoto.types.TestResult.Status status = 6;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // int32 num_passed = 8;
  if (this->num_passed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_passed());
  }

  // int32 num_failed = 9;
  if (this->num_failed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_failed());
  }

  // int32 num_stopped = 10;
  if (this->num_stopped() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_stopped());
  }

  // int32 num_errored = 11;
  if (this->num_errored() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_errored());
  }

  // int32 num_running = 12;
  if (this->num_running() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_running());
  }

  // int32 num_pending = 13;
  if (this->num_pending() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_pending());
  }

  // float compute_time = 14;
  if (this->compute_time() != 0) {
    total_size += 1 + 4;
  }

  // float progress = 16;
  if (this->progress() != 0) {
    total_size += 2 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestRun::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.types.TestRun)
  GOOGLE_DCHECK_NE(&from, this);
  const TestRun* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestRun>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.types.TestRun)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.types.TestRun)
    MergeFrom(*source);
  }
}

void TestRun::MergeFrom(const TestRun& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.types.TestRun)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  test_jobs_.MergeFrom(from.test_jobs_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.test_suite_id().size() > 0) {

    test_suite_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_suite_id_);
  }
  if (from.test_suite_name().size() > 0) {

    test_suite_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_suite_name_);
  }
  if (from.start_time().size() > 0) {

    start_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_time_);
  }
  if (from.end_time().size() > 0) {

    end_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_time_);
  }
  if (from.result_text().size() > 0) {

    result_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_text_);
  }
  if (from.started_by().size() > 0) {

    started_by_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.started_by_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.num_passed() != 0) {
    set_num_passed(from.num_passed());
  }
  if (from.num_failed() != 0) {
    set_num_failed(from.num_failed());
  }
  if (from.num_stopped() != 0) {
    set_num_stopped(from.num_stopped());
  }
  if (from.num_errored() != 0) {
    set_num_errored(from.num_errored());
  }
  if (from.num_running() != 0) {
    set_num_running(from.num_running());
  }
  if (from.num_pending() != 0) {
    set_num_pending(from.num_pending());
  }
  if (from.compute_time() != 0) {
    set_compute_time(from.compute_time());
  }
  if (from.progress() != 0) {
    set_progress(from.progress());
  }
}

void TestRun::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.types.TestRun)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestRun::CopyFrom(const TestRun& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.types.TestRun)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestRun::IsInitialized() const {
  return true;
}

void TestRun::Swap(TestRun* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestRun::InternalSwap(TestRun* other) {
  using std::swap;
  CastToBase(&test_jobs_)->InternalSwap(CastToBase(&other->test_jobs_));
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  test_suite_id_.Swap(&other->test_suite_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  test_suite_name_.Swap(&other->test_suite_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  start_time_.Swap(&other->start_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  end_time_.Swap(&other->end_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  result_text_.Swap(&other->result_text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  started_by_.Swap(&other->started_by_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
  swap(num_passed_, other->num_passed_);
  swap(num_failed_, other->num_failed_);
  swap(num_stopped_, other->num_stopped_);
  swap(num_errored_, other->num_errored_);
  swap(num_running_, other->num_running_);
  swap(num_pending_, other->num_pending_);
  swap(compute_time_, other->compute_time_);
  swap(progress_, other->progress_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TestRun::GetMetadata() const {
  protobuf_metamoto_2ftypes_2ftest_5frun_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2ftest_5frun_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace types
}  // namespace metamoto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::types::TestRun* Arena::CreateMaybeMessage< ::metamoto::types::TestRun >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::types::TestRun >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
