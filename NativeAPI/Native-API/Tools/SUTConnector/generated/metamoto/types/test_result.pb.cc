// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metamoto/types/test_result.proto

#include "metamoto/types/test_result.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_metamoto_2ftypes_2fasset_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fasset_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Asset;
}  // namespace protobuf_metamoto_2ftypes_2fasset_2eproto
namespace protobuf_metamoto_2ftypes_2fego_5fvehicle_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fego_5fvehicle_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_SensorMount;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fego_5fvehicle_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_Controller;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fego_5fvehicle_2eproto ::google::protobuf::internal::SCCInfo<6> scc_info_Sensor;
}  // namespace protobuf_metamoto_2ftypes_2fego_5fvehicle_2eproto
namespace protobuf_metamoto_2ftypes_2fpose_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fpose_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Pose;
}  // namespace protobuf_metamoto_2ftypes_2fpose_2eproto
namespace protobuf_metamoto_2ftypes_2fresult_5fmetadata_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fresult_5fmetadata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ResultMetadata;
}  // namespace protobuf_metamoto_2ftypes_2fresult_5fmetadata_2eproto
namespace protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestResult_DataBusTopic;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestResult_DataStream;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestResult_Pedestrian;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestResult_Result;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TestResult_Statistics;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_TestResult_Vehicle_Binary;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto ::google::protobuf::internal::SCCInfo<6> scc_info_TestResult_Vehicle;
}  // namespace protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto
namespace protobuf_metamoto_2ftypes_2fvehicle_5finstance_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fvehicle_5finstance_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_VehicleInstance;
}  // namespace protobuf_metamoto_2ftypes_2fvehicle_5finstance_2eproto
namespace metamoto {
namespace types {
class TestResult_ResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestResult_Result>
      _instance;
} _TestResult_Result_default_instance_;
class TestResult_StatisticsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestResult_Statistics>
      _instance;
} _TestResult_Statistics_default_instance_;
class TestResult_DataBusTopicDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestResult_DataBusTopic>
      _instance;
} _TestResult_DataBusTopic_default_instance_;
class TestResult_Vehicle_BinaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestResult_Vehicle_Binary>
      _instance;
  const ::metamoto::types::Controller* controller_;
  const ::metamoto::types::Sensor* sensor_;
} _TestResult_Vehicle_Binary_default_instance_;
class TestResult_VehicleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestResult_Vehicle>
      _instance;
} _TestResult_Vehicle_default_instance_;
class TestResult_PedestrianDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestResult_Pedestrian>
      _instance;
} _TestResult_Pedestrian_default_instance_;
class TestResult_DataStreamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestResult_DataStream>
      _instance;
} _TestResult_DataStream_default_instance_;
class TestResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestResult>
      _instance;
} _TestResult_default_instance_;
}  // namespace types
}  // namespace metamoto
namespace protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto {
static void InitDefaultsTestResult_Result() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::types::_TestResult_Result_default_instance_;
    new (ptr) ::metamoto::types::TestResult_Result();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::types::TestResult_Result::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestResult_Result =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestResult_Result}, {}};

static void InitDefaultsTestResult_Statistics() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::types::_TestResult_Statistics_default_instance_;
    new (ptr) ::metamoto::types::TestResult_Statistics();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::types::TestResult_Statistics::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestResult_Statistics =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestResult_Statistics}, {}};

static void InitDefaultsTestResult_DataBusTopic() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::types::_TestResult_DataBusTopic_default_instance_;
    new (ptr) ::metamoto::types::TestResult_DataBusTopic();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::types::TestResult_DataBusTopic::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestResult_DataBusTopic =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestResult_DataBusTopic}, {}};

static void InitDefaultsTestResult_Vehicle_Binary() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::types::_TestResult_Vehicle_Binary_default_instance_;
    new (ptr) ::metamoto::types::TestResult_Vehicle_Binary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::types::TestResult_Vehicle_Binary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_TestResult_Vehicle_Binary =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsTestResult_Vehicle_Binary}, {
      &protobuf_metamoto_2ftypes_2fego_5fvehicle_2eproto::scc_info_Controller.base,
      &protobuf_metamoto_2ftypes_2fego_5fvehicle_2eproto::scc_info_Sensor.base,
      &protobuf_metamoto_2ftypes_2fresult_5fmetadata_2eproto::scc_info_ResultMetadata.base,}};

static void InitDefaultsTestResult_Vehicle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::types::_TestResult_Vehicle_default_instance_;
    new (ptr) ::metamoto::types::TestResult_Vehicle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::types::TestResult_Vehicle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_TestResult_Vehicle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsTestResult_Vehicle}, {
      &protobuf_metamoto_2ftypes_2fvehicle_5finstance_2eproto::scc_info_VehicleInstance.base,
      &protobuf_metamoto_2ftypes_2fpose_2eproto::scc_info_Pose.base,
      &protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::scc_info_TestResult_Vehicle_Binary.base,
      &protobuf_metamoto_2ftypes_2fego_5fvehicle_2eproto::scc_info_SensorMount.base,
      &protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::scc_info_TestResult_DataBusTopic.base,
      &protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::scc_info_TestResult_DataStream.base,}};

static void InitDefaultsTestResult_Pedestrian() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::types::_TestResult_Pedestrian_default_instance_;
    new (ptr) ::metamoto::types::TestResult_Pedestrian();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::types::TestResult_Pedestrian::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestResult_Pedestrian =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestResult_Pedestrian}, {}};

static void InitDefaultsTestResult_DataStream() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::types::_TestResult_DataStream_default_instance_;
    new (ptr) ::metamoto::types::TestResult_DataStream();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::types::TestResult_DataStream::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TestResult_DataStream =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTestResult_DataStream}, {}};

static void InitDefaultsTestResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::types::_TestResult_default_instance_;
    new (ptr) ::metamoto::types::TestResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::types::TestResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<7> scc_info_TestResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 7, InitDefaultsTestResult}, {
      &protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::scc_info_TestResult_Result.base,
      &protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::scc_info_TestResult_Statistics.base,
      &protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::scc_info_TestResult_DataBusTopic.base,
      &protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::scc_info_TestResult_Vehicle.base,
      &protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::scc_info_TestResult_Pedestrian.base,
      &protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::scc_info_TestResult_DataStream.base,
      &protobuf_metamoto_2ftypes_2fasset_2eproto::scc_info_Asset.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TestResult_Result.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestResult_Statistics.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestResult_DataBusTopic.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestResult_Vehicle_Binary.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestResult_Vehicle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestResult_Pedestrian.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestResult_DataStream.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestResult.base);
}

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_Result, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_Result, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_Statistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_Statistics, simulation_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_Statistics, real_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_Statistics, render_frame_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_Statistics, physics_frame_rate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_DataBusTopic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_DataBusTopic, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_DataBusTopic, message_file_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_Vehicle_Binary, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_Vehicle_Binary, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::metamoto::types::TestResult_Vehicle_BinaryDefaultTypeInternal, controller_),
  offsetof(::metamoto::types::TestResult_Vehicle_BinaryDefaultTypeInternal, sensor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_Vehicle_Binary, results_directory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_Vehicle_Binary, results_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_Vehicle_Binary, type_oneof_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_Vehicle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_Vehicle, instance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_Vehicle, transforms_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_Vehicle, pose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_Vehicle, binaries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_Vehicle, sensor_mounts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_Vehicle, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_Vehicle, results_directory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_Vehicle, topics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_Vehicle, data_streams_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_Vehicle, visualizations_file_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_Pedestrian, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_Pedestrian, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_Pedestrian, transforms_file_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_DataStream, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_DataStream, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_DataStream, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_DataStream, units_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult_DataStream, filename_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult, test_engine_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult, statistics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult, topics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult, test_case_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult, log_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult, intersection_series_log_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult, transforms_directory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult, data_streams_directory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult, final_views_directory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult, data_bus_directory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult, ego_vehicle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult, vehicles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult, pedestrians_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult, final_view_files_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult, data_streams_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult, assets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestResult, ego_vehicles_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::metamoto::types::TestResult_Result)},
  { 7, -1, sizeof(::metamoto::types::TestResult_Statistics)},
  { 16, -1, sizeof(::metamoto::types::TestResult_DataBusTopic)},
  { 23, -1, sizeof(::metamoto::types::TestResult_Vehicle_Binary)},
  { 33, -1, sizeof(::metamoto::types::TestResult_Vehicle)},
  { 48, -1, sizeof(::metamoto::types::TestResult_Pedestrian)},
  { 55, -1, sizeof(::metamoto::types::TestResult_DataStream)},
  { 64, -1, sizeof(::metamoto::types::TestResult)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::types::_TestResult_Result_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::types::_TestResult_Statistics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::types::_TestResult_DataBusTopic_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::types::_TestResult_Vehicle_Binary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::types::_TestResult_Vehicle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::types::_TestResult_Pedestrian_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::types::_TestResult_DataStream_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::types::_TestResult_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "metamoto/types/test_result.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n metamoto/types/test_result.proto\022\016meta"
      "moto.types\032\032metamoto/types/asset.proto\032 "
      "metamoto/types/ego_vehicle.proto\032\031metamo"
      "to/types/pose.proto\032$metamoto/types/resu"
      "lt_metadata.proto\032%metamoto/types/vehicl"
      "e_instance.proto\"\214\017\n\nTestResult\022\014\n\004name\030"
      "\001 \001(\t\022\021\n\ttimestamp\030\002 \001(\t\022\033\n\023test_engine_"
      "version\030\003 \001(\t\0221\n\006result\030\004 \001(\0132!.metamoto"
      ".types.TestResult.Result\0229\n\nstatistics\030\005"
      " \001(\0132%.metamoto.types.TestResult.Statist"
      "ics\0227\n\006topics\030\006 \003(\0132\'.metamoto.types.Tes"
      "tResult.DataBusTopic\022\026\n\016test_case_file\030\007"
      " \001(\t\022\020\n\010log_file\030\010 \001(\t\022$\n\034intersection_s"
      "eries_log_file\030\t \001(\t\022\034\n\024transforms_direc"
      "tory\030\n \001(\t\022\036\n\026data_streams_directory\030\013 \001"
      "(\t\022\035\n\025final_views_directory\030\014 \001(\t\022\032\n\022dat"
      "a_bus_directory\030\r \001(\t\0227\n\013ego_vehicle\030\016 \001"
      "(\0132\".metamoto.types.TestResult.Vehicle\0224"
      "\n\010vehicles\030\017 \003(\0132\".metamoto.types.TestRe"
      "sult.Vehicle\022:\n\013pedestrians\030\020 \003(\0132%.meta"
      "moto.types.TestResult.Pedestrian\022\030\n\020fina"
      "l_view_files\030\021 \003(\t\022;\n\014data_streams\030\022 \003(\013"
      "2%.metamoto.types.TestResult.DataStream\022"
      "%\n\006assets\030\023 \003(\0132\025.metamoto.types.Asset\0228"
      "\n\014ego_vehicles\030\024 \003(\0132\".metamoto.types.Te"
      "stResult.Vehicle\032K\n\006Result\0221\n\006status\030\001 \001"
      "(\0162!.metamoto.types.TestResult.Status\022\016\n"
      "\006reason\030\002 \001(\t\032o\n\nStatistics\022\027\n\017simulatio"
      "n_time\030\001 \001(\002\022\021\n\treal_time\030\002 \001(\002\022\031\n\021rende"
      "r_frame_rate\030\003 \001(\002\022\032\n\022physics_frame_rate"
      "\030\004 \001(\002\0322\n\014DataBusTopic\022\014\n\004name\030\001 \001(\t\022\024\n\014"
      "message_file\030\002 \001(\t\032\352\004\n\007Vehicle\0221\n\010instan"
      "ce\030\001 \001(\0132\037.metamoto.types.VehicleInstanc"
      "e\022\027\n\017transforms_file\030\002 \001(\t\022\"\n\004pose\030\003 \001(\013"
      "2\024.metamoto.types.Pose\022;\n\010binaries\030\004 \003(\013"
      "2).metamoto.types.TestResult.Vehicle.Bin"
      "ary\0222\n\rsensor_mounts\030\005 \003(\0132\033.metamoto.ty"
      "pes.SensorMount\022\n\n\002id\030\006 \001(\t\022\031\n\021results_d"
      "irectory\030\007 \001(\t\0227\n\006topics\030\010 \003(\0132\'.metamot"
      "o.types.TestResult.DataBusTopic\022;\n\014data_"
      "streams\030\t \003(\0132%.metamoto.types.TestResul"
      "t.DataStream\022\033\n\023visualizations_file\030\n \001("
      "\t\032\303\001\n\006Binary\0220\n\ncontroller\030\001 \001(\0132\032.metam"
      "oto.types.ControllerH\000\022(\n\006sensor\030\002 \001(\0132\026"
      ".metamoto.types.SensorH\000\022\031\n\021results_dire"
      "ctory\030\003 \001(\t\0224\n\014results_data\030\004 \003(\0132\036.meta"
      "moto.types.ResultMetadataB\014\n\ntype_oneof\032"
      "3\n\nPedestrian\022\014\n\004name\030\001 \001(\t\022\027\n\017transform"
      "s_file\030\002 \001(\t\032P\n\nDataStream\022\014\n\004name\030\001 \001(\t"
      "\022\023\n\013description\030\002 \001(\t\022\r\n\005units\030\003 \001(\t\022\020\n\010"
      "filename\030\004 \001(\t\"\206\001\n\006Status\022\013\n\007UNKNOWN\020\000\022\t"
      "\n\005OTHER\020\001\022\010\n\004PASS\020\002\022\010\n\004FAIL\020\003\022\010\n\004STOP\020\004\022"
      "\t\n\005ERROR\020\005\022\013\n\007PENDING\020\006\022\013\n\007RUNNING\020\007\022\014\n\010"
      "STOPPING\020\010\022\023\n\017POST_PROCESSING\020\tB\021\252\002\016Meta"
      "moto.Typesb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2178);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "metamoto/types/test_result.proto", &protobuf_RegisterTypes);
  ::protobuf_metamoto_2ftypes_2fasset_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2fego_5fvehicle_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2fpose_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2fresult_5fmetadata_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2fvehicle_5finstance_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto
namespace metamoto {
namespace types {
const ::google::protobuf::EnumDescriptor* TestResult_Status_descriptor() {
  protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::file_level_enum_descriptors[0];
}
bool TestResult_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TestResult_Status TestResult::UNKNOWN;
const TestResult_Status TestResult::OTHER;
const TestResult_Status TestResult::PASS;
const TestResult_Status TestResult::FAIL;
const TestResult_Status TestResult::STOP;
const TestResult_Status TestResult::ERROR;
const TestResult_Status TestResult::PENDING;
const TestResult_Status TestResult::RUNNING;
const TestResult_Status TestResult::STOPPING;
const TestResult_Status TestResult::POST_PROCESSING;
const TestResult_Status TestResult::Status_MIN;
const TestResult_Status TestResult::Status_MAX;
const int TestResult::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void TestResult_Result::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestResult_Result::kStatusFieldNumber;
const int TestResult_Result::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestResult_Result::TestResult_Result()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::scc_info_TestResult_Result.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.types.TestResult.Result)
}
TestResult_Result::TestResult_Result(const TestResult_Result& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reason().size() > 0) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:metamoto.types.TestResult.Result)
}

void TestResult_Result::SharedCtor() {
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
}

TestResult_Result::~TestResult_Result() {
  // @@protoc_insertion_point(destructor:metamoto.types.TestResult.Result)
  SharedDtor();
}

void TestResult_Result::SharedDtor() {
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestResult_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TestResult_Result::descriptor() {
  ::protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestResult_Result& TestResult_Result::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::scc_info_TestResult_Result.base);
  return *internal_default_instance();
}


void TestResult_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.types.TestResult.Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  _internal_metadata_.Clear();
}

bool TestResult_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.types.TestResult.Result)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .metamoto.types.TestResult.Status status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::metamoto::types::TestResult_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestResult.Result.reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.types.TestResult.Result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.types.TestResult.Result)
  return false;
#undef DO_
}

void TestResult_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.types.TestResult.Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .metamoto.types.TestResult.Status status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.Result.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.types.TestResult.Result)
}

::google::protobuf::uint8* TestResult_Result::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.types.TestResult.Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .metamoto.types.TestResult.Status status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.Result.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.types.TestResult.Result)
  return target;
}

size_t TestResult_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.types.TestResult.Result)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string reason = 2;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  // .metamoto.types.TestResult.Status status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestResult_Result::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.types.TestResult.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const TestResult_Result* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestResult_Result>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.types.TestResult.Result)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.types.TestResult.Result)
    MergeFrom(*source);
  }
}

void TestResult_Result::MergeFrom(const TestResult_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.types.TestResult.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reason().size() > 0) {

    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void TestResult_Result::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.types.TestResult.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestResult_Result::CopyFrom(const TestResult_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.types.TestResult.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestResult_Result::IsInitialized() const {
  return true;
}

void TestResult_Result::Swap(TestResult_Result* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestResult_Result::InternalSwap(TestResult_Result* other) {
  using std::swap;
  reason_.Swap(&other->reason_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TestResult_Result::GetMetadata() const {
  protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TestResult_Statistics::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestResult_Statistics::kSimulationTimeFieldNumber;
const int TestResult_Statistics::kRealTimeFieldNumber;
const int TestResult_Statistics::kRenderFrameRateFieldNumber;
const int TestResult_Statistics::kPhysicsFrameRateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestResult_Statistics::TestResult_Statistics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::scc_info_TestResult_Statistics.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.types.TestResult.Statistics)
}
TestResult_Statistics::TestResult_Statistics(const TestResult_Statistics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&simulation_time_, &from.simulation_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&physics_frame_rate_) -
    reinterpret_cast<char*>(&simulation_time_)) + sizeof(physics_frame_rate_));
  // @@protoc_insertion_point(copy_constructor:metamoto.types.TestResult.Statistics)
}

void TestResult_Statistics::SharedCtor() {
  ::memset(&simulation_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&physics_frame_rate_) -
      reinterpret_cast<char*>(&simulation_time_)) + sizeof(physics_frame_rate_));
}

TestResult_Statistics::~TestResult_Statistics() {
  // @@protoc_insertion_point(destructor:metamoto.types.TestResult.Statistics)
  SharedDtor();
}

void TestResult_Statistics::SharedDtor() {
}

void TestResult_Statistics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TestResult_Statistics::descriptor() {
  ::protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestResult_Statistics& TestResult_Statistics::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::scc_info_TestResult_Statistics.base);
  return *internal_default_instance();
}


void TestResult_Statistics::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.types.TestResult.Statistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&simulation_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&physics_frame_rate_) -
      reinterpret_cast<char*>(&simulation_time_)) + sizeof(physics_frame_rate_));
  _internal_metadata_.Clear();
}

bool TestResult_Statistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.types.TestResult.Statistics)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float simulation_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &simulation_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float real_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &real_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float render_frame_rate = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &render_frame_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float physics_frame_rate = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &physics_frame_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.types.TestResult.Statistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.types.TestResult.Statistics)
  return false;
#undef DO_
}

void TestResult_Statistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.types.TestResult.Statistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float simulation_time = 1;
  if (this->simulation_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->simulation_time(), output);
  }

  // float real_time = 2;
  if (this->real_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->real_time(), output);
  }

  // float render_frame_rate = 3;
  if (this->render_frame_rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->render_frame_rate(), output);
  }

  // float physics_frame_rate = 4;
  if (this->physics_frame_rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->physics_frame_rate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.types.TestResult.Statistics)
}

::google::protobuf::uint8* TestResult_Statistics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.types.TestResult.Statistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float simulation_time = 1;
  if (this->simulation_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->simulation_time(), target);
  }

  // float real_time = 2;
  if (this->real_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->real_time(), target);
  }

  // float render_frame_rate = 3;
  if (this->render_frame_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->render_frame_rate(), target);
  }

  // float physics_frame_rate = 4;
  if (this->physics_frame_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->physics_frame_rate(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.types.TestResult.Statistics)
  return target;
}

size_t TestResult_Statistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.types.TestResult.Statistics)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float simulation_time = 1;
  if (this->simulation_time() != 0) {
    total_size += 1 + 4;
  }

  // float real_time = 2;
  if (this->real_time() != 0) {
    total_size += 1 + 4;
  }

  // float render_frame_rate = 3;
  if (this->render_frame_rate() != 0) {
    total_size += 1 + 4;
  }

  // float physics_frame_rate = 4;
  if (this->physics_frame_rate() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestResult_Statistics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.types.TestResult.Statistics)
  GOOGLE_DCHECK_NE(&from, this);
  const TestResult_Statistics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestResult_Statistics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.types.TestResult.Statistics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.types.TestResult.Statistics)
    MergeFrom(*source);
  }
}

void TestResult_Statistics::MergeFrom(const TestResult_Statistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.types.TestResult.Statistics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.simulation_time() != 0) {
    set_simulation_time(from.simulation_time());
  }
  if (from.real_time() != 0) {
    set_real_time(from.real_time());
  }
  if (from.render_frame_rate() != 0) {
    set_render_frame_rate(from.render_frame_rate());
  }
  if (from.physics_frame_rate() != 0) {
    set_physics_frame_rate(from.physics_frame_rate());
  }
}

void TestResult_Statistics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.types.TestResult.Statistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestResult_Statistics::CopyFrom(const TestResult_Statistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.types.TestResult.Statistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestResult_Statistics::IsInitialized() const {
  return true;
}

void TestResult_Statistics::Swap(TestResult_Statistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestResult_Statistics::InternalSwap(TestResult_Statistics* other) {
  using std::swap;
  swap(simulation_time_, other->simulation_time_);
  swap(real_time_, other->real_time_);
  swap(render_frame_rate_, other->render_frame_rate_);
  swap(physics_frame_rate_, other->physics_frame_rate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TestResult_Statistics::GetMetadata() const {
  protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TestResult_DataBusTopic::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestResult_DataBusTopic::kNameFieldNumber;
const int TestResult_DataBusTopic::kMessageFileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestResult_DataBusTopic::TestResult_DataBusTopic()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::scc_info_TestResult_DataBusTopic.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.types.TestResult.DataBusTopic)
}
TestResult_DataBusTopic::TestResult_DataBusTopic(const TestResult_DataBusTopic& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  message_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message_file().size() > 0) {
    message_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_file_);
  }
  // @@protoc_insertion_point(copy_constructor:metamoto.types.TestResult.DataBusTopic)
}

void TestResult_DataBusTopic::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TestResult_DataBusTopic::~TestResult_DataBusTopic() {
  // @@protoc_insertion_point(destructor:metamoto.types.TestResult.DataBusTopic)
  SharedDtor();
}

void TestResult_DataBusTopic::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestResult_DataBusTopic::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TestResult_DataBusTopic::descriptor() {
  ::protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestResult_DataBusTopic& TestResult_DataBusTopic::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::scc_info_TestResult_DataBusTopic.base);
  return *internal_default_instance();
}


void TestResult_DataBusTopic::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.types.TestResult.DataBusTopic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TestResult_DataBusTopic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.types.TestResult.DataBusTopic)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestResult.DataBusTopic.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message_file = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message_file().data(), static_cast<int>(this->message_file().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestResult.DataBusTopic.message_file"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.types.TestResult.DataBusTopic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.types.TestResult.DataBusTopic)
  return false;
#undef DO_
}

void TestResult_DataBusTopic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.types.TestResult.DataBusTopic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.DataBusTopic.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string message_file = 2;
  if (this->message_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message_file().data(), static_cast<int>(this->message_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.DataBusTopic.message_file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message_file(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.types.TestResult.DataBusTopic)
}

::google::protobuf::uint8* TestResult_DataBusTopic::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.types.TestResult.DataBusTopic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.DataBusTopic.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string message_file = 2;
  if (this->message_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message_file().data(), static_cast<int>(this->message_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.DataBusTopic.message_file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message_file(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.types.TestResult.DataBusTopic)
  return target;
}

size_t TestResult_DataBusTopic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.types.TestResult.DataBusTopic)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string message_file = 2;
  if (this->message_file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message_file());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestResult_DataBusTopic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.types.TestResult.DataBusTopic)
  GOOGLE_DCHECK_NE(&from, this);
  const TestResult_DataBusTopic* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestResult_DataBusTopic>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.types.TestResult.DataBusTopic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.types.TestResult.DataBusTopic)
    MergeFrom(*source);
  }
}

void TestResult_DataBusTopic::MergeFrom(const TestResult_DataBusTopic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.types.TestResult.DataBusTopic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.message_file().size() > 0) {

    message_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_file_);
  }
}

void TestResult_DataBusTopic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.types.TestResult.DataBusTopic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestResult_DataBusTopic::CopyFrom(const TestResult_DataBusTopic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.types.TestResult.DataBusTopic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestResult_DataBusTopic::IsInitialized() const {
  return true;
}

void TestResult_DataBusTopic::Swap(TestResult_DataBusTopic* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestResult_DataBusTopic::InternalSwap(TestResult_DataBusTopic* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_file_.Swap(&other->message_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TestResult_DataBusTopic::GetMetadata() const {
  protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TestResult_Vehicle_Binary::InitAsDefaultInstance() {
  ::metamoto::types::_TestResult_Vehicle_Binary_default_instance_.controller_ = const_cast< ::metamoto::types::Controller*>(
      ::metamoto::types::Controller::internal_default_instance());
  ::metamoto::types::_TestResult_Vehicle_Binary_default_instance_.sensor_ = const_cast< ::metamoto::types::Sensor*>(
      ::metamoto::types::Sensor::internal_default_instance());
}
void TestResult_Vehicle_Binary::set_allocated_controller(::metamoto::types::Controller* controller) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type_oneof();
  if (controller) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      controller = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, controller, submessage_arena);
    }
    set_has_controller();
    type_oneof_.controller_ = controller;
  }
  // @@protoc_insertion_point(field_set_allocated:metamoto.types.TestResult.Vehicle.Binary.controller)
}
void TestResult_Vehicle_Binary::clear_controller() {
  if (has_controller()) {
    delete type_oneof_.controller_;
    clear_has_type_oneof();
  }
}
void TestResult_Vehicle_Binary::set_allocated_sensor(::metamoto::types::Sensor* sensor) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type_oneof();
  if (sensor) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sensor = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sensor, submessage_arena);
    }
    set_has_sensor();
    type_oneof_.sensor_ = sensor;
  }
  // @@protoc_insertion_point(field_set_allocated:metamoto.types.TestResult.Vehicle.Binary.sensor)
}
void TestResult_Vehicle_Binary::clear_sensor() {
  if (has_sensor()) {
    delete type_oneof_.sensor_;
    clear_has_type_oneof();
  }
}
void TestResult_Vehicle_Binary::clear_results_data() {
  results_data_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestResult_Vehicle_Binary::kControllerFieldNumber;
const int TestResult_Vehicle_Binary::kSensorFieldNumber;
const int TestResult_Vehicle_Binary::kResultsDirectoryFieldNumber;
const int TestResult_Vehicle_Binary::kResultsDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestResult_Vehicle_Binary::TestResult_Vehicle_Binary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::scc_info_TestResult_Vehicle_Binary.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.types.TestResult.Vehicle.Binary)
}
TestResult_Vehicle_Binary::TestResult_Vehicle_Binary(const TestResult_Vehicle_Binary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      results_data_(from.results_data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  results_directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.results_directory().size() > 0) {
    results_directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.results_directory_);
  }
  clear_has_type_oneof();
  switch (from.type_oneof_case()) {
    case kController: {
      mutable_controller()->::metamoto::types::Controller::MergeFrom(from.controller());
      break;
    }
    case kSensor: {
      mutable_sensor()->::metamoto::types::Sensor::MergeFrom(from.sensor());
      break;
    }
    case TYPE_ONEOF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:metamoto.types.TestResult.Vehicle.Binary)
}

void TestResult_Vehicle_Binary::SharedCtor() {
  results_directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type_oneof();
}

TestResult_Vehicle_Binary::~TestResult_Vehicle_Binary() {
  // @@protoc_insertion_point(destructor:metamoto.types.TestResult.Vehicle.Binary)
  SharedDtor();
}

void TestResult_Vehicle_Binary::SharedDtor() {
  results_directory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_type_oneof()) {
    clear_type_oneof();
  }
}

void TestResult_Vehicle_Binary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TestResult_Vehicle_Binary::descriptor() {
  ::protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestResult_Vehicle_Binary& TestResult_Vehicle_Binary::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::scc_info_TestResult_Vehicle_Binary.base);
  return *internal_default_instance();
}


void TestResult_Vehicle_Binary::clear_type_oneof() {
// @@protoc_insertion_point(one_of_clear_start:metamoto.types.TestResult.Vehicle.Binary)
  switch (type_oneof_case()) {
    case kController: {
      delete type_oneof_.controller_;
      break;
    }
    case kSensor: {
      delete type_oneof_.sensor_;
      break;
    }
    case TYPE_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_ONEOF_NOT_SET;
}


void TestResult_Vehicle_Binary::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.types.TestResult.Vehicle.Binary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_data_.Clear();
  results_directory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_type_oneof();
  _internal_metadata_.Clear();
}

bool TestResult_Vehicle_Binary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.types.TestResult.Vehicle.Binary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .metamoto.types.Controller controller = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_controller()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.Sensor sensor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sensor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string results_directory = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_results_directory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->results_directory().data(), static_cast<int>(this->results_directory().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestResult.Vehicle.Binary.results_directory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metamoto.types.ResultMetadata results_data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_results_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.types.TestResult.Vehicle.Binary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.types.TestResult.Vehicle.Binary)
  return false;
#undef DO_
}

void TestResult_Vehicle_Binary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.types.TestResult.Vehicle.Binary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .metamoto.types.Controller controller = 1;
  if (has_controller()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_controller(), output);
  }

  // .metamoto.types.Sensor sensor = 2;
  if (has_sensor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_sensor(), output);
  }

  // string results_directory = 3;
  if (this->results_directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->results_directory().data(), static_cast<int>(this->results_directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.Vehicle.Binary.results_directory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->results_directory(), output);
  }

  // repeated .metamoto.types.ResultMetadata results_data = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->results_data(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.types.TestResult.Vehicle.Binary)
}

::google::protobuf::uint8* TestResult_Vehicle_Binary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.types.TestResult.Vehicle.Binary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .metamoto.types.Controller controller = 1;
  if (has_controller()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_controller(), deterministic, target);
  }

  // .metamoto.types.Sensor sensor = 2;
  if (has_sensor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_sensor(), deterministic, target);
  }

  // string results_directory = 3;
  if (this->results_directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->results_directory().data(), static_cast<int>(this->results_directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.Vehicle.Binary.results_directory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->results_directory(), target);
  }

  // repeated .metamoto.types.ResultMetadata results_data = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->results_data(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.types.TestResult.Vehicle.Binary)
  return target;
}

size_t TestResult_Vehicle_Binary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.types.TestResult.Vehicle.Binary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .metamoto.types.ResultMetadata results_data = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->results_data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->results_data(static_cast<int>(i)));
    }
  }

  // string results_directory = 3;
  if (this->results_directory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->results_directory());
  }

  switch (type_oneof_case()) {
    // .metamoto.types.Controller controller = 1;
    case kController: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_oneof_.controller_);
      break;
    }
    // .metamoto.types.Sensor sensor = 2;
    case kSensor: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_oneof_.sensor_);
      break;
    }
    case TYPE_ONEOF_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestResult_Vehicle_Binary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.types.TestResult.Vehicle.Binary)
  GOOGLE_DCHECK_NE(&from, this);
  const TestResult_Vehicle_Binary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestResult_Vehicle_Binary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.types.TestResult.Vehicle.Binary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.types.TestResult.Vehicle.Binary)
    MergeFrom(*source);
  }
}

void TestResult_Vehicle_Binary::MergeFrom(const TestResult_Vehicle_Binary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.types.TestResult.Vehicle.Binary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_data_.MergeFrom(from.results_data_);
  if (from.results_directory().size() > 0) {

    results_directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.results_directory_);
  }
  switch (from.type_oneof_case()) {
    case kController: {
      mutable_controller()->::metamoto::types::Controller::MergeFrom(from.controller());
      break;
    }
    case kSensor: {
      mutable_sensor()->::metamoto::types::Sensor::MergeFrom(from.sensor());
      break;
    }
    case TYPE_ONEOF_NOT_SET: {
      break;
    }
  }
}

void TestResult_Vehicle_Binary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.types.TestResult.Vehicle.Binary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestResult_Vehicle_Binary::CopyFrom(const TestResult_Vehicle_Binary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.types.TestResult.Vehicle.Binary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestResult_Vehicle_Binary::IsInitialized() const {
  return true;
}

void TestResult_Vehicle_Binary::Swap(TestResult_Vehicle_Binary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestResult_Vehicle_Binary::InternalSwap(TestResult_Vehicle_Binary* other) {
  using std::swap;
  CastToBase(&results_data_)->InternalSwap(CastToBase(&other->results_data_));
  results_directory_.Swap(&other->results_directory_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_oneof_, other->type_oneof_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TestResult_Vehicle_Binary::GetMetadata() const {
  protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TestResult_Vehicle::InitAsDefaultInstance() {
  ::metamoto::types::_TestResult_Vehicle_default_instance_._instance.get_mutable()->instance_ = const_cast< ::metamoto::types::VehicleInstance*>(
      ::metamoto::types::VehicleInstance::internal_default_instance());
  ::metamoto::types::_TestResult_Vehicle_default_instance_._instance.get_mutable()->pose_ = const_cast< ::metamoto::types::Pose*>(
      ::metamoto::types::Pose::internal_default_instance());
}
void TestResult_Vehicle::clear_instance() {
  if (GetArenaNoVirtual() == NULL && instance_ != NULL) {
    delete instance_;
  }
  instance_ = NULL;
}
void TestResult_Vehicle::clear_pose() {
  if (GetArenaNoVirtual() == NULL && pose_ != NULL) {
    delete pose_;
  }
  pose_ = NULL;
}
void TestResult_Vehicle::clear_sensor_mounts() {
  sensor_mounts_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestResult_Vehicle::kInstanceFieldNumber;
const int TestResult_Vehicle::kTransformsFileFieldNumber;
const int TestResult_Vehicle::kPoseFieldNumber;
const int TestResult_Vehicle::kBinariesFieldNumber;
const int TestResult_Vehicle::kSensorMountsFieldNumber;
const int TestResult_Vehicle::kIdFieldNumber;
const int TestResult_Vehicle::kResultsDirectoryFieldNumber;
const int TestResult_Vehicle::kTopicsFieldNumber;
const int TestResult_Vehicle::kDataStreamsFieldNumber;
const int TestResult_Vehicle::kVisualizationsFileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestResult_Vehicle::TestResult_Vehicle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::scc_info_TestResult_Vehicle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.types.TestResult.Vehicle)
}
TestResult_Vehicle::TestResult_Vehicle(const TestResult_Vehicle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      binaries_(from.binaries_),
      sensor_mounts_(from.sensor_mounts_),
      topics_(from.topics_),
      data_streams_(from.data_streams_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  transforms_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.transforms_file().size() > 0) {
    transforms_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transforms_file_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  results_directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.results_directory().size() > 0) {
    results_directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.results_directory_);
  }
  visualizations_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.visualizations_file().size() > 0) {
    visualizations_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.visualizations_file_);
  }
  if (from.has_instance()) {
    instance_ = new ::metamoto::types::VehicleInstance(*from.instance_);
  } else {
    instance_ = NULL;
  }
  if (from.has_pose()) {
    pose_ = new ::metamoto::types::Pose(*from.pose_);
  } else {
    pose_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:metamoto.types.TestResult.Vehicle)
}

void TestResult_Vehicle::SharedCtor() {
  transforms_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  results_directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  visualizations_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&instance_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pose_) -
      reinterpret_cast<char*>(&instance_)) + sizeof(pose_));
}

TestResult_Vehicle::~TestResult_Vehicle() {
  // @@protoc_insertion_point(destructor:metamoto.types.TestResult.Vehicle)
  SharedDtor();
}

void TestResult_Vehicle::SharedDtor() {
  transforms_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  results_directory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  visualizations_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete instance_;
  if (this != internal_default_instance()) delete pose_;
}

void TestResult_Vehicle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TestResult_Vehicle::descriptor() {
  ::protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestResult_Vehicle& TestResult_Vehicle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::scc_info_TestResult_Vehicle.base);
  return *internal_default_instance();
}


void TestResult_Vehicle::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.types.TestResult.Vehicle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  binaries_.Clear();
  sensor_mounts_.Clear();
  topics_.Clear();
  data_streams_.Clear();
  transforms_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  results_directory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  visualizations_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && instance_ != NULL) {
    delete instance_;
  }
  instance_ = NULL;
  if (GetArenaNoVirtual() == NULL && pose_ != NULL) {
    delete pose_;
  }
  pose_ = NULL;
  _internal_metadata_.Clear();
}

bool TestResult_Vehicle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.types.TestResult.Vehicle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .metamoto.types.VehicleInstance instance = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string transforms_file = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transforms_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->transforms_file().data(), static_cast<int>(this->transforms_file().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestResult.Vehicle.transforms_file"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.Pose pose = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metamoto.types.TestResult.Vehicle.Binary binaries = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_binaries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metamoto.types.SensorMount sensor_mounts = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sensor_mounts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestResult.Vehicle.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string results_directory = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_results_directory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->results_directory().data(), static_cast<int>(this->results_directory().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestResult.Vehicle.results_directory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metamoto.types.TestResult.DataBusTopic topics = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_topics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metamoto.types.TestResult.DataStream data_streams = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_data_streams()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string visualizations_file = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_visualizations_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->visualizations_file().data(), static_cast<int>(this->visualizations_file().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestResult.Vehicle.visualizations_file"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.types.TestResult.Vehicle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.types.TestResult.Vehicle)
  return false;
#undef DO_
}

void TestResult_Vehicle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.types.TestResult.Vehicle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .metamoto.types.VehicleInstance instance = 1;
  if (this->has_instance()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_instance(), output);
  }

  // string transforms_file = 2;
  if (this->transforms_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transforms_file().data(), static_cast<int>(this->transforms_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.Vehicle.transforms_file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->transforms_file(), output);
  }

  // .metamoto.types.Pose pose = 3;
  if (this->has_pose()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_pose(), output);
  }

  // repeated .metamoto.types.TestResult.Vehicle.Binary binaries = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->binaries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->binaries(static_cast<int>(i)),
      output);
  }

  // repeated .metamoto.types.SensorMount sensor_mounts = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sensor_mounts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->sensor_mounts(static_cast<int>(i)),
      output);
  }

  // string id = 6;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.Vehicle.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->id(), output);
  }

  // string results_directory = 7;
  if (this->results_directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->results_directory().data(), static_cast<int>(this->results_directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.Vehicle.results_directory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->results_directory(), output);
  }

  // repeated .metamoto.types.TestResult.DataBusTopic topics = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->topics_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->topics(static_cast<int>(i)),
      output);
  }

  // repeated .metamoto.types.TestResult.DataStream data_streams = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_streams_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->data_streams(static_cast<int>(i)),
      output);
  }

  // string visualizations_file = 10;
  if (this->visualizations_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->visualizations_file().data(), static_cast<int>(this->visualizations_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.Vehicle.visualizations_file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->visualizations_file(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.types.TestResult.Vehicle)
}

::google::protobuf::uint8* TestResult_Vehicle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.types.TestResult.Vehicle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .metamoto.types.VehicleInstance instance = 1;
  if (this->has_instance()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_instance(), deterministic, target);
  }

  // string transforms_file = 2;
  if (this->transforms_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transforms_file().data(), static_cast<int>(this->transforms_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.Vehicle.transforms_file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->transforms_file(), target);
  }

  // .metamoto.types.Pose pose = 3;
  if (this->has_pose()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_pose(), deterministic, target);
  }

  // repeated .metamoto.types.TestResult.Vehicle.Binary binaries = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->binaries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->binaries(static_cast<int>(i)), deterministic, target);
  }

  // repeated .metamoto.types.SensorMount sensor_mounts = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sensor_mounts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->sensor_mounts(static_cast<int>(i)), deterministic, target);
  }

  // string id = 6;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.Vehicle.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->id(), target);
  }

  // string results_directory = 7;
  if (this->results_directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->results_directory().data(), static_cast<int>(this->results_directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.Vehicle.results_directory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->results_directory(), target);
  }

  // repeated .metamoto.types.TestResult.DataBusTopic topics = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->topics_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->topics(static_cast<int>(i)), deterministic, target);
  }

  // repeated .metamoto.types.TestResult.DataStream data_streams = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_streams_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->data_streams(static_cast<int>(i)), deterministic, target);
  }

  // string visualizations_file = 10;
  if (this->visualizations_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->visualizations_file().data(), static_cast<int>(this->visualizations_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.Vehicle.visualizations_file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->visualizations_file(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.types.TestResult.Vehicle)
  return target;
}

size_t TestResult_Vehicle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.types.TestResult.Vehicle)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .metamoto.types.TestResult.Vehicle.Binary binaries = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->binaries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->binaries(static_cast<int>(i)));
    }
  }

  // repeated .metamoto.types.SensorMount sensor_mounts = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->sensor_mounts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sensor_mounts(static_cast<int>(i)));
    }
  }

  // repeated .metamoto.types.TestResult.DataBusTopic topics = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->topics_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->topics(static_cast<int>(i)));
    }
  }

  // repeated .metamoto.types.TestResult.DataStream data_streams = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->data_streams_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->data_streams(static_cast<int>(i)));
    }
  }

  // string transforms_file = 2;
  if (this->transforms_file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->transforms_file());
  }

  // string id = 6;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string results_directory = 7;
  if (this->results_directory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->results_directory());
  }

  // string visualizations_file = 10;
  if (this->visualizations_file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->visualizations_file());
  }

  // .metamoto.types.VehicleInstance instance = 1;
  if (this->has_instance()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *instance_);
  }

  // .metamoto.types.Pose pose = 3;
  if (this->has_pose()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pose_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestResult_Vehicle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.types.TestResult.Vehicle)
  GOOGLE_DCHECK_NE(&from, this);
  const TestResult_Vehicle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestResult_Vehicle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.types.TestResult.Vehicle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.types.TestResult.Vehicle)
    MergeFrom(*source);
  }
}

void TestResult_Vehicle::MergeFrom(const TestResult_Vehicle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.types.TestResult.Vehicle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  binaries_.MergeFrom(from.binaries_);
  sensor_mounts_.MergeFrom(from.sensor_mounts_);
  topics_.MergeFrom(from.topics_);
  data_streams_.MergeFrom(from.data_streams_);
  if (from.transforms_file().size() > 0) {

    transforms_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transforms_file_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.results_directory().size() > 0) {

    results_directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.results_directory_);
  }
  if (from.visualizations_file().size() > 0) {

    visualizations_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.visualizations_file_);
  }
  if (from.has_instance()) {
    mutable_instance()->::metamoto::types::VehicleInstance::MergeFrom(from.instance());
  }
  if (from.has_pose()) {
    mutable_pose()->::metamoto::types::Pose::MergeFrom(from.pose());
  }
}

void TestResult_Vehicle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.types.TestResult.Vehicle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestResult_Vehicle::CopyFrom(const TestResult_Vehicle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.types.TestResult.Vehicle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestResult_Vehicle::IsInitialized() const {
  return true;
}

void TestResult_Vehicle::Swap(TestResult_Vehicle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestResult_Vehicle::InternalSwap(TestResult_Vehicle* other) {
  using std::swap;
  CastToBase(&binaries_)->InternalSwap(CastToBase(&other->binaries_));
  CastToBase(&sensor_mounts_)->InternalSwap(CastToBase(&other->sensor_mounts_));
  CastToBase(&topics_)->InternalSwap(CastToBase(&other->topics_));
  CastToBase(&data_streams_)->InternalSwap(CastToBase(&other->data_streams_));
  transforms_file_.Swap(&other->transforms_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  results_directory_.Swap(&other->results_directory_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  visualizations_file_.Swap(&other->visualizations_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(instance_, other->instance_);
  swap(pose_, other->pose_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TestResult_Vehicle::GetMetadata() const {
  protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TestResult_Pedestrian::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestResult_Pedestrian::kNameFieldNumber;
const int TestResult_Pedestrian::kTransformsFileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestResult_Pedestrian::TestResult_Pedestrian()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::scc_info_TestResult_Pedestrian.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.types.TestResult.Pedestrian)
}
TestResult_Pedestrian::TestResult_Pedestrian(const TestResult_Pedestrian& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  transforms_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.transforms_file().size() > 0) {
    transforms_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transforms_file_);
  }
  // @@protoc_insertion_point(copy_constructor:metamoto.types.TestResult.Pedestrian)
}

void TestResult_Pedestrian::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transforms_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TestResult_Pedestrian::~TestResult_Pedestrian() {
  // @@protoc_insertion_point(destructor:metamoto.types.TestResult.Pedestrian)
  SharedDtor();
}

void TestResult_Pedestrian::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transforms_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestResult_Pedestrian::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TestResult_Pedestrian::descriptor() {
  ::protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestResult_Pedestrian& TestResult_Pedestrian::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::scc_info_TestResult_Pedestrian.base);
  return *internal_default_instance();
}


void TestResult_Pedestrian::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.types.TestResult.Pedestrian)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transforms_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TestResult_Pedestrian::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.types.TestResult.Pedestrian)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestResult.Pedestrian.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string transforms_file = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transforms_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->transforms_file().data(), static_cast<int>(this->transforms_file().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestResult.Pedestrian.transforms_file"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.types.TestResult.Pedestrian)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.types.TestResult.Pedestrian)
  return false;
#undef DO_
}

void TestResult_Pedestrian::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.types.TestResult.Pedestrian)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.Pedestrian.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string transforms_file = 2;
  if (this->transforms_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transforms_file().data(), static_cast<int>(this->transforms_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.Pedestrian.transforms_file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->transforms_file(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.types.TestResult.Pedestrian)
}

::google::protobuf::uint8* TestResult_Pedestrian::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.types.TestResult.Pedestrian)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.Pedestrian.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string transforms_file = 2;
  if (this->transforms_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transforms_file().data(), static_cast<int>(this->transforms_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.Pedestrian.transforms_file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->transforms_file(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.types.TestResult.Pedestrian)
  return target;
}

size_t TestResult_Pedestrian::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.types.TestResult.Pedestrian)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string transforms_file = 2;
  if (this->transforms_file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->transforms_file());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestResult_Pedestrian::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.types.TestResult.Pedestrian)
  GOOGLE_DCHECK_NE(&from, this);
  const TestResult_Pedestrian* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestResult_Pedestrian>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.types.TestResult.Pedestrian)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.types.TestResult.Pedestrian)
    MergeFrom(*source);
  }
}

void TestResult_Pedestrian::MergeFrom(const TestResult_Pedestrian& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.types.TestResult.Pedestrian)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.transforms_file().size() > 0) {

    transforms_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transforms_file_);
  }
}

void TestResult_Pedestrian::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.types.TestResult.Pedestrian)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestResult_Pedestrian::CopyFrom(const TestResult_Pedestrian& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.types.TestResult.Pedestrian)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestResult_Pedestrian::IsInitialized() const {
  return true;
}

void TestResult_Pedestrian::Swap(TestResult_Pedestrian* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestResult_Pedestrian::InternalSwap(TestResult_Pedestrian* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  transforms_file_.Swap(&other->transforms_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TestResult_Pedestrian::GetMetadata() const {
  protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TestResult_DataStream::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestResult_DataStream::kNameFieldNumber;
const int TestResult_DataStream::kDescriptionFieldNumber;
const int TestResult_DataStream::kUnitsFieldNumber;
const int TestResult_DataStream::kFilenameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestResult_DataStream::TestResult_DataStream()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::scc_info_TestResult_DataStream.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.types.TestResult.DataStream)
}
TestResult_DataStream::TestResult_DataStream(const TestResult_DataStream& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  units_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.units().size() > 0) {
    units_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.units_);
  }
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filename().size() > 0) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  // @@protoc_insertion_point(copy_constructor:metamoto.types.TestResult.DataStream)
}

void TestResult_DataStream::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  units_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TestResult_DataStream::~TestResult_DataStream() {
  // @@protoc_insertion_point(destructor:metamoto.types.TestResult.DataStream)
  SharedDtor();
}

void TestResult_DataStream::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  units_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestResult_DataStream::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TestResult_DataStream::descriptor() {
  ::protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestResult_DataStream& TestResult_DataStream::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::scc_info_TestResult_DataStream.base);
  return *internal_default_instance();
}


void TestResult_DataStream::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.types.TestResult.DataStream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  units_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TestResult_DataStream::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.types.TestResult.DataStream)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestResult.DataStream.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestResult.DataStream.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string units = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_units()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->units().data(), static_cast<int>(this->units().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestResult.DataStream.units"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filename = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestResult.DataStream.filename"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.types.TestResult.DataStream)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.types.TestResult.DataStream)
  return false;
#undef DO_
}

void TestResult_DataStream::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.types.TestResult.DataStream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.DataStream.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.DataStream.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // string units = 3;
  if (this->units().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->units().data(), static_cast<int>(this->units().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.DataStream.units");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->units(), output);
  }

  // string filename = 4;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.DataStream.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->filename(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.types.TestResult.DataStream)
}

::google::protobuf::uint8* TestResult_DataStream::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.types.TestResult.DataStream)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.DataStream.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.DataStream.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // string units = 3;
  if (this->units().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->units().data(), static_cast<int>(this->units().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.DataStream.units");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->units(), target);
  }

  // string filename = 4;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.DataStream.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->filename(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.types.TestResult.DataStream)
  return target;
}

size_t TestResult_DataStream::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.types.TestResult.DataStream)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string units = 3;
  if (this->units().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->units());
  }

  // string filename = 4;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestResult_DataStream::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.types.TestResult.DataStream)
  GOOGLE_DCHECK_NE(&from, this);
  const TestResult_DataStream* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestResult_DataStream>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.types.TestResult.DataStream)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.types.TestResult.DataStream)
    MergeFrom(*source);
  }
}

void TestResult_DataStream::MergeFrom(const TestResult_DataStream& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.types.TestResult.DataStream)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.units().size() > 0) {

    units_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.units_);
  }
  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
}

void TestResult_DataStream::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.types.TestResult.DataStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestResult_DataStream::CopyFrom(const TestResult_DataStream& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.types.TestResult.DataStream)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestResult_DataStream::IsInitialized() const {
  return true;
}

void TestResult_DataStream::Swap(TestResult_DataStream* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestResult_DataStream::InternalSwap(TestResult_DataStream* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  units_.Swap(&other->units_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TestResult_DataStream::GetMetadata() const {
  protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TestResult::InitAsDefaultInstance() {
  ::metamoto::types::_TestResult_default_instance_._instance.get_mutable()->result_ = const_cast< ::metamoto::types::TestResult_Result*>(
      ::metamoto::types::TestResult_Result::internal_default_instance());
  ::metamoto::types::_TestResult_default_instance_._instance.get_mutable()->statistics_ = const_cast< ::metamoto::types::TestResult_Statistics*>(
      ::metamoto::types::TestResult_Statistics::internal_default_instance());
  ::metamoto::types::_TestResult_default_instance_._instance.get_mutable()->ego_vehicle_ = const_cast< ::metamoto::types::TestResult_Vehicle*>(
      ::metamoto::types::TestResult_Vehicle::internal_default_instance());
}
void TestResult::clear_assets() {
  assets_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestResult::kNameFieldNumber;
const int TestResult::kTimestampFieldNumber;
const int TestResult::kTestEngineVersionFieldNumber;
const int TestResult::kResultFieldNumber;
const int TestResult::kStatisticsFieldNumber;
const int TestResult::kTopicsFieldNumber;
const int TestResult::kTestCaseFileFieldNumber;
const int TestResult::kLogFileFieldNumber;
const int TestResult::kIntersectionSeriesLogFileFieldNumber;
const int TestResult::kTransformsDirectoryFieldNumber;
const int TestResult::kDataStreamsDirectoryFieldNumber;
const int TestResult::kFinalViewsDirectoryFieldNumber;
const int TestResult::kDataBusDirectoryFieldNumber;
const int TestResult::kEgoVehicleFieldNumber;
const int TestResult::kVehiclesFieldNumber;
const int TestResult::kPedestriansFieldNumber;
const int TestResult::kFinalViewFilesFieldNumber;
const int TestResult::kDataStreamsFieldNumber;
const int TestResult::kAssetsFieldNumber;
const int TestResult::kEgoVehiclesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestResult::TestResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::scc_info_TestResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.types.TestResult)
}
TestResult::TestResult(const TestResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      topics_(from.topics_),
      vehicles_(from.vehicles_),
      pedestrians_(from.pedestrians_),
      final_view_files_(from.final_view_files_),
      data_streams_(from.data_streams_),
      assets_(from.assets_),
      ego_vehicles_(from.ego_vehicles_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  timestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.timestamp().size() > 0) {
    timestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timestamp_);
  }
  test_engine_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.test_engine_version().size() > 0) {
    test_engine_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_engine_version_);
  }
  test_case_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.test_case_file().size() > 0) {
    test_case_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_case_file_);
  }
  log_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.log_file().size() > 0) {
    log_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_file_);
  }
  intersection_series_log_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.intersection_series_log_file().size() > 0) {
    intersection_series_log_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.intersection_series_log_file_);
  }
  transforms_directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.transforms_directory().size() > 0) {
    transforms_directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transforms_directory_);
  }
  data_streams_directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data_streams_directory().size() > 0) {
    data_streams_directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_streams_directory_);
  }
  final_views_directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.final_views_directory().size() > 0) {
    final_views_directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.final_views_directory_);
  }
  data_bus_directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data_bus_directory().size() > 0) {
    data_bus_directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_bus_directory_);
  }
  if (from.has_result()) {
    result_ = new ::metamoto::types::TestResult_Result(*from.result_);
  } else {
    result_ = NULL;
  }
  if (from.has_statistics()) {
    statistics_ = new ::metamoto::types::TestResult_Statistics(*from.statistics_);
  } else {
    statistics_ = NULL;
  }
  if (from.has_ego_vehicle()) {
    ego_vehicle_ = new ::metamoto::types::TestResult_Vehicle(*from.ego_vehicle_);
  } else {
    ego_vehicle_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:metamoto.types.TestResult)
}

void TestResult::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_engine_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_case_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  intersection_series_log_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transforms_directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_streams_directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  final_views_directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_bus_directory_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ego_vehicle_) -
      reinterpret_cast<char*>(&result_)) + sizeof(ego_vehicle_));
}

TestResult::~TestResult() {
  // @@protoc_insertion_point(destructor:metamoto.types.TestResult)
  SharedDtor();
}

void TestResult::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_engine_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_case_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  intersection_series_log_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transforms_directory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_streams_directory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  final_views_directory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_bus_directory_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
  if (this != internal_default_instance()) delete statistics_;
  if (this != internal_default_instance()) delete ego_vehicle_;
}

void TestResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TestResult::descriptor() {
  ::protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestResult& TestResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::scc_info_TestResult.base);
  return *internal_default_instance();
}


void TestResult::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.types.TestResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  topics_.Clear();
  vehicles_.Clear();
  pedestrians_.Clear();
  final_view_files_.Clear();
  data_streams_.Clear();
  assets_.Clear();
  ego_vehicles_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_engine_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_case_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  intersection_series_log_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transforms_directory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_streams_directory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  final_views_directory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_bus_directory_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && result_ != NULL) {
    delete result_;
  }
  result_ = NULL;
  if (GetArenaNoVirtual() == NULL && statistics_ != NULL) {
    delete statistics_;
  }
  statistics_ = NULL;
  if (GetArenaNoVirtual() == NULL && ego_vehicle_ != NULL) {
    delete ego_vehicle_;
  }
  ego_vehicle_ = NULL;
  _internal_metadata_.Clear();
}

bool TestResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.types.TestResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestResult.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timestamp()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->timestamp().data(), static_cast<int>(this->timestamp().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestResult.timestamp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string test_engine_version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test_engine_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_engine_version().data(), static_cast<int>(this->test_engine_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestResult.test_engine_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.TestResult.Result result = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.TestResult.Statistics statistics = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_statistics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metamoto.types.TestResult.DataBusTopic topics = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_topics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string test_case_file = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test_case_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_case_file().data(), static_cast<int>(this->test_case_file().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestResult.test_case_file"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string log_file = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->log_file().data(), static_cast<int>(this->log_file().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestResult.log_file"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string intersection_series_log_file = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_intersection_series_log_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->intersection_series_log_file().data(), static_cast<int>(this->intersection_series_log_file().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestResult.intersection_series_log_file"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string transforms_directory = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transforms_directory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->transforms_directory().data(), static_cast<int>(this->transforms_directory().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestResult.transforms_directory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string data_streams_directory = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data_streams_directory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data_streams_directory().data(), static_cast<int>(this->data_streams_directory().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestResult.data_streams_directory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string final_views_directory = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_final_views_directory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->final_views_directory().data(), static_cast<int>(this->final_views_directory().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestResult.final_views_directory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string data_bus_directory = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data_bus_directory()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data_bus_directory().data(), static_cast<int>(this->data_bus_directory().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestResult.data_bus_directory"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.TestResult.Vehicle ego_vehicle = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ego_vehicle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metamoto.types.TestResult.Vehicle vehicles = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_vehicles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metamoto.types.TestResult.Pedestrian pedestrians = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pedestrians()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string final_view_files = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_final_view_files()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->final_view_files(this->final_view_files_size() - 1).data(),
            static_cast<int>(this->final_view_files(this->final_view_files_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestResult.final_view_files"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metamoto.types.TestResult.DataStream data_streams = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_data_streams()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metamoto.types.Asset assets = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_assets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metamoto.types.TestResult.Vehicle ego_vehicles = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ego_vehicles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.types.TestResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.types.TestResult)
  return false;
#undef DO_
}

void TestResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.types.TestResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string timestamp = 2;
  if (this->timestamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->timestamp().data(), static_cast<int>(this->timestamp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.timestamp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->timestamp(), output);
  }

  // string test_engine_version = 3;
  if (this->test_engine_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_engine_version().data(), static_cast<int>(this->test_engine_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.test_engine_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->test_engine_version(), output);
  }

  // .metamoto.types.TestResult.Result result = 4;
  if (this->has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_result(), output);
  }

  // .metamoto.types.TestResult.Statistics statistics = 5;
  if (this->has_statistics()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_statistics(), output);
  }

  // repeated .metamoto.types.TestResult.DataBusTopic topics = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->topics_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->topics(static_cast<int>(i)),
      output);
  }

  // string test_case_file = 7;
  if (this->test_case_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_case_file().data(), static_cast<int>(this->test_case_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.test_case_file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->test_case_file(), output);
  }

  // string log_file = 8;
  if (this->log_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_file().data(), static_cast<int>(this->log_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.log_file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->log_file(), output);
  }

  // string intersection_series_log_file = 9;
  if (this->intersection_series_log_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->intersection_series_log_file().data(), static_cast<int>(this->intersection_series_log_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.intersection_series_log_file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->intersection_series_log_file(), output);
  }

  // string transforms_directory = 10;
  if (this->transforms_directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transforms_directory().data(), static_cast<int>(this->transforms_directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.transforms_directory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->transforms_directory(), output);
  }

  // string data_streams_directory = 11;
  if (this->data_streams_directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_streams_directory().data(), static_cast<int>(this->data_streams_directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.data_streams_directory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->data_streams_directory(), output);
  }

  // string final_views_directory = 12;
  if (this->final_views_directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->final_views_directory().data(), static_cast<int>(this->final_views_directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.final_views_directory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->final_views_directory(), output);
  }

  // string data_bus_directory = 13;
  if (this->data_bus_directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_bus_directory().data(), static_cast<int>(this->data_bus_directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.data_bus_directory");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->data_bus_directory(), output);
  }

  // .metamoto.types.TestResult.Vehicle ego_vehicle = 14;
  if (this->has_ego_vehicle()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_ego_vehicle(), output);
  }

  // repeated .metamoto.types.TestResult.Vehicle vehicles = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vehicles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->vehicles(static_cast<int>(i)),
      output);
  }

  // repeated .metamoto.types.TestResult.Pedestrian pedestrians = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pedestrians_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16,
      this->pedestrians(static_cast<int>(i)),
      output);
  }

  // repeated string final_view_files = 17;
  for (int i = 0, n = this->final_view_files_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->final_view_files(i).data(), static_cast<int>(this->final_view_files(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.final_view_files");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->final_view_files(i), output);
  }

  // repeated .metamoto.types.TestResult.DataStream data_streams = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_streams_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18,
      this->data_streams(static_cast<int>(i)),
      output);
  }

  // repeated .metamoto.types.Asset assets = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->assets_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19,
      this->assets(static_cast<int>(i)),
      output);
  }

  // repeated .metamoto.types.TestResult.Vehicle ego_vehicles = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ego_vehicles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20,
      this->ego_vehicles(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.types.TestResult)
}

::google::protobuf::uint8* TestResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.types.TestResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string timestamp = 2;
  if (this->timestamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->timestamp().data(), static_cast<int>(this->timestamp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.timestamp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->timestamp(), target);
  }

  // string test_engine_version = 3;
  if (this->test_engine_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_engine_version().data(), static_cast<int>(this->test_engine_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.test_engine_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->test_engine_version(), target);
  }

  // .metamoto.types.TestResult.Result result = 4;
  if (this->has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_result(), deterministic, target);
  }

  // .metamoto.types.TestResult.Statistics statistics = 5;
  if (this->has_statistics()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_statistics(), deterministic, target);
  }

  // repeated .metamoto.types.TestResult.DataBusTopic topics = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->topics_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->topics(static_cast<int>(i)), deterministic, target);
  }

  // string test_case_file = 7;
  if (this->test_case_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_case_file().data(), static_cast<int>(this->test_case_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.test_case_file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->test_case_file(), target);
  }

  // string log_file = 8;
  if (this->log_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_file().data(), static_cast<int>(this->log_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.log_file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->log_file(), target);
  }

  // string intersection_series_log_file = 9;
  if (this->intersection_series_log_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->intersection_series_log_file().data(), static_cast<int>(this->intersection_series_log_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.intersection_series_log_file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->intersection_series_log_file(), target);
  }

  // string transforms_directory = 10;
  if (this->transforms_directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transforms_directory().data(), static_cast<int>(this->transforms_directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.transforms_directory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->transforms_directory(), target);
  }

  // string data_streams_directory = 11;
  if (this->data_streams_directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_streams_directory().data(), static_cast<int>(this->data_streams_directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.data_streams_directory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->data_streams_directory(), target);
  }

  // string final_views_directory = 12;
  if (this->final_views_directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->final_views_directory().data(), static_cast<int>(this->final_views_directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.final_views_directory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->final_views_directory(), target);
  }

  // string data_bus_directory = 13;
  if (this->data_bus_directory().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_bus_directory().data(), static_cast<int>(this->data_bus_directory().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.data_bus_directory");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->data_bus_directory(), target);
  }

  // .metamoto.types.TestResult.Vehicle ego_vehicle = 14;
  if (this->has_ego_vehicle()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_ego_vehicle(), deterministic, target);
  }

  // repeated .metamoto.types.TestResult.Vehicle vehicles = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vehicles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->vehicles(static_cast<int>(i)), deterministic, target);
  }

  // repeated .metamoto.types.TestResult.Pedestrian pedestrians = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pedestrians_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->pedestrians(static_cast<int>(i)), deterministic, target);
  }

  // repeated string final_view_files = 17;
  for (int i = 0, n = this->final_view_files_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->final_view_files(i).data(), static_cast<int>(this->final_view_files(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestResult.final_view_files");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(17, this->final_view_files(i), target);
  }

  // repeated .metamoto.types.TestResult.DataStream data_streams = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->data_streams_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->data_streams(static_cast<int>(i)), deterministic, target);
  }

  // repeated .metamoto.types.Asset assets = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->assets_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->assets(static_cast<int>(i)), deterministic, target);
  }

  // repeated .metamoto.types.TestResult.Vehicle ego_vehicles = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ego_vehicles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->ego_vehicles(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.types.TestResult)
  return target;
}

size_t TestResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.types.TestResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .metamoto.types.TestResult.DataBusTopic topics = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->topics_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->topics(static_cast<int>(i)));
    }
  }

  // repeated .metamoto.types.TestResult.Vehicle vehicles = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->vehicles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vehicles(static_cast<int>(i)));
    }
  }

  // repeated .metamoto.types.TestResult.Pedestrian pedestrians = 16;
  {
    unsigned int count = static_cast<unsigned int>(this->pedestrians_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pedestrians(static_cast<int>(i)));
    }
  }

  // repeated string final_view_files = 17;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->final_view_files_size());
  for (int i = 0, n = this->final_view_files_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->final_view_files(i));
  }

  // repeated .metamoto.types.TestResult.DataStream data_streams = 18;
  {
    unsigned int count = static_cast<unsigned int>(this->data_streams_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->data_streams(static_cast<int>(i)));
    }
  }

  // repeated .metamoto.types.Asset assets = 19;
  {
    unsigned int count = static_cast<unsigned int>(this->assets_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->assets(static_cast<int>(i)));
    }
  }

  // repeated .metamoto.types.TestResult.Vehicle ego_vehicles = 20;
  {
    unsigned int count = static_cast<unsigned int>(this->ego_vehicles_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ego_vehicles(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string timestamp = 2;
  if (this->timestamp().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->timestamp());
  }

  // string test_engine_version = 3;
  if (this->test_engine_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->test_engine_version());
  }

  // string test_case_file = 7;
  if (this->test_case_file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->test_case_file());
  }

  // string log_file = 8;
  if (this->log_file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log_file());
  }

  // string intersection_series_log_file = 9;
  if (this->intersection_series_log_file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->intersection_series_log_file());
  }

  // string transforms_directory = 10;
  if (this->transforms_directory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->transforms_directory());
  }

  // string data_streams_directory = 11;
  if (this->data_streams_directory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data_streams_directory());
  }

  // string final_views_directory = 12;
  if (this->final_views_directory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->final_views_directory());
  }

  // string data_bus_directory = 13;
  if (this->data_bus_directory().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data_bus_directory());
  }

  // .metamoto.types.TestResult.Result result = 4;
  if (this->has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // .metamoto.types.TestResult.Statistics statistics = 5;
  if (this->has_statistics()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *statistics_);
  }

  // .metamoto.types.TestResult.Vehicle ego_vehicle = 14;
  if (this->has_ego_vehicle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ego_vehicle_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.types.TestResult)
  GOOGLE_DCHECK_NE(&from, this);
  const TestResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.types.TestResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.types.TestResult)
    MergeFrom(*source);
  }
}

void TestResult::MergeFrom(const TestResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.types.TestResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  topics_.MergeFrom(from.topics_);
  vehicles_.MergeFrom(from.vehicles_);
  pedestrians_.MergeFrom(from.pedestrians_);
  final_view_files_.MergeFrom(from.final_view_files_);
  data_streams_.MergeFrom(from.data_streams_);
  assets_.MergeFrom(from.assets_);
  ego_vehicles_.MergeFrom(from.ego_vehicles_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.timestamp().size() > 0) {

    timestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timestamp_);
  }
  if (from.test_engine_version().size() > 0) {

    test_engine_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_engine_version_);
  }
  if (from.test_case_file().size() > 0) {

    test_case_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_case_file_);
  }
  if (from.log_file().size() > 0) {

    log_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_file_);
  }
  if (from.intersection_series_log_file().size() > 0) {

    intersection_series_log_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.intersection_series_log_file_);
  }
  if (from.transforms_directory().size() > 0) {

    transforms_directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transforms_directory_);
  }
  if (from.data_streams_directory().size() > 0) {

    data_streams_directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_streams_directory_);
  }
  if (from.final_views_directory().size() > 0) {

    final_views_directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.final_views_directory_);
  }
  if (from.data_bus_directory().size() > 0) {

    data_bus_directory_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_bus_directory_);
  }
  if (from.has_result()) {
    mutable_result()->::metamoto::types::TestResult_Result::MergeFrom(from.result());
  }
  if (from.has_statistics()) {
    mutable_statistics()->::metamoto::types::TestResult_Statistics::MergeFrom(from.statistics());
  }
  if (from.has_ego_vehicle()) {
    mutable_ego_vehicle()->::metamoto::types::TestResult_Vehicle::MergeFrom(from.ego_vehicle());
  }
}

void TestResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.types.TestResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestResult::CopyFrom(const TestResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.types.TestResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestResult::IsInitialized() const {
  return true;
}

void TestResult::Swap(TestResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestResult::InternalSwap(TestResult* other) {
  using std::swap;
  CastToBase(&topics_)->InternalSwap(CastToBase(&other->topics_));
  CastToBase(&vehicles_)->InternalSwap(CastToBase(&other->vehicles_));
  CastToBase(&pedestrians_)->InternalSwap(CastToBase(&other->pedestrians_));
  final_view_files_.InternalSwap(CastToBase(&other->final_view_files_));
  CastToBase(&data_streams_)->InternalSwap(CastToBase(&other->data_streams_));
  CastToBase(&assets_)->InternalSwap(CastToBase(&other->assets_));
  CastToBase(&ego_vehicles_)->InternalSwap(CastToBase(&other->ego_vehicles_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  timestamp_.Swap(&other->timestamp_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  test_engine_version_.Swap(&other->test_engine_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  test_case_file_.Swap(&other->test_case_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  log_file_.Swap(&other->log_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  intersection_series_log_file_.Swap(&other->intersection_series_log_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  transforms_directory_.Swap(&other->transforms_directory_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_streams_directory_.Swap(&other->data_streams_directory_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  final_views_directory_.Swap(&other->final_views_directory_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_bus_directory_.Swap(&other->data_bus_directory_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  swap(statistics_, other->statistics_);
  swap(ego_vehicle_, other->ego_vehicle_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TestResult::GetMetadata() const {
  protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace types
}  // namespace metamoto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::types::TestResult_Result* Arena::CreateMaybeMessage< ::metamoto::types::TestResult_Result >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::types::TestResult_Result >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::types::TestResult_Statistics* Arena::CreateMaybeMessage< ::metamoto::types::TestResult_Statistics >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::types::TestResult_Statistics >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::types::TestResult_DataBusTopic* Arena::CreateMaybeMessage< ::metamoto::types::TestResult_DataBusTopic >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::types::TestResult_DataBusTopic >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::types::TestResult_Vehicle_Binary* Arena::CreateMaybeMessage< ::metamoto::types::TestResult_Vehicle_Binary >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::types::TestResult_Vehicle_Binary >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::types::TestResult_Vehicle* Arena::CreateMaybeMessage< ::metamoto::types::TestResult_Vehicle >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::types::TestResult_Vehicle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::types::TestResult_Pedestrian* Arena::CreateMaybeMessage< ::metamoto::types::TestResult_Pedestrian >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::types::TestResult_Pedestrian >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::types::TestResult_DataStream* Arena::CreateMaybeMessage< ::metamoto::types::TestResult_DataStream >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::types::TestResult_DataStream >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::types::TestResult* Arena::CreateMaybeMessage< ::metamoto::types::TestResult >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::types::TestResult >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
