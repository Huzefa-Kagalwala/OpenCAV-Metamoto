// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metamoto/types/test_job.proto

#include "metamoto/types/test_job.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_metamoto_2ftypes_2frange_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2frange_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Parameter;
}  // namespace protobuf_metamoto_2ftypes_2frange_2eproto
namespace protobuf_metamoto_2ftypes_2ftest_5fjob_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2ftest_5fjob_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TestJob_ParametersEntry_DoNotUse;
}  // namespace protobuf_metamoto_2ftypes_2ftest_5fjob_2eproto
namespace metamoto {
namespace types {
class TestJob_ParametersEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestJob_ParametersEntry_DoNotUse>
      _instance;
} _TestJob_ParametersEntry_DoNotUse_default_instance_;
class TestJobDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestJob>
      _instance;
} _TestJob_default_instance_;
}  // namespace types
}  // namespace metamoto
namespace protobuf_metamoto_2ftypes_2ftest_5fjob_2eproto {
static void InitDefaultsTestJob_ParametersEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::types::_TestJob_ParametersEntry_DoNotUse_default_instance_;
    new (ptr) ::metamoto::types::TestJob_ParametersEntry_DoNotUse();
  }
  ::metamoto::types::TestJob_ParametersEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TestJob_ParametersEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTestJob_ParametersEntry_DoNotUse}, {
      &protobuf_metamoto_2ftypes_2frange_2eproto::scc_info_Parameter.base,}};

static void InitDefaultsTestJob() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::types::_TestJob_default_instance_;
    new (ptr) ::metamoto::types::TestJob();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::types::TestJob::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TestJob =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTestJob}, {
      &protobuf_metamoto_2ftypes_2ftest_5fjob_2eproto::scc_info_TestJob_ParametersEntry_DoNotUse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TestJob_ParametersEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TestJob.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestJob_ParametersEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestJob_ParametersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestJob_ParametersEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestJob_ParametersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestJob, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestJob, job_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestJob, sut_job_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestJob, test_run_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestJob, test_case_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestJob, test_case_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestJob, test_vector_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestJob, test_vector_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestJob, test_vector_strategy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestJob, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestJob, end_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestJob, compute_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestJob, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestJob, result_text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestJob, progress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestJob, duration_objective_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestJob, last_job_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestJob, log_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestJob, results_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestJob, disk_usage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestJob, last_update_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestJob, sut_log_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestJob, parameters_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::metamoto::types::TestJob_ParametersEntry_DoNotUse)},
  { 9, -1, sizeof(::metamoto::types::TestJob)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::types::_TestJob_ParametersEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::types::_TestJob_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "metamoto/types/test_job.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\035metamoto/types/test_job.proto\022\016metamot"
      "o.types\032\032metamoto/types/range.proto\032 met"
      "amoto/types/test_result.proto\032 metamoto/"
      "types/test_vector.proto\"\252\005\n\007TestJob\022\016\n\006j"
      "ob_id\030\001 \001(\t\022\023\n\013sut_job_ids\030\002 \003(\t\022\023\n\013test"
      "_run_id\030\003 \001(\t\022\024\n\014test_case_id\030\004 \001(\t\022\026\n\016t"
      "est_case_name\030\005 \001(\t\022\026\n\016test_vector_id\030\006 "
      "\001(\t\022\030\n\020test_vector_name\030\007 \001(\t\022A\n\024test_ve"
      "ctor_strategy\030\010 \001(\0162#.metamoto.types.Tes"
      "tVector.Strategy\022\022\n\nstart_time\030\t \001(\t\022\020\n\010"
      "end_time\030\n \001(\t\022\024\n\014compute_time\030\013 \001(\002\0221\n\006"
      "status\030\014 \001(\0162!.metamoto.types.TestResult"
      ".Status\022\023\n\013result_text\030\r \001(\t\022\020\n\010progress"
      "\030\016 \001(\002\022\032\n\022duration_objective\030\017 \001(\002\022\031\n\021la"
      "st_job_duration\030\020 \001(\002\022\020\n\010log_file\030\021 \001(\t\022"
      "\024\n\014results_file\030\022 \001(\t\022\022\n\ndisk_usage\030\023 \001("
      "\002\022\030\n\020last_update_time\030\024 \001(\t\022\024\n\014sut_log_f"
      "ile\030\025 \001(\t\022;\n\nparameters\030d \003(\0132\'.metamoto"
      ".types.TestJob.ParametersEntry\032L\n\017Parame"
      "tersEntry\022\013\n\003key\030\001 \001(\t\022(\n\005value\030\002 \001(\0132\031."
      "metamoto.types.Parameter:\0028\001B\021\252\002\016Metamot"
      "o.Typesb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 855);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "metamoto/types/test_job.proto", &protobuf_RegisterTypes);
  ::protobuf_metamoto_2ftypes_2frange_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2ftest_5fresult_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2ftest_5fvector_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_metamoto_2ftypes_2ftest_5fjob_2eproto
namespace metamoto {
namespace types {

// ===================================================================

TestJob_ParametersEntry_DoNotUse::TestJob_ParametersEntry_DoNotUse() {}
TestJob_ParametersEntry_DoNotUse::TestJob_ParametersEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TestJob_ParametersEntry_DoNotUse::MergeFrom(const TestJob_ParametersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TestJob_ParametersEntry_DoNotUse::GetMetadata() const {
  ::protobuf_metamoto_2ftypes_2ftest_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2ftest_5fjob_2eproto::file_level_metadata[0];
}
void TestJob_ParametersEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void TestJob::InitAsDefaultInstance() {
}
void TestJob::clear_parameters() {
  parameters_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestJob::kJobIdFieldNumber;
const int TestJob::kSutJobIdsFieldNumber;
const int TestJob::kTestRunIdFieldNumber;
const int TestJob::kTestCaseIdFieldNumber;
const int TestJob::kTestCaseNameFieldNumber;
const int TestJob::kTestVectorIdFieldNumber;
const int TestJob::kTestVectorNameFieldNumber;
const int TestJob::kTestVectorStrategyFieldNumber;
const int TestJob::kStartTimeFieldNumber;
const int TestJob::kEndTimeFieldNumber;
const int TestJob::kComputeTimeFieldNumber;
const int TestJob::kStatusFieldNumber;
const int TestJob::kResultTextFieldNumber;
const int TestJob::kProgressFieldNumber;
const int TestJob::kDurationObjectiveFieldNumber;
const int TestJob::kLastJobDurationFieldNumber;
const int TestJob::kLogFileFieldNumber;
const int TestJob::kResultsFileFieldNumber;
const int TestJob::kDiskUsageFieldNumber;
const int TestJob::kLastUpdateTimeFieldNumber;
const int TestJob::kSutLogFileFieldNumber;
const int TestJob::kParametersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestJob::TestJob()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2ftypes_2ftest_5fjob_2eproto::scc_info_TestJob.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.types.TestJob)
}
TestJob::TestJob(const TestJob& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sut_job_ids_(from.sut_job_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parameters_.MergeFrom(from.parameters_);
  job_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.job_id().size() > 0) {
    job_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_id_);
  }
  test_run_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.test_run_id().size() > 0) {
    test_run_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_run_id_);
  }
  test_case_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.test_case_id().size() > 0) {
    test_case_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_case_id_);
  }
  test_case_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.test_case_name().size() > 0) {
    test_case_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_case_name_);
  }
  test_vector_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.test_vector_id().size() > 0) {
    test_vector_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_vector_id_);
  }
  test_vector_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.test_vector_name().size() > 0) {
    test_vector_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_vector_name_);
  }
  start_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.start_time().size() > 0) {
    start_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_time_);
  }
  end_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.end_time().size() > 0) {
    end_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_time_);
  }
  result_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.result_text().size() > 0) {
    result_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_text_);
  }
  log_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.log_file().size() > 0) {
    log_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_file_);
  }
  results_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.results_file().size() > 0) {
    results_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.results_file_);
  }
  last_update_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.last_update_time().size() > 0) {
    last_update_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_update_time_);
  }
  sut_log_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sut_log_file().size() > 0) {
    sut_log_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sut_log_file_);
  }
  ::memcpy(&test_vector_strategy_, &from.test_vector_strategy_,
    static_cast<size_t>(reinterpret_cast<char*>(&disk_usage_) -
    reinterpret_cast<char*>(&test_vector_strategy_)) + sizeof(disk_usage_));
  // @@protoc_insertion_point(copy_constructor:metamoto.types.TestJob)
}

void TestJob::SharedCtor() {
  job_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_run_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_case_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_case_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_vector_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_vector_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  results_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_update_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sut_log_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&test_vector_strategy_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&disk_usage_) -
      reinterpret_cast<char*>(&test_vector_strategy_)) + sizeof(disk_usage_));
}

TestJob::~TestJob() {
  // @@protoc_insertion_point(destructor:metamoto.types.TestJob)
  SharedDtor();
}

void TestJob::SharedDtor() {
  job_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_run_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_case_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_case_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_vector_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_vector_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  results_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_update_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sut_log_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TestJob::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TestJob::descriptor() {
  ::protobuf_metamoto_2ftypes_2ftest_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2ftest_5fjob_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestJob& TestJob::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2ftypes_2ftest_5fjob_2eproto::scc_info_TestJob.base);
  return *internal_default_instance();
}


void TestJob::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.types.TestJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sut_job_ids_.Clear();
  parameters_.Clear();
  job_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_run_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_case_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_case_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_vector_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_vector_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  results_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_update_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sut_log_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&test_vector_strategy_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&disk_usage_) -
      reinterpret_cast<char*>(&test_vector_strategy_)) + sizeof(disk_usage_));
  _internal_metadata_.Clear();
}

bool TestJob::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.types.TestJob)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string job_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_job_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->job_id().data(), static_cast<int>(this->job_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestJob.job_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string sut_job_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_sut_job_ids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sut_job_ids(this->sut_job_ids_size() - 1).data(),
            static_cast<int>(this->sut_job_ids(this->sut_job_ids_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestJob.sut_job_ids"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string test_run_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test_run_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_run_id().data(), static_cast<int>(this->test_run_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestJob.test_run_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string test_case_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test_case_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_case_id().data(), static_cast<int>(this->test_case_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestJob.test_case_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string test_case_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test_case_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_case_name().data(), static_cast<int>(this->test_case_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestJob.test_case_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string test_vector_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test_vector_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_vector_id().data(), static_cast<int>(this->test_vector_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestJob.test_vector_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string test_vector_name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test_vector_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_vector_name().data(), static_cast<int>(this->test_vector_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestJob.test_vector_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.TestVector.Strategy test_vector_strategy = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_test_vector_strategy(static_cast< ::metamoto::types::TestVector_Strategy >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string start_time = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_start_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->start_time().data(), static_cast<int>(this->start_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestJob.start_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string end_time = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_end_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->end_time().data(), static_cast<int>(this->end_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestJob.end_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float compute_time = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &compute_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.TestResult.Status status = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::metamoto::types::TestResult_Status >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string result_text = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->result_text().data(), static_cast<int>(this->result_text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestJob.result_text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float progress = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(117u /* 117 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float duration_objective = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(125u /* 125 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_objective_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float last_job_duration = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(133u /* 133 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &last_job_duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string log_file = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->log_file().data(), static_cast<int>(this->log_file().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestJob.log_file"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string results_file = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_results_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->results_file().data(), static_cast<int>(this->results_file().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestJob.results_file"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float disk_usage = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(157u /* 157 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &disk_usage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string last_update_time = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_last_update_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->last_update_time().data(), static_cast<int>(this->last_update_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestJob.last_update_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sut_log_file = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sut_log_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sut_log_file().data(), static_cast<int>(this->sut_log_file().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestJob.sut_log_file"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .metamoto.types.Parameter> parameters = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 802 & 0xFF */)) {
          TestJob_ParametersEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TestJob_ParametersEntry_DoNotUse,
              ::std::string, ::metamoto::types::Parameter,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::metamoto::types::Parameter > > parser(&parameters_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestJob.ParametersEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.types.TestJob)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.types.TestJob)
  return false;
#undef DO_
}

void TestJob::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.types.TestJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string job_id = 1;
  if (this->job_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_id().data(), static_cast<int>(this->job_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestJob.job_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->job_id(), output);
  }

  // repeated string sut_job_ids = 2;
  for (int i = 0, n = this->sut_job_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sut_job_ids(i).data(), static_cast<int>(this->sut_job_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestJob.sut_job_ids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->sut_job_ids(i), output);
  }

  // string test_run_id = 3;
  if (this->test_run_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_run_id().data(), static_cast<int>(this->test_run_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestJob.test_run_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->test_run_id(), output);
  }

  // string test_case_id = 4;
  if (this->test_case_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_case_id().data(), static_cast<int>(this->test_case_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestJob.test_case_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->test_case_id(), output);
  }

  // string test_case_name = 5;
  if (this->test_case_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_case_name().data(), static_cast<int>(this->test_case_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestJob.test_case_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->test_case_name(), output);
  }

  // string test_vector_id = 6;
  if (this->test_vector_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_vector_id().data(), static_cast<int>(this->test_vector_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestJob.test_vector_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->test_vector_id(), output);
  }

  // string test_vector_name = 7;
  if (this->test_vector_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_vector_name().data(), static_cast<int>(this->test_vector_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestJob.test_vector_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->test_vector_name(), output);
  }

  // .metamoto.types.TestVector.Strategy test_vector_strategy = 8;
  if (this->test_vector_strategy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->test_vector_strategy(), output);
  }

  // string start_time = 9;
  if (this->start_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->start_time().data(), static_cast<int>(this->start_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestJob.start_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->start_time(), output);
  }

  // string end_time = 10;
  if (this->end_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->end_time().data(), static_cast<int>(this->end_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestJob.end_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->end_time(), output);
  }

  // float compute_time = 11;
  if (this->compute_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->compute_time(), output);
  }

  // .metamoto.types.TestResult.Status status = 12;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->status(), output);
  }

  // string result_text = 13;
  if (this->result_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result_text().data(), static_cast<int>(this->result_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestJob.result_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->result_text(), output);
  }

  // float progress = 14;
  if (this->progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->progress(), output);
  }

  // float duration_objective = 15;
  if (this->duration_objective() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(15, this->duration_objective(), output);
  }

  // float last_job_duration = 16;
  if (this->last_job_duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(16, this->last_job_duration(), output);
  }

  // string log_file = 17;
  if (this->log_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_file().data(), static_cast<int>(this->log_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestJob.log_file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->log_file(), output);
  }

  // string results_file = 18;
  if (this->results_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->results_file().data(), static_cast<int>(this->results_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestJob.results_file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->results_file(), output);
  }

  // float disk_usage = 19;
  if (this->disk_usage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(19, this->disk_usage(), output);
  }

  // string last_update_time = 20;
  if (this->last_update_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_update_time().data(), static_cast<int>(this->last_update_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestJob.last_update_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->last_update_time(), output);
  }

  // string sut_log_file = 21;
  if (this->sut_log_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sut_log_file().data(), static_cast<int>(this->sut_log_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestJob.sut_log_file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->sut_log_file(), output);
  }

  // map<string, .metamoto.types.Parameter> parameters = 100;
  if (!this->parameters().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::metamoto::types::Parameter >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "metamoto.types.TestJob.ParametersEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->parameters().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->parameters().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::metamoto::types::Parameter >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::metamoto::types::Parameter >::const_iterator
          it = this->parameters().begin();
          it != this->parameters().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestJob_ParametersEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(parameters_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            100, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TestJob_ParametersEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::metamoto::types::Parameter >::const_iterator
          it = this->parameters().begin();
          it != this->parameters().end(); ++it) {
        entry.reset(parameters_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            100, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.types.TestJob)
}

::google::protobuf::uint8* TestJob::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.types.TestJob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string job_id = 1;
  if (this->job_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->job_id().data(), static_cast<int>(this->job_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestJob.job_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->job_id(), target);
  }

  // repeated string sut_job_ids = 2;
  for (int i = 0, n = this->sut_job_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sut_job_ids(i).data(), static_cast<int>(this->sut_job_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestJob.sut_job_ids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->sut_job_ids(i), target);
  }

  // string test_run_id = 3;
  if (this->test_run_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_run_id().data(), static_cast<int>(this->test_run_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestJob.test_run_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->test_run_id(), target);
  }

  // string test_case_id = 4;
  if (this->test_case_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_case_id().data(), static_cast<int>(this->test_case_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestJob.test_case_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->test_case_id(), target);
  }

  // string test_case_name = 5;
  if (this->test_case_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_case_name().data(), static_cast<int>(this->test_case_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestJob.test_case_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->test_case_name(), target);
  }

  // string test_vector_id = 6;
  if (this->test_vector_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_vector_id().data(), static_cast<int>(this->test_vector_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestJob.test_vector_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->test_vector_id(), target);
  }

  // string test_vector_name = 7;
  if (this->test_vector_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_vector_name().data(), static_cast<int>(this->test_vector_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestJob.test_vector_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->test_vector_name(), target);
  }

  // .metamoto.types.TestVector.Strategy test_vector_strategy = 8;
  if (this->test_vector_strategy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->test_vector_strategy(), target);
  }

  // string start_time = 9;
  if (this->start_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->start_time().data(), static_cast<int>(this->start_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestJob.start_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->start_time(), target);
  }

  // string end_time = 10;
  if (this->end_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->end_time().data(), static_cast<int>(this->end_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestJob.end_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->end_time(), target);
  }

  // float compute_time = 11;
  if (this->compute_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->compute_time(), target);
  }

  // .metamoto.types.TestResult.Status status = 12;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->status(), target);
  }

  // string result_text = 13;
  if (this->result_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result_text().data(), static_cast<int>(this->result_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestJob.result_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->result_text(), target);
  }

  // float progress = 14;
  if (this->progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->progress(), target);
  }

  // float duration_objective = 15;
  if (this->duration_objective() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(15, this->duration_objective(), target);
  }

  // float last_job_duration = 16;
  if (this->last_job_duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(16, this->last_job_duration(), target);
  }

  // string log_file = 17;
  if (this->log_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_file().data(), static_cast<int>(this->log_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestJob.log_file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->log_file(), target);
  }

  // string results_file = 18;
  if (this->results_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->results_file().data(), static_cast<int>(this->results_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestJob.results_file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->results_file(), target);
  }

  // float disk_usage = 19;
  if (this->disk_usage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(19, this->disk_usage(), target);
  }

  // string last_update_time = 20;
  if (this->last_update_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_update_time().data(), static_cast<int>(this->last_update_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestJob.last_update_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->last_update_time(), target);
  }

  // string sut_log_file = 21;
  if (this->sut_log_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sut_log_file().data(), static_cast<int>(this->sut_log_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestJob.sut_log_file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->sut_log_file(), target);
  }

  // map<string, .metamoto.types.Parameter> parameters = 100;
  if (!this->parameters().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::metamoto::types::Parameter >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "metamoto.types.TestJob.ParametersEntry.key");
      }
    };

    if (deterministic &&
        this->parameters().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->parameters().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::metamoto::types::Parameter >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::metamoto::types::Parameter >::const_iterator
          it = this->parameters().begin();
          it != this->parameters().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TestJob_ParametersEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(parameters_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       100, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<TestJob_ParametersEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::metamoto::types::Parameter >::const_iterator
          it = this->parameters().begin();
          it != this->parameters().end(); ++it) {
        entry.reset(parameters_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       100, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.types.TestJob)
  return target;
}

size_t TestJob::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.types.TestJob)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string sut_job_ids = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->sut_job_ids_size());
  for (int i = 0, n = this->sut_job_ids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->sut_job_ids(i));
  }

  // map<string, .metamoto.types.Parameter> parameters = 100;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->parameters_size());
  {
    ::std::unique_ptr<TestJob_ParametersEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::metamoto::types::Parameter >::const_iterator
        it = this->parameters().begin();
        it != this->parameters().end(); ++it) {
      entry.reset(parameters_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string job_id = 1;
  if (this->job_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->job_id());
  }

  // string test_run_id = 3;
  if (this->test_run_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->test_run_id());
  }

  // string test_case_id = 4;
  if (this->test_case_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->test_case_id());
  }

  // string test_case_name = 5;
  if (this->test_case_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->test_case_name());
  }

  // string test_vector_id = 6;
  if (this->test_vector_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->test_vector_id());
  }

  // string test_vector_name = 7;
  if (this->test_vector_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->test_vector_name());
  }

  // string start_time = 9;
  if (this->start_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->start_time());
  }

  // string end_time = 10;
  if (this->end_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->end_time());
  }

  // string result_text = 13;
  if (this->result_text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result_text());
  }

  // string log_file = 17;
  if (this->log_file().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log_file());
  }

  // string results_file = 18;
  if (this->results_file().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->results_file());
  }

  // string last_update_time = 20;
  if (this->last_update_time().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->last_update_time());
  }

  // string sut_log_file = 21;
  if (this->sut_log_file().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sut_log_file());
  }

  // .metamoto.types.TestVector.Strategy test_vector_strategy = 8;
  if (this->test_vector_strategy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->test_vector_strategy());
  }

  // float compute_time = 11;
  if (this->compute_time() != 0) {
    total_size += 1 + 4;
  }

  // .metamoto.types.TestResult.Status status = 12;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // float progress = 14;
  if (this->progress() != 0) {
    total_size += 1 + 4;
  }

  // float duration_objective = 15;
  if (this->duration_objective() != 0) {
    total_size += 1 + 4;
  }

  // float last_job_duration = 16;
  if (this->last_job_duration() != 0) {
    total_size += 2 + 4;
  }

  // float disk_usage = 19;
  if (this->disk_usage() != 0) {
    total_size += 2 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestJob::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.types.TestJob)
  GOOGLE_DCHECK_NE(&from, this);
  const TestJob* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestJob>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.types.TestJob)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.types.TestJob)
    MergeFrom(*source);
  }
}

void TestJob::MergeFrom(const TestJob& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.types.TestJob)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sut_job_ids_.MergeFrom(from.sut_job_ids_);
  parameters_.MergeFrom(from.parameters_);
  if (from.job_id().size() > 0) {

    job_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.job_id_);
  }
  if (from.test_run_id().size() > 0) {

    test_run_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_run_id_);
  }
  if (from.test_case_id().size() > 0) {

    test_case_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_case_id_);
  }
  if (from.test_case_name().size() > 0) {

    test_case_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_case_name_);
  }
  if (from.test_vector_id().size() > 0) {

    test_vector_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_vector_id_);
  }
  if (from.test_vector_name().size() > 0) {

    test_vector_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_vector_name_);
  }
  if (from.start_time().size() > 0) {

    start_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_time_);
  }
  if (from.end_time().size() > 0) {

    end_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_time_);
  }
  if (from.result_text().size() > 0) {

    result_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_text_);
  }
  if (from.log_file().size() > 0) {

    log_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_file_);
  }
  if (from.results_file().size() > 0) {

    results_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.results_file_);
  }
  if (from.last_update_time().size() > 0) {

    last_update_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_update_time_);
  }
  if (from.sut_log_file().size() > 0) {

    sut_log_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sut_log_file_);
  }
  if (from.test_vector_strategy() != 0) {
    set_test_vector_strategy(from.test_vector_strategy());
  }
  if (from.compute_time() != 0) {
    set_compute_time(from.compute_time());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.progress() != 0) {
    set_progress(from.progress());
  }
  if (from.duration_objective() != 0) {
    set_duration_objective(from.duration_objective());
  }
  if (from.last_job_duration() != 0) {
    set_last_job_duration(from.last_job_duration());
  }
  if (from.disk_usage() != 0) {
    set_disk_usage(from.disk_usage());
  }
}

void TestJob::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.types.TestJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestJob::CopyFrom(const TestJob& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.types.TestJob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestJob::IsInitialized() const {
  return true;
}

void TestJob::Swap(TestJob* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestJob::InternalSwap(TestJob* other) {
  using std::swap;
  sut_job_ids_.InternalSwap(CastToBase(&other->sut_job_ids_));
  parameters_.Swap(&other->parameters_);
  job_id_.Swap(&other->job_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  test_run_id_.Swap(&other->test_run_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  test_case_id_.Swap(&other->test_case_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  test_case_name_.Swap(&other->test_case_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  test_vector_id_.Swap(&other->test_vector_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  test_vector_name_.Swap(&other->test_vector_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  start_time_.Swap(&other->start_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  end_time_.Swap(&other->end_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  result_text_.Swap(&other->result_text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  log_file_.Swap(&other->log_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  results_file_.Swap(&other->results_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  last_update_time_.Swap(&other->last_update_time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sut_log_file_.Swap(&other->sut_log_file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(test_vector_strategy_, other->test_vector_strategy_);
  swap(compute_time_, other->compute_time_);
  swap(status_, other->status_);
  swap(progress_, other->progress_);
  swap(duration_objective_, other->duration_objective_);
  swap(last_job_duration_, other->last_job_duration_);
  swap(disk_usage_, other->disk_usage_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TestJob::GetMetadata() const {
  protobuf_metamoto_2ftypes_2ftest_5fjob_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2ftest_5fjob_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace types
}  // namespace metamoto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::types::TestJob_ParametersEntry_DoNotUse* Arena::CreateMaybeMessage< ::metamoto::types::TestJob_ParametersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::types::TestJob_ParametersEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::types::TestJob* Arena::CreateMaybeMessage< ::metamoto::types::TestJob >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::types::TestJob >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
