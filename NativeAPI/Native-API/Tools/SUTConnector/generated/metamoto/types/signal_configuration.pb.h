// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metamoto/types/signal_configuration.proto

#ifndef PROTOBUF_INCLUDED_metamoto_2ftypes_2fsignal_5fconfiguration_2eproto
#define PROTOBUF_INCLUDED_metamoto_2ftypes_2fsignal_5fconfiguration_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "metamoto/types/scenario.pb.h"
#include "metamoto/types/roads.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fsignal_5fconfiguration_2eproto 

namespace protobuf_metamoto_2ftypes_2fsignal_5fconfiguration_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[10];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_metamoto_2ftypes_2fsignal_5fconfiguration_2eproto
namespace metamoto {
namespace types {
class IntersectionConfiguration;
class IntersectionConfigurationDefaultTypeInternal;
extern IntersectionConfigurationDefaultTypeInternal _IntersectionConfiguration_default_instance_;
class IntersectionConfiguration_IntersectionsEntry_DoNotUse;
class IntersectionConfiguration_IntersectionsEntry_DoNotUseDefaultTypeInternal;
extern IntersectionConfiguration_IntersectionsEntry_DoNotUseDefaultTypeInternal _IntersectionConfiguration_IntersectionsEntry_DoNotUse_default_instance_;
class SignalConfiguration;
class SignalConfigurationDefaultTypeInternal;
extern SignalConfigurationDefaultTypeInternal _SignalConfiguration_default_instance_;
class SignalConfiguration_Signal;
class SignalConfiguration_SignalDefaultTypeInternal;
extern SignalConfiguration_SignalDefaultTypeInternal _SignalConfiguration_Signal_default_instance_;
class SignalConfiguration_Signal_BulbState;
class SignalConfiguration_Signal_BulbStateDefaultTypeInternal;
extern SignalConfiguration_Signal_BulbStateDefaultTypeInternal _SignalConfiguration_Signal_BulbState_default_instance_;
class SignalConfiguration_Signal_BulbType;
class SignalConfiguration_Signal_BulbTypeDefaultTypeInternal;
extern SignalConfiguration_Signal_BulbTypeDefaultTypeInternal _SignalConfiguration_Signal_BulbType_default_instance_;
class SignalConfiguration_Signal_Connection;
class SignalConfiguration_Signal_ConnectionDefaultTypeInternal;
extern SignalConfiguration_Signal_ConnectionDefaultTypeInternal _SignalConfiguration_Signal_Connection_default_instance_;
class SignalConfiguration_Signal_SignalState;
class SignalConfiguration_Signal_SignalStateDefaultTypeInternal;
extern SignalConfiguration_Signal_SignalStateDefaultTypeInternal _SignalConfiguration_Signal_SignalState_default_instance_;
class SignalConfiguration_Signal_SignalStatesEntry_DoNotUse;
class SignalConfiguration_Signal_SignalStatesEntry_DoNotUseDefaultTypeInternal;
extern SignalConfiguration_Signal_SignalStatesEntry_DoNotUseDefaultTypeInternal _SignalConfiguration_Signal_SignalStatesEntry_DoNotUse_default_instance_;
class SignalConfiguration_SignalsEntry_DoNotUse;
class SignalConfiguration_SignalsEntry_DoNotUseDefaultTypeInternal;
extern SignalConfiguration_SignalsEntry_DoNotUseDefaultTypeInternal _SignalConfiguration_SignalsEntry_DoNotUse_default_instance_;
}  // namespace types
}  // namespace metamoto
namespace google {
namespace protobuf {
template<> ::metamoto::types::IntersectionConfiguration* Arena::CreateMaybeMessage<::metamoto::types::IntersectionConfiguration>(Arena*);
template<> ::metamoto::types::IntersectionConfiguration_IntersectionsEntry_DoNotUse* Arena::CreateMaybeMessage<::metamoto::types::IntersectionConfiguration_IntersectionsEntry_DoNotUse>(Arena*);
template<> ::metamoto::types::SignalConfiguration* Arena::CreateMaybeMessage<::metamoto::types::SignalConfiguration>(Arena*);
template<> ::metamoto::types::SignalConfiguration_Signal* Arena::CreateMaybeMessage<::metamoto::types::SignalConfiguration_Signal>(Arena*);
template<> ::metamoto::types::SignalConfiguration_Signal_BulbState* Arena::CreateMaybeMessage<::metamoto::types::SignalConfiguration_Signal_BulbState>(Arena*);
template<> ::metamoto::types::SignalConfiguration_Signal_BulbType* Arena::CreateMaybeMessage<::metamoto::types::SignalConfiguration_Signal_BulbType>(Arena*);
template<> ::metamoto::types::SignalConfiguration_Signal_Connection* Arena::CreateMaybeMessage<::metamoto::types::SignalConfiguration_Signal_Connection>(Arena*);
template<> ::metamoto::types::SignalConfiguration_Signal_SignalState* Arena::CreateMaybeMessage<::metamoto::types::SignalConfiguration_Signal_SignalState>(Arena*);
template<> ::metamoto::types::SignalConfiguration_Signal_SignalStatesEntry_DoNotUse* Arena::CreateMaybeMessage<::metamoto::types::SignalConfiguration_Signal_SignalStatesEntry_DoNotUse>(Arena*);
template<> ::metamoto::types::SignalConfiguration_SignalsEntry_DoNotUse* Arena::CreateMaybeMessage<::metamoto::types::SignalConfiguration_SignalsEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace metamoto {
namespace types {

enum SignalConfiguration_Signal_BulbState_State {
  SignalConfiguration_Signal_BulbState_State_OFF = 0,
  SignalConfiguration_Signal_BulbState_State_ON = 1,
  SignalConfiguration_Signal_BulbState_State_BLINKING = 2,
  SignalConfiguration_Signal_BulbState_State_STATE_UNKNOWN = 7,
  SignalConfiguration_Signal_BulbState_State_SignalConfiguration_Signal_BulbState_State_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SignalConfiguration_Signal_BulbState_State_SignalConfiguration_Signal_BulbState_State_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SignalConfiguration_Signal_BulbState_State_IsValid(int value);
const SignalConfiguration_Signal_BulbState_State SignalConfiguration_Signal_BulbState_State_State_MIN = SignalConfiguration_Signal_BulbState_State_OFF;
const SignalConfiguration_Signal_BulbState_State SignalConfiguration_Signal_BulbState_State_State_MAX = SignalConfiguration_Signal_BulbState_State_STATE_UNKNOWN;
const int SignalConfiguration_Signal_BulbState_State_State_ARRAYSIZE = SignalConfiguration_Signal_BulbState_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* SignalConfiguration_Signal_BulbState_State_descriptor();
inline const ::std::string& SignalConfiguration_Signal_BulbState_State_Name(SignalConfiguration_Signal_BulbState_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    SignalConfiguration_Signal_BulbState_State_descriptor(), value);
}
inline bool SignalConfiguration_Signal_BulbState_State_Parse(
    const ::std::string& name, SignalConfiguration_Signal_BulbState_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SignalConfiguration_Signal_BulbState_State>(
    SignalConfiguration_Signal_BulbState_State_descriptor(), name, value);
}
enum SignalConfiguration_Signal_BulbType_Type {
  SignalConfiguration_Signal_BulbType_Type_TYPE_UNKNOWN = 0,
  SignalConfiguration_Signal_BulbType_Type_TYPE_OTHER = 1,
  SignalConfiguration_Signal_BulbType_Type_NORMAL = 2,
  SignalConfiguration_Signal_BulbType_Type_LEFT = 3,
  SignalConfiguration_Signal_BulbType_Type_RIGHT = 4,
  SignalConfiguration_Signal_BulbType_Type_SOFT_LEFT = 5,
  SignalConfiguration_Signal_BulbType_Type_SOFT_RIGHT = 6,
  SignalConfiguration_Signal_BulbType_Type_SignalConfiguration_Signal_BulbType_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SignalConfiguration_Signal_BulbType_Type_SignalConfiguration_Signal_BulbType_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SignalConfiguration_Signal_BulbType_Type_IsValid(int value);
const SignalConfiguration_Signal_BulbType_Type SignalConfiguration_Signal_BulbType_Type_Type_MIN = SignalConfiguration_Signal_BulbType_Type_TYPE_UNKNOWN;
const SignalConfiguration_Signal_BulbType_Type SignalConfiguration_Signal_BulbType_Type_Type_MAX = SignalConfiguration_Signal_BulbType_Type_SOFT_RIGHT;
const int SignalConfiguration_Signal_BulbType_Type_Type_ARRAYSIZE = SignalConfiguration_Signal_BulbType_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* SignalConfiguration_Signal_BulbType_Type_descriptor();
inline const ::std::string& SignalConfiguration_Signal_BulbType_Type_Name(SignalConfiguration_Signal_BulbType_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    SignalConfiguration_Signal_BulbType_Type_descriptor(), value);
}
inline bool SignalConfiguration_Signal_BulbType_Type_Parse(
    const ::std::string& name, SignalConfiguration_Signal_BulbType_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SignalConfiguration_Signal_BulbType_Type>(
    SignalConfiguration_Signal_BulbType_Type_descriptor(), name, value);
}
enum SignalConfiguration_Signal_BulbType_Color {
  SignalConfiguration_Signal_BulbType_Color_COLOR_UNKNOWN = 0,
  SignalConfiguration_Signal_BulbType_Color_COLOR_OTHER = 1,
  SignalConfiguration_Signal_BulbType_Color_GREEN = 2,
  SignalConfiguration_Signal_BulbType_Color_YELLOW = 3,
  SignalConfiguration_Signal_BulbType_Color_RED = 4,
  SignalConfiguration_Signal_BulbType_Color_SignalConfiguration_Signal_BulbType_Color_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SignalConfiguration_Signal_BulbType_Color_SignalConfiguration_Signal_BulbType_Color_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SignalConfiguration_Signal_BulbType_Color_IsValid(int value);
const SignalConfiguration_Signal_BulbType_Color SignalConfiguration_Signal_BulbType_Color_Color_MIN = SignalConfiguration_Signal_BulbType_Color_COLOR_UNKNOWN;
const SignalConfiguration_Signal_BulbType_Color SignalConfiguration_Signal_BulbType_Color_Color_MAX = SignalConfiguration_Signal_BulbType_Color_RED;
const int SignalConfiguration_Signal_BulbType_Color_Color_ARRAYSIZE = SignalConfiguration_Signal_BulbType_Color_Color_MAX + 1;

const ::google::protobuf::EnumDescriptor* SignalConfiguration_Signal_BulbType_Color_descriptor();
inline const ::std::string& SignalConfiguration_Signal_BulbType_Color_Name(SignalConfiguration_Signal_BulbType_Color value) {
  return ::google::protobuf::internal::NameOfEnum(
    SignalConfiguration_Signal_BulbType_Color_descriptor(), value);
}
inline bool SignalConfiguration_Signal_BulbType_Color_Parse(
    const ::std::string& name, SignalConfiguration_Signal_BulbType_Color* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SignalConfiguration_Signal_BulbType_Color>(
    SignalConfiguration_Signal_BulbType_Color_descriptor(), name, value);
}
enum SignalConfiguration_Signal_ConnectionState {
  SignalConfiguration_Signal_ConnectionState_CONNECTION_STATE_UNKNOWN = 0,
  SignalConfiguration_Signal_ConnectionState_CONNECTION_STATE_OTHER = 1,
  SignalConfiguration_Signal_ConnectionState_GREEN = 2,
  SignalConfiguration_Signal_ConnectionState_YELLOW = 3,
  SignalConfiguration_Signal_ConnectionState_RED = 4,
  SignalConfiguration_Signal_ConnectionState_SignalConfiguration_Signal_ConnectionState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SignalConfiguration_Signal_ConnectionState_SignalConfiguration_Signal_ConnectionState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SignalConfiguration_Signal_ConnectionState_IsValid(int value);
const SignalConfiguration_Signal_ConnectionState SignalConfiguration_Signal_ConnectionState_ConnectionState_MIN = SignalConfiguration_Signal_ConnectionState_CONNECTION_STATE_UNKNOWN;
const SignalConfiguration_Signal_ConnectionState SignalConfiguration_Signal_ConnectionState_ConnectionState_MAX = SignalConfiguration_Signal_ConnectionState_RED;
const int SignalConfiguration_Signal_ConnectionState_ConnectionState_ARRAYSIZE = SignalConfiguration_Signal_ConnectionState_ConnectionState_MAX + 1;

const ::google::protobuf::EnumDescriptor* SignalConfiguration_Signal_ConnectionState_descriptor();
inline const ::std::string& SignalConfiguration_Signal_ConnectionState_Name(SignalConfiguration_Signal_ConnectionState value) {
  return ::google::protobuf::internal::NameOfEnum(
    SignalConfiguration_Signal_ConnectionState_descriptor(), value);
}
inline bool SignalConfiguration_Signal_ConnectionState_Parse(
    const ::std::string& name, SignalConfiguration_Signal_ConnectionState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SignalConfiguration_Signal_ConnectionState>(
    SignalConfiguration_Signal_ConnectionState_descriptor(), name, value);
}
enum SignalConfiguration_Signal_ConnectionType {
  SignalConfiguration_Signal_ConnectionType_CONNECTION_TYPE_UNKNOWN = 0,
  SignalConfiguration_Signal_ConnectionType_CONNECTION_TYPE_OTHER = 1,
  SignalConfiguration_Signal_ConnectionType_PROTECTED = 2,
  SignalConfiguration_Signal_ConnectionType_PERMISSIVE = 3,
  SignalConfiguration_Signal_ConnectionType_SignalConfiguration_Signal_ConnectionType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SignalConfiguration_Signal_ConnectionType_SignalConfiguration_Signal_ConnectionType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SignalConfiguration_Signal_ConnectionType_IsValid(int value);
const SignalConfiguration_Signal_ConnectionType SignalConfiguration_Signal_ConnectionType_ConnectionType_MIN = SignalConfiguration_Signal_ConnectionType_CONNECTION_TYPE_UNKNOWN;
const SignalConfiguration_Signal_ConnectionType SignalConfiguration_Signal_ConnectionType_ConnectionType_MAX = SignalConfiguration_Signal_ConnectionType_PERMISSIVE;
const int SignalConfiguration_Signal_ConnectionType_ConnectionType_ARRAYSIZE = SignalConfiguration_Signal_ConnectionType_ConnectionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SignalConfiguration_Signal_ConnectionType_descriptor();
inline const ::std::string& SignalConfiguration_Signal_ConnectionType_Name(SignalConfiguration_Signal_ConnectionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SignalConfiguration_Signal_ConnectionType_descriptor(), value);
}
inline bool SignalConfiguration_Signal_ConnectionType_Parse(
    const ::std::string& name, SignalConfiguration_Signal_ConnectionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SignalConfiguration_Signal_ConnectionType>(
    SignalConfiguration_Signal_ConnectionType_descriptor(), name, value);
}
// ===================================================================

class SignalConfiguration_Signal_Connection : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metamoto.types.SignalConfiguration.Signal.Connection) */ {
 public:
  SignalConfiguration_Signal_Connection();
  virtual ~SignalConfiguration_Signal_Connection();

  SignalConfiguration_Signal_Connection(const SignalConfiguration_Signal_Connection& from);

  inline SignalConfiguration_Signal_Connection& operator=(const SignalConfiguration_Signal_Connection& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SignalConfiguration_Signal_Connection(SignalConfiguration_Signal_Connection&& from) noexcept
    : SignalConfiguration_Signal_Connection() {
    *this = ::std::move(from);
  }

  inline SignalConfiguration_Signal_Connection& operator=(SignalConfiguration_Signal_Connection&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SignalConfiguration_Signal_Connection& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SignalConfiguration_Signal_Connection* internal_default_instance() {
    return reinterpret_cast<const SignalConfiguration_Signal_Connection*>(
               &_SignalConfiguration_Signal_Connection_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(SignalConfiguration_Signal_Connection* other);
  friend void swap(SignalConfiguration_Signal_Connection& a, SignalConfiguration_Signal_Connection& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SignalConfiguration_Signal_Connection* New() const final {
    return CreateMaybeMessage<SignalConfiguration_Signal_Connection>(NULL);
  }

  SignalConfiguration_Signal_Connection* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SignalConfiguration_Signal_Connection>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SignalConfiguration_Signal_Connection& from);
  void MergeFrom(const SignalConfiguration_Signal_Connection& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SignalConfiguration_Signal_Connection* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .metamoto.types.ConnectingRoad.Direction direction = 1;
  void clear_direction();
  static const int kDirectionFieldNumber = 1;
  ::metamoto::types::ConnectingRoad_Direction direction() const;
  void set_direction(::metamoto::types::ConnectingRoad_Direction value);

  // .metamoto.types.SignalConfiguration.Signal.ConnectionState state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::metamoto::types::SignalConfiguration_Signal_ConnectionState state() const;
  void set_state(::metamoto::types::SignalConfiguration_Signal_ConnectionState value);

  // .metamoto.types.SignalConfiguration.Signal.ConnectionType type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::metamoto::types::SignalConfiguration_Signal_ConnectionType type() const;
  void set_type(::metamoto::types::SignalConfiguration_Signal_ConnectionType value);

  // @@protoc_insertion_point(class_scope:metamoto.types.SignalConfiguration.Signal.Connection)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int direction_;
  int state_;
  int type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_metamoto_2ftypes_2fsignal_5fconfiguration_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SignalConfiguration_Signal_BulbState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metamoto.types.SignalConfiguration.Signal.BulbState) */ {
 public:
  SignalConfiguration_Signal_BulbState();
  virtual ~SignalConfiguration_Signal_BulbState();

  SignalConfiguration_Signal_BulbState(const SignalConfiguration_Signal_BulbState& from);

  inline SignalConfiguration_Signal_BulbState& operator=(const SignalConfiguration_Signal_BulbState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SignalConfiguration_Signal_BulbState(SignalConfiguration_Signal_BulbState&& from) noexcept
    : SignalConfiguration_Signal_BulbState() {
    *this = ::std::move(from);
  }

  inline SignalConfiguration_Signal_BulbState& operator=(SignalConfiguration_Signal_BulbState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SignalConfiguration_Signal_BulbState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SignalConfiguration_Signal_BulbState* internal_default_instance() {
    return reinterpret_cast<const SignalConfiguration_Signal_BulbState*>(
               &_SignalConfiguration_Signal_BulbState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(SignalConfiguration_Signal_BulbState* other);
  friend void swap(SignalConfiguration_Signal_BulbState& a, SignalConfiguration_Signal_BulbState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SignalConfiguration_Signal_BulbState* New() const final {
    return CreateMaybeMessage<SignalConfiguration_Signal_BulbState>(NULL);
  }

  SignalConfiguration_Signal_BulbState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SignalConfiguration_Signal_BulbState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SignalConfiguration_Signal_BulbState& from);
  void MergeFrom(const SignalConfiguration_Signal_BulbState& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SignalConfiguration_Signal_BulbState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SignalConfiguration_Signal_BulbState_State State;
  static const State OFF =
    SignalConfiguration_Signal_BulbState_State_OFF;
  static const State ON =
    SignalConfiguration_Signal_BulbState_State_ON;
  static const State BLINKING =
    SignalConfiguration_Signal_BulbState_State_BLINKING;
  static const State STATE_UNKNOWN =
    SignalConfiguration_Signal_BulbState_State_STATE_UNKNOWN;
  static inline bool State_IsValid(int value) {
    return SignalConfiguration_Signal_BulbState_State_IsValid(value);
  }
  static const State State_MIN =
    SignalConfiguration_Signal_BulbState_State_State_MIN;
  static const State State_MAX =
    SignalConfiguration_Signal_BulbState_State_State_MAX;
  static const int State_ARRAYSIZE =
    SignalConfiguration_Signal_BulbState_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return SignalConfiguration_Signal_BulbState_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return SignalConfiguration_Signal_BulbState_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return SignalConfiguration_Signal_BulbState_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .metamoto.types.SignalConfiguration.Signal.BulbState.State state = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  ::metamoto::types::SignalConfiguration_Signal_BulbState_State state() const;
  void set_state(::metamoto::types::SignalConfiguration_Signal_BulbState_State value);

  // @@protoc_insertion_point(class_scope:metamoto.types.SignalConfiguration.Signal.BulbState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_metamoto_2ftypes_2fsignal_5fconfiguration_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SignalConfiguration_Signal_SignalState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metamoto.types.SignalConfiguration.Signal.SignalState) */ {
 public:
  SignalConfiguration_Signal_SignalState();
  virtual ~SignalConfiguration_Signal_SignalState();

  SignalConfiguration_Signal_SignalState(const SignalConfiguration_Signal_SignalState& from);

  inline SignalConfiguration_Signal_SignalState& operator=(const SignalConfiguration_Signal_SignalState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SignalConfiguration_Signal_SignalState(SignalConfiguration_Signal_SignalState&& from) noexcept
    : SignalConfiguration_Signal_SignalState() {
    *this = ::std::move(from);
  }

  inline SignalConfiguration_Signal_SignalState& operator=(SignalConfiguration_Signal_SignalState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SignalConfiguration_Signal_SignalState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SignalConfiguration_Signal_SignalState* internal_default_instance() {
    return reinterpret_cast<const SignalConfiguration_Signal_SignalState*>(
               &_SignalConfiguration_Signal_SignalState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(SignalConfiguration_Signal_SignalState* other);
  friend void swap(SignalConfiguration_Signal_SignalState& a, SignalConfiguration_Signal_SignalState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SignalConfiguration_Signal_SignalState* New() const final {
    return CreateMaybeMessage<SignalConfiguration_Signal_SignalState>(NULL);
  }

  SignalConfiguration_Signal_SignalState* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SignalConfiguration_Signal_SignalState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SignalConfiguration_Signal_SignalState& from);
  void MergeFrom(const SignalConfiguration_Signal_SignalState& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SignalConfiguration_Signal_SignalState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .metamoto.types.SignalConfiguration.Signal.Connection connections = 1;
  int connections_size() const;
  void clear_connections();
  static const int kConnectionsFieldNumber = 1;
  ::metamoto::types::SignalConfiguration_Signal_Connection* mutable_connections(int index);
  ::google::protobuf::RepeatedPtrField< ::metamoto::types::SignalConfiguration_Signal_Connection >*
      mutable_connections();
  const ::metamoto::types::SignalConfiguration_Signal_Connection& connections(int index) const;
  ::metamoto::types::SignalConfiguration_Signal_Connection* add_connections();
  const ::google::protobuf::RepeatedPtrField< ::metamoto::types::SignalConfiguration_Signal_Connection >&
      connections() const;

  // repeated .metamoto.types.SignalConfiguration.Signal.BulbState bulb_states = 2;
  int bulb_states_size() const;
  void clear_bulb_states();
  static const int kBulbStatesFieldNumber = 2;
  ::metamoto::types::SignalConfiguration_Signal_BulbState* mutable_bulb_states(int index);
  ::google::protobuf::RepeatedPtrField< ::metamoto::types::SignalConfiguration_Signal_BulbState >*
      mutable_bulb_states();
  const ::metamoto::types::SignalConfiguration_Signal_BulbState& bulb_states(int index) const;
  ::metamoto::types::SignalConfiguration_Signal_BulbState* add_bulb_states();
  const ::google::protobuf::RepeatedPtrField< ::metamoto::types::SignalConfiguration_Signal_BulbState >&
      bulb_states() const;

  // @@protoc_insertion_point(class_scope:metamoto.types.SignalConfiguration.Signal.SignalState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::metamoto::types::SignalConfiguration_Signal_Connection > connections_;
  ::google::protobuf::RepeatedPtrField< ::metamoto::types::SignalConfiguration_Signal_BulbState > bulb_states_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_metamoto_2ftypes_2fsignal_5fconfiguration_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SignalConfiguration_Signal_SignalStatesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<SignalConfiguration_Signal_SignalStatesEntry_DoNotUse, 
    ::std::string, ::metamoto::types::SignalConfiguration_Signal_SignalState,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<SignalConfiguration_Signal_SignalStatesEntry_DoNotUse, 
    ::std::string, ::metamoto::types::SignalConfiguration_Signal_SignalState,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  SignalConfiguration_Signal_SignalStatesEntry_DoNotUse();
  SignalConfiguration_Signal_SignalStatesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const SignalConfiguration_Signal_SignalStatesEntry_DoNotUse& other);
  static const SignalConfiguration_Signal_SignalStatesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const SignalConfiguration_Signal_SignalStatesEntry_DoNotUse*>(&_SignalConfiguration_Signal_SignalStatesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class SignalConfiguration_Signal_BulbType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metamoto.types.SignalConfiguration.Signal.BulbType) */ {
 public:
  SignalConfiguration_Signal_BulbType();
  virtual ~SignalConfiguration_Signal_BulbType();

  SignalConfiguration_Signal_BulbType(const SignalConfiguration_Signal_BulbType& from);

  inline SignalConfiguration_Signal_BulbType& operator=(const SignalConfiguration_Signal_BulbType& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SignalConfiguration_Signal_BulbType(SignalConfiguration_Signal_BulbType&& from) noexcept
    : SignalConfiguration_Signal_BulbType() {
    *this = ::std::move(from);
  }

  inline SignalConfiguration_Signal_BulbType& operator=(SignalConfiguration_Signal_BulbType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SignalConfiguration_Signal_BulbType& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SignalConfiguration_Signal_BulbType* internal_default_instance() {
    return reinterpret_cast<const SignalConfiguration_Signal_BulbType*>(
               &_SignalConfiguration_Signal_BulbType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(SignalConfiguration_Signal_BulbType* other);
  friend void swap(SignalConfiguration_Signal_BulbType& a, SignalConfiguration_Signal_BulbType& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SignalConfiguration_Signal_BulbType* New() const final {
    return CreateMaybeMessage<SignalConfiguration_Signal_BulbType>(NULL);
  }

  SignalConfiguration_Signal_BulbType* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SignalConfiguration_Signal_BulbType>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SignalConfiguration_Signal_BulbType& from);
  void MergeFrom(const SignalConfiguration_Signal_BulbType& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SignalConfiguration_Signal_BulbType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SignalConfiguration_Signal_BulbType_Type Type;
  static const Type TYPE_UNKNOWN =
    SignalConfiguration_Signal_BulbType_Type_TYPE_UNKNOWN;
  static const Type TYPE_OTHER =
    SignalConfiguration_Signal_BulbType_Type_TYPE_OTHER;
  static const Type NORMAL =
    SignalConfiguration_Signal_BulbType_Type_NORMAL;
  static const Type LEFT =
    SignalConfiguration_Signal_BulbType_Type_LEFT;
  static const Type RIGHT =
    SignalConfiguration_Signal_BulbType_Type_RIGHT;
  static const Type SOFT_LEFT =
    SignalConfiguration_Signal_BulbType_Type_SOFT_LEFT;
  static const Type SOFT_RIGHT =
    SignalConfiguration_Signal_BulbType_Type_SOFT_RIGHT;
  static inline bool Type_IsValid(int value) {
    return SignalConfiguration_Signal_BulbType_Type_IsValid(value);
  }
  static const Type Type_MIN =
    SignalConfiguration_Signal_BulbType_Type_Type_MIN;
  static const Type Type_MAX =
    SignalConfiguration_Signal_BulbType_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    SignalConfiguration_Signal_BulbType_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return SignalConfiguration_Signal_BulbType_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return SignalConfiguration_Signal_BulbType_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return SignalConfiguration_Signal_BulbType_Type_Parse(name, value);
  }

  typedef SignalConfiguration_Signal_BulbType_Color Color;
  static const Color COLOR_UNKNOWN =
    SignalConfiguration_Signal_BulbType_Color_COLOR_UNKNOWN;
  static const Color COLOR_OTHER =
    SignalConfiguration_Signal_BulbType_Color_COLOR_OTHER;
  static const Color GREEN =
    SignalConfiguration_Signal_BulbType_Color_GREEN;
  static const Color YELLOW =
    SignalConfiguration_Signal_BulbType_Color_YELLOW;
  static const Color RED =
    SignalConfiguration_Signal_BulbType_Color_RED;
  static inline bool Color_IsValid(int value) {
    return SignalConfiguration_Signal_BulbType_Color_IsValid(value);
  }
  static const Color Color_MIN =
    SignalConfiguration_Signal_BulbType_Color_Color_MIN;
  static const Color Color_MAX =
    SignalConfiguration_Signal_BulbType_Color_Color_MAX;
  static const int Color_ARRAYSIZE =
    SignalConfiguration_Signal_BulbType_Color_Color_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Color_descriptor() {
    return SignalConfiguration_Signal_BulbType_Color_descriptor();
  }
  static inline const ::std::string& Color_Name(Color value) {
    return SignalConfiguration_Signal_BulbType_Color_Name(value);
  }
  static inline bool Color_Parse(const ::std::string& name,
      Color* value) {
    return SignalConfiguration_Signal_BulbType_Color_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .metamoto.types.SignalConfiguration.Signal.BulbType.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::metamoto::types::SignalConfiguration_Signal_BulbType_Type type() const;
  void set_type(::metamoto::types::SignalConfiguration_Signal_BulbType_Type value);

  // .metamoto.types.SignalConfiguration.Signal.BulbType.Color color = 2;
  void clear_color();
  static const int kColorFieldNumber = 2;
  ::metamoto::types::SignalConfiguration_Signal_BulbType_Color color() const;
  void set_color(::metamoto::types::SignalConfiguration_Signal_BulbType_Color value);

  // @@protoc_insertion_point(class_scope:metamoto.types.SignalConfiguration.Signal.BulbType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  int color_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_metamoto_2ftypes_2fsignal_5fconfiguration_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SignalConfiguration_Signal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metamoto.types.SignalConfiguration.Signal) */ {
 public:
  SignalConfiguration_Signal();
  virtual ~SignalConfiguration_Signal();

  SignalConfiguration_Signal(const SignalConfiguration_Signal& from);

  inline SignalConfiguration_Signal& operator=(const SignalConfiguration_Signal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SignalConfiguration_Signal(SignalConfiguration_Signal&& from) noexcept
    : SignalConfiguration_Signal() {
    *this = ::std::move(from);
  }

  inline SignalConfiguration_Signal& operator=(SignalConfiguration_Signal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SignalConfiguration_Signal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SignalConfiguration_Signal* internal_default_instance() {
    return reinterpret_cast<const SignalConfiguration_Signal*>(
               &_SignalConfiguration_Signal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(SignalConfiguration_Signal* other);
  friend void swap(SignalConfiguration_Signal& a, SignalConfiguration_Signal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SignalConfiguration_Signal* New() const final {
    return CreateMaybeMessage<SignalConfiguration_Signal>(NULL);
  }

  SignalConfiguration_Signal* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SignalConfiguration_Signal>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SignalConfiguration_Signal& from);
  void MergeFrom(const SignalConfiguration_Signal& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SignalConfiguration_Signal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SignalConfiguration_Signal_Connection Connection;
  typedef SignalConfiguration_Signal_BulbState BulbState;
  typedef SignalConfiguration_Signal_SignalState SignalState;
  typedef SignalConfiguration_Signal_BulbType BulbType;

  typedef SignalConfiguration_Signal_ConnectionState ConnectionState;
  static const ConnectionState CONNECTION_STATE_UNKNOWN =
    SignalConfiguration_Signal_ConnectionState_CONNECTION_STATE_UNKNOWN;
  static const ConnectionState CONNECTION_STATE_OTHER =
    SignalConfiguration_Signal_ConnectionState_CONNECTION_STATE_OTHER;
  static const ConnectionState GREEN =
    SignalConfiguration_Signal_ConnectionState_GREEN;
  static const ConnectionState YELLOW =
    SignalConfiguration_Signal_ConnectionState_YELLOW;
  static const ConnectionState RED =
    SignalConfiguration_Signal_ConnectionState_RED;
  static inline bool ConnectionState_IsValid(int value) {
    return SignalConfiguration_Signal_ConnectionState_IsValid(value);
  }
  static const ConnectionState ConnectionState_MIN =
    SignalConfiguration_Signal_ConnectionState_ConnectionState_MIN;
  static const ConnectionState ConnectionState_MAX =
    SignalConfiguration_Signal_ConnectionState_ConnectionState_MAX;
  static const int ConnectionState_ARRAYSIZE =
    SignalConfiguration_Signal_ConnectionState_ConnectionState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ConnectionState_descriptor() {
    return SignalConfiguration_Signal_ConnectionState_descriptor();
  }
  static inline const ::std::string& ConnectionState_Name(ConnectionState value) {
    return SignalConfiguration_Signal_ConnectionState_Name(value);
  }
  static inline bool ConnectionState_Parse(const ::std::string& name,
      ConnectionState* value) {
    return SignalConfiguration_Signal_ConnectionState_Parse(name, value);
  }

  typedef SignalConfiguration_Signal_ConnectionType ConnectionType;
  static const ConnectionType CONNECTION_TYPE_UNKNOWN =
    SignalConfiguration_Signal_ConnectionType_CONNECTION_TYPE_UNKNOWN;
  static const ConnectionType CONNECTION_TYPE_OTHER =
    SignalConfiguration_Signal_ConnectionType_CONNECTION_TYPE_OTHER;
  static const ConnectionType PROTECTED =
    SignalConfiguration_Signal_ConnectionType_PROTECTED;
  static const ConnectionType PERMISSIVE =
    SignalConfiguration_Signal_ConnectionType_PERMISSIVE;
  static inline bool ConnectionType_IsValid(int value) {
    return SignalConfiguration_Signal_ConnectionType_IsValid(value);
  }
  static const ConnectionType ConnectionType_MIN =
    SignalConfiguration_Signal_ConnectionType_ConnectionType_MIN;
  static const ConnectionType ConnectionType_MAX =
    SignalConfiguration_Signal_ConnectionType_ConnectionType_MAX;
  static const int ConnectionType_ARRAYSIZE =
    SignalConfiguration_Signal_ConnectionType_ConnectionType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ConnectionType_descriptor() {
    return SignalConfiguration_Signal_ConnectionType_descriptor();
  }
  static inline const ::std::string& ConnectionType_Name(ConnectionType value) {
    return SignalConfiguration_Signal_ConnectionType_Name(value);
  }
  static inline bool ConnectionType_Parse(const ::std::string& name,
      ConnectionType* value) {
    return SignalConfiguration_Signal_ConnectionType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<string, .metamoto.types.SignalConfiguration.Signal.SignalState> signal_states = 1;
  int signal_states_size() const;
  void clear_signal_states();
  static const int kSignalStatesFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::metamoto::types::SignalConfiguration_Signal_SignalState >&
      signal_states() const;
  ::google::protobuf::Map< ::std::string, ::metamoto::types::SignalConfiguration_Signal_SignalState >*
      mutable_signal_states();

  // repeated .metamoto.types.SignalConfiguration.Signal.BulbType bulb_types = 3;
  int bulb_types_size() const;
  void clear_bulb_types();
  static const int kBulbTypesFieldNumber = 3;
  ::metamoto::types::SignalConfiguration_Signal_BulbType* mutable_bulb_types(int index);
  ::google::protobuf::RepeatedPtrField< ::metamoto::types::SignalConfiguration_Signal_BulbType >*
      mutable_bulb_types();
  const ::metamoto::types::SignalConfiguration_Signal_BulbType& bulb_types(int index) const;
  ::metamoto::types::SignalConfiguration_Signal_BulbType* add_bulb_types();
  const ::google::protobuf::RepeatedPtrField< ::metamoto::types::SignalConfiguration_Signal_BulbType >&
      bulb_types() const;

  // string description = 2;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // @@protoc_insertion_point(class_scope:metamoto.types.SignalConfiguration.Signal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      SignalConfiguration_Signal_SignalStatesEntry_DoNotUse,
      ::std::string, ::metamoto::types::SignalConfiguration_Signal_SignalState,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > signal_states_;
  ::google::protobuf::RepeatedPtrField< ::metamoto::types::SignalConfiguration_Signal_BulbType > bulb_types_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_metamoto_2ftypes_2fsignal_5fconfiguration_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SignalConfiguration_SignalsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<SignalConfiguration_SignalsEntry_DoNotUse, 
    ::std::string, ::metamoto::types::SignalConfiguration_Signal,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<SignalConfiguration_SignalsEntry_DoNotUse, 
    ::std::string, ::metamoto::types::SignalConfiguration_Signal,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  SignalConfiguration_SignalsEntry_DoNotUse();
  SignalConfiguration_SignalsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const SignalConfiguration_SignalsEntry_DoNotUse& other);
  static const SignalConfiguration_SignalsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const SignalConfiguration_SignalsEntry_DoNotUse*>(&_SignalConfiguration_SignalsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class SignalConfiguration : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metamoto.types.SignalConfiguration) */ {
 public:
  SignalConfiguration();
  virtual ~SignalConfiguration();

  SignalConfiguration(const SignalConfiguration& from);

  inline SignalConfiguration& operator=(const SignalConfiguration& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SignalConfiguration(SignalConfiguration&& from) noexcept
    : SignalConfiguration() {
    *this = ::std::move(from);
  }

  inline SignalConfiguration& operator=(SignalConfiguration&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SignalConfiguration& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SignalConfiguration* internal_default_instance() {
    return reinterpret_cast<const SignalConfiguration*>(
               &_SignalConfiguration_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(SignalConfiguration* other);
  friend void swap(SignalConfiguration& a, SignalConfiguration& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SignalConfiguration* New() const final {
    return CreateMaybeMessage<SignalConfiguration>(NULL);
  }

  SignalConfiguration* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SignalConfiguration>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SignalConfiguration& from);
  void MergeFrom(const SignalConfiguration& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SignalConfiguration* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef SignalConfiguration_Signal Signal;

  // accessors -------------------------------------------------------

  // map<string, .metamoto.types.SignalConfiguration.Signal> signals = 1;
  int signals_size() const;
  void clear_signals();
  static const int kSignalsFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::metamoto::types::SignalConfiguration_Signal >&
      signals() const;
  ::google::protobuf::Map< ::std::string, ::metamoto::types::SignalConfiguration_Signal >*
      mutable_signals();

  // @@protoc_insertion_point(class_scope:metamoto.types.SignalConfiguration)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      SignalConfiguration_SignalsEntry_DoNotUse,
      ::std::string, ::metamoto::types::SignalConfiguration_Signal,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > signals_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_metamoto_2ftypes_2fsignal_5fconfiguration_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IntersectionConfiguration_IntersectionsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<IntersectionConfiguration_IntersectionsEntry_DoNotUse, 
    ::std::string, ::metamoto::types::Scenario_Intersection,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<IntersectionConfiguration_IntersectionsEntry_DoNotUse, 
    ::std::string, ::metamoto::types::Scenario_Intersection,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  IntersectionConfiguration_IntersectionsEntry_DoNotUse();
  IntersectionConfiguration_IntersectionsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const IntersectionConfiguration_IntersectionsEntry_DoNotUse& other);
  static const IntersectionConfiguration_IntersectionsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const IntersectionConfiguration_IntersectionsEntry_DoNotUse*>(&_IntersectionConfiguration_IntersectionsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class IntersectionConfiguration : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metamoto.types.IntersectionConfiguration) */ {
 public:
  IntersectionConfiguration();
  virtual ~IntersectionConfiguration();

  IntersectionConfiguration(const IntersectionConfiguration& from);

  inline IntersectionConfiguration& operator=(const IntersectionConfiguration& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IntersectionConfiguration(IntersectionConfiguration&& from) noexcept
    : IntersectionConfiguration() {
    *this = ::std::move(from);
  }

  inline IntersectionConfiguration& operator=(IntersectionConfiguration&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IntersectionConfiguration& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IntersectionConfiguration* internal_default_instance() {
    return reinterpret_cast<const IntersectionConfiguration*>(
               &_IntersectionConfiguration_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(IntersectionConfiguration* other);
  friend void swap(IntersectionConfiguration& a, IntersectionConfiguration& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IntersectionConfiguration* New() const final {
    return CreateMaybeMessage<IntersectionConfiguration>(NULL);
  }

  IntersectionConfiguration* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IntersectionConfiguration>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IntersectionConfiguration& from);
  void MergeFrom(const IntersectionConfiguration& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IntersectionConfiguration* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .metamoto.types.Scenario.Intersection> intersections = 1;
  int intersections_size() const;
  void clear_intersections();
  static const int kIntersectionsFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::metamoto::types::Scenario_Intersection >&
      intersections() const;
  ::google::protobuf::Map< ::std::string, ::metamoto::types::Scenario_Intersection >*
      mutable_intersections();

  // @@protoc_insertion_point(class_scope:metamoto.types.IntersectionConfiguration)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      IntersectionConfiguration_IntersectionsEntry_DoNotUse,
      ::std::string, ::metamoto::types::Scenario_Intersection,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > intersections_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_metamoto_2ftypes_2fsignal_5fconfiguration_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SignalConfiguration_Signal_Connection

// .metamoto.types.ConnectingRoad.Direction direction = 1;
inline void SignalConfiguration_Signal_Connection::clear_direction() {
  direction_ = 0;
}
inline ::metamoto::types::ConnectingRoad_Direction SignalConfiguration_Signal_Connection::direction() const {
  // @@protoc_insertion_point(field_get:metamoto.types.SignalConfiguration.Signal.Connection.direction)
  return static_cast< ::metamoto::types::ConnectingRoad_Direction >(direction_);
}
inline void SignalConfiguration_Signal_Connection::set_direction(::metamoto::types::ConnectingRoad_Direction value) {
  
  direction_ = value;
  // @@protoc_insertion_point(field_set:metamoto.types.SignalConfiguration.Signal.Connection.direction)
}

// .metamoto.types.SignalConfiguration.Signal.ConnectionState state = 2;
inline void SignalConfiguration_Signal_Connection::clear_state() {
  state_ = 0;
}
inline ::metamoto::types::SignalConfiguration_Signal_ConnectionState SignalConfiguration_Signal_Connection::state() const {
  // @@protoc_insertion_point(field_get:metamoto.types.SignalConfiguration.Signal.Connection.state)
  return static_cast< ::metamoto::types::SignalConfiguration_Signal_ConnectionState >(state_);
}
inline void SignalConfiguration_Signal_Connection::set_state(::metamoto::types::SignalConfiguration_Signal_ConnectionState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:metamoto.types.SignalConfiguration.Signal.Connection.state)
}

// .metamoto.types.SignalConfiguration.Signal.ConnectionType type = 3;
inline void SignalConfiguration_Signal_Connection::clear_type() {
  type_ = 0;
}
inline ::metamoto::types::SignalConfiguration_Signal_ConnectionType SignalConfiguration_Signal_Connection::type() const {
  // @@protoc_insertion_point(field_get:metamoto.types.SignalConfiguration.Signal.Connection.type)
  return static_cast< ::metamoto::types::SignalConfiguration_Signal_ConnectionType >(type_);
}
inline void SignalConfiguration_Signal_Connection::set_type(::metamoto::types::SignalConfiguration_Signal_ConnectionType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:metamoto.types.SignalConfiguration.Signal.Connection.type)
}

// -------------------------------------------------------------------

// SignalConfiguration_Signal_BulbState

// .metamoto.types.SignalConfiguration.Signal.BulbState.State state = 1;
inline void SignalConfiguration_Signal_BulbState::clear_state() {
  state_ = 0;
}
inline ::metamoto::types::SignalConfiguration_Signal_BulbState_State SignalConfiguration_Signal_BulbState::state() const {
  // @@protoc_insertion_point(field_get:metamoto.types.SignalConfiguration.Signal.BulbState.state)
  return static_cast< ::metamoto::types::SignalConfiguration_Signal_BulbState_State >(state_);
}
inline void SignalConfiguration_Signal_BulbState::set_state(::metamoto::types::SignalConfiguration_Signal_BulbState_State value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:metamoto.types.SignalConfiguration.Signal.BulbState.state)
}

// -------------------------------------------------------------------

// SignalConfiguration_Signal_SignalState

// repeated .metamoto.types.SignalConfiguration.Signal.Connection connections = 1;
inline int SignalConfiguration_Signal_SignalState::connections_size() const {
  return connections_.size();
}
inline void SignalConfiguration_Signal_SignalState::clear_connections() {
  connections_.Clear();
}
inline ::metamoto::types::SignalConfiguration_Signal_Connection* SignalConfiguration_Signal_SignalState::mutable_connections(int index) {
  // @@protoc_insertion_point(field_mutable:metamoto.types.SignalConfiguration.Signal.SignalState.connections)
  return connections_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::metamoto::types::SignalConfiguration_Signal_Connection >*
SignalConfiguration_Signal_SignalState::mutable_connections() {
  // @@protoc_insertion_point(field_mutable_list:metamoto.types.SignalConfiguration.Signal.SignalState.connections)
  return &connections_;
}
inline const ::metamoto::types::SignalConfiguration_Signal_Connection& SignalConfiguration_Signal_SignalState::connections(int index) const {
  // @@protoc_insertion_point(field_get:metamoto.types.SignalConfiguration.Signal.SignalState.connections)
  return connections_.Get(index);
}
inline ::metamoto::types::SignalConfiguration_Signal_Connection* SignalConfiguration_Signal_SignalState::add_connections() {
  // @@protoc_insertion_point(field_add:metamoto.types.SignalConfiguration.Signal.SignalState.connections)
  return connections_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::metamoto::types::SignalConfiguration_Signal_Connection >&
SignalConfiguration_Signal_SignalState::connections() const {
  // @@protoc_insertion_point(field_list:metamoto.types.SignalConfiguration.Signal.SignalState.connections)
  return connections_;
}

// repeated .metamoto.types.SignalConfiguration.Signal.BulbState bulb_states = 2;
inline int SignalConfiguration_Signal_SignalState::bulb_states_size() const {
  return bulb_states_.size();
}
inline void SignalConfiguration_Signal_SignalState::clear_bulb_states() {
  bulb_states_.Clear();
}
inline ::metamoto::types::SignalConfiguration_Signal_BulbState* SignalConfiguration_Signal_SignalState::mutable_bulb_states(int index) {
  // @@protoc_insertion_point(field_mutable:metamoto.types.SignalConfiguration.Signal.SignalState.bulb_states)
  return bulb_states_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::metamoto::types::SignalConfiguration_Signal_BulbState >*
SignalConfiguration_Signal_SignalState::mutable_bulb_states() {
  // @@protoc_insertion_point(field_mutable_list:metamoto.types.SignalConfiguration.Signal.SignalState.bulb_states)
  return &bulb_states_;
}
inline const ::metamoto::types::SignalConfiguration_Signal_BulbState& SignalConfiguration_Signal_SignalState::bulb_states(int index) const {
  // @@protoc_insertion_point(field_get:metamoto.types.SignalConfiguration.Signal.SignalState.bulb_states)
  return bulb_states_.Get(index);
}
inline ::metamoto::types::SignalConfiguration_Signal_BulbState* SignalConfiguration_Signal_SignalState::add_bulb_states() {
  // @@protoc_insertion_point(field_add:metamoto.types.SignalConfiguration.Signal.SignalState.bulb_states)
  return bulb_states_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::metamoto::types::SignalConfiguration_Signal_BulbState >&
SignalConfiguration_Signal_SignalState::bulb_states() const {
  // @@protoc_insertion_point(field_list:metamoto.types.SignalConfiguration.Signal.SignalState.bulb_states)
  return bulb_states_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SignalConfiguration_Signal_BulbType

// .metamoto.types.SignalConfiguration.Signal.BulbType.Type type = 1;
inline void SignalConfiguration_Signal_BulbType::clear_type() {
  type_ = 0;
}
inline ::metamoto::types::SignalConfiguration_Signal_BulbType_Type SignalConfiguration_Signal_BulbType::type() const {
  // @@protoc_insertion_point(field_get:metamoto.types.SignalConfiguration.Signal.BulbType.type)
  return static_cast< ::metamoto::types::SignalConfiguration_Signal_BulbType_Type >(type_);
}
inline void SignalConfiguration_Signal_BulbType::set_type(::metamoto::types::SignalConfiguration_Signal_BulbType_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:metamoto.types.SignalConfiguration.Signal.BulbType.type)
}

// .metamoto.types.SignalConfiguration.Signal.BulbType.Color color = 2;
inline void SignalConfiguration_Signal_BulbType::clear_color() {
  color_ = 0;
}
inline ::metamoto::types::SignalConfiguration_Signal_BulbType_Color SignalConfiguration_Signal_BulbType::color() const {
  // @@protoc_insertion_point(field_get:metamoto.types.SignalConfiguration.Signal.BulbType.color)
  return static_cast< ::metamoto::types::SignalConfiguration_Signal_BulbType_Color >(color_);
}
inline void SignalConfiguration_Signal_BulbType::set_color(::metamoto::types::SignalConfiguration_Signal_BulbType_Color value) {
  
  color_ = value;
  // @@protoc_insertion_point(field_set:metamoto.types.SignalConfiguration.Signal.BulbType.color)
}

// -------------------------------------------------------------------

// SignalConfiguration_Signal

// map<string, .metamoto.types.SignalConfiguration.Signal.SignalState> signal_states = 1;
inline int SignalConfiguration_Signal::signal_states_size() const {
  return signal_states_.size();
}
inline void SignalConfiguration_Signal::clear_signal_states() {
  signal_states_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::metamoto::types::SignalConfiguration_Signal_SignalState >&
SignalConfiguration_Signal::signal_states() const {
  // @@protoc_insertion_point(field_map:metamoto.types.SignalConfiguration.Signal.signal_states)
  return signal_states_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::metamoto::types::SignalConfiguration_Signal_SignalState >*
SignalConfiguration_Signal::mutable_signal_states() {
  // @@protoc_insertion_point(field_mutable_map:metamoto.types.SignalConfiguration.Signal.signal_states)
  return signal_states_.MutableMap();
}

// string description = 2;
inline void SignalConfiguration_Signal::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SignalConfiguration_Signal::description() const {
  // @@protoc_insertion_point(field_get:metamoto.types.SignalConfiguration.Signal.description)
  return description_.GetNoArena();
}
inline void SignalConfiguration_Signal::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metamoto.types.SignalConfiguration.Signal.description)
}
#if LANG_CXX11
inline void SignalConfiguration_Signal::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metamoto.types.SignalConfiguration.Signal.description)
}
#endif
inline void SignalConfiguration_Signal::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metamoto.types.SignalConfiguration.Signal.description)
}
inline void SignalConfiguration_Signal::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metamoto.types.SignalConfiguration.Signal.description)
}
inline ::std::string* SignalConfiguration_Signal::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:metamoto.types.SignalConfiguration.Signal.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SignalConfiguration_Signal::release_description() {
  // @@protoc_insertion_point(field_release:metamoto.types.SignalConfiguration.Signal.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SignalConfiguration_Signal::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:metamoto.types.SignalConfiguration.Signal.description)
}

// repeated .metamoto.types.SignalConfiguration.Signal.BulbType bulb_types = 3;
inline int SignalConfiguration_Signal::bulb_types_size() const {
  return bulb_types_.size();
}
inline void SignalConfiguration_Signal::clear_bulb_types() {
  bulb_types_.Clear();
}
inline ::metamoto::types::SignalConfiguration_Signal_BulbType* SignalConfiguration_Signal::mutable_bulb_types(int index) {
  // @@protoc_insertion_point(field_mutable:metamoto.types.SignalConfiguration.Signal.bulb_types)
  return bulb_types_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::metamoto::types::SignalConfiguration_Signal_BulbType >*
SignalConfiguration_Signal::mutable_bulb_types() {
  // @@protoc_insertion_point(field_mutable_list:metamoto.types.SignalConfiguration.Signal.bulb_types)
  return &bulb_types_;
}
inline const ::metamoto::types::SignalConfiguration_Signal_BulbType& SignalConfiguration_Signal::bulb_types(int index) const {
  // @@protoc_insertion_point(field_get:metamoto.types.SignalConfiguration.Signal.bulb_types)
  return bulb_types_.Get(index);
}
inline ::metamoto::types::SignalConfiguration_Signal_BulbType* SignalConfiguration_Signal::add_bulb_types() {
  // @@protoc_insertion_point(field_add:metamoto.types.SignalConfiguration.Signal.bulb_types)
  return bulb_types_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::metamoto::types::SignalConfiguration_Signal_BulbType >&
SignalConfiguration_Signal::bulb_types() const {
  // @@protoc_insertion_point(field_list:metamoto.types.SignalConfiguration.Signal.bulb_types)
  return bulb_types_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SignalConfiguration

// map<string, .metamoto.types.SignalConfiguration.Signal> signals = 1;
inline int SignalConfiguration::signals_size() const {
  return signals_.size();
}
inline void SignalConfiguration::clear_signals() {
  signals_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::metamoto::types::SignalConfiguration_Signal >&
SignalConfiguration::signals() const {
  // @@protoc_insertion_point(field_map:metamoto.types.SignalConfiguration.signals)
  return signals_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::metamoto::types::SignalConfiguration_Signal >*
SignalConfiguration::mutable_signals() {
  // @@protoc_insertion_point(field_mutable_map:metamoto.types.SignalConfiguration.signals)
  return signals_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// IntersectionConfiguration

// map<string, .metamoto.types.Scenario.Intersection> intersections = 1;
inline int IntersectionConfiguration::intersections_size() const {
  return intersections_.size();
}
inline const ::google::protobuf::Map< ::std::string, ::metamoto::types::Scenario_Intersection >&
IntersectionConfiguration::intersections() const {
  // @@protoc_insertion_point(field_map:metamoto.types.IntersectionConfiguration.intersections)
  return intersections_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::metamoto::types::Scenario_Intersection >*
IntersectionConfiguration::mutable_intersections() {
  // @@protoc_insertion_point(field_mutable_map:metamoto.types.IntersectionConfiguration.intersections)
  return intersections_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace types
}  // namespace metamoto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::metamoto::types::SignalConfiguration_Signal_BulbState_State> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::metamoto::types::SignalConfiguration_Signal_BulbState_State>() {
  return ::metamoto::types::SignalConfiguration_Signal_BulbState_State_descriptor();
}
template <> struct is_proto_enum< ::metamoto::types::SignalConfiguration_Signal_BulbType_Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::metamoto::types::SignalConfiguration_Signal_BulbType_Type>() {
  return ::metamoto::types::SignalConfiguration_Signal_BulbType_Type_descriptor();
}
template <> struct is_proto_enum< ::metamoto::types::SignalConfiguration_Signal_BulbType_Color> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::metamoto::types::SignalConfiguration_Signal_BulbType_Color>() {
  return ::metamoto::types::SignalConfiguration_Signal_BulbType_Color_descriptor();
}
template <> struct is_proto_enum< ::metamoto::types::SignalConfiguration_Signal_ConnectionState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::metamoto::types::SignalConfiguration_Signal_ConnectionState>() {
  return ::metamoto::types::SignalConfiguration_Signal_ConnectionState_descriptor();
}
template <> struct is_proto_enum< ::metamoto::types::SignalConfiguration_Signal_ConnectionType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::metamoto::types::SignalConfiguration_Signal_ConnectionType>() {
  return ::metamoto::types::SignalConfiguration_Signal_ConnectionType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_metamoto_2ftypes_2fsignal_5fconfiguration_2eproto
