// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metamoto/types/bounding_box.proto

#ifndef PROTOBUF_INCLUDED_metamoto_2ftypes_2fbounding_5fbox_2eproto
#define PROTOBUF_INCLUDED_metamoto_2ftypes_2fbounding_5fbox_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "metamoto/types/vector3.pb.h"
#include "metamoto/types/quaternion.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fbounding_5fbox_2eproto 

namespace protobuf_metamoto_2ftypes_2fbounding_5fbox_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_metamoto_2ftypes_2fbounding_5fbox_2eproto
namespace metamoto {
namespace types {
class BoundingBox;
class BoundingBoxDefaultTypeInternal;
extern BoundingBoxDefaultTypeInternal _BoundingBox_default_instance_;
}  // namespace types
}  // namespace metamoto
namespace google {
namespace protobuf {
template<> ::metamoto::types::BoundingBox* Arena::CreateMaybeMessage<::metamoto::types::BoundingBox>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace metamoto {
namespace types {

// ===================================================================

class BoundingBox : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metamoto.types.BoundingBox) */ {
 public:
  BoundingBox();
  virtual ~BoundingBox();

  BoundingBox(const BoundingBox& from);

  inline BoundingBox& operator=(const BoundingBox& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BoundingBox(BoundingBox&& from) noexcept
    : BoundingBox() {
    *this = ::std::move(from);
  }

  inline BoundingBox& operator=(BoundingBox&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BoundingBox& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BoundingBox* internal_default_instance() {
    return reinterpret_cast<const BoundingBox*>(
               &_BoundingBox_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(BoundingBox* other);
  friend void swap(BoundingBox& a, BoundingBox& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BoundingBox* New() const final {
    return CreateMaybeMessage<BoundingBox>(NULL);
  }

  BoundingBox* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BoundingBox>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BoundingBox& from);
  void MergeFrom(const BoundingBox& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BoundingBox* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string color = 6;
  void clear_color();
  static const int kColorFieldNumber = 6;
  const ::std::string& color() const;
  void set_color(const ::std::string& value);
  #if LANG_CXX11
  void set_color(::std::string&& value);
  #endif
  void set_color(const char* value);
  void set_color(const char* value, size_t size);
  ::std::string* mutable_color();
  ::std::string* release_color();
  void set_allocated_color(::std::string* color);

  // .metamoto.types.Vector3 center = 1;
  bool has_center() const;
  void clear_center();
  static const int kCenterFieldNumber = 1;
  private:
  const ::metamoto::types::Vector3& _internal_center() const;
  public:
  const ::metamoto::types::Vector3& center() const;
  ::metamoto::types::Vector3* release_center();
  ::metamoto::types::Vector3* mutable_center();
  void set_allocated_center(::metamoto::types::Vector3* center);

  // .metamoto.types.Vector3 extents = 2;
  bool has_extents() const;
  void clear_extents();
  static const int kExtentsFieldNumber = 2;
  private:
  const ::metamoto::types::Vector3& _internal_extents() const;
  public:
  const ::metamoto::types::Vector3& extents() const;
  ::metamoto::types::Vector3* release_extents();
  ::metamoto::types::Vector3* mutable_extents();
  void set_allocated_extents(::metamoto::types::Vector3* extents);

  // .metamoto.types.Quaternion orientation = 3;
  bool has_orientation() const;
  void clear_orientation();
  static const int kOrientationFieldNumber = 3;
  private:
  const ::metamoto::types::Quaternion& _internal_orientation() const;
  public:
  const ::metamoto::types::Quaternion& orientation() const;
  ::metamoto::types::Quaternion* release_orientation();
  ::metamoto::types::Quaternion* mutable_orientation();
  void set_allocated_orientation(::metamoto::types::Quaternion* orientation);

  // @@protoc_insertion_point(class_scope:metamoto.types.BoundingBox)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr color_;
  ::metamoto::types::Vector3* center_;
  ::metamoto::types::Vector3* extents_;
  ::metamoto::types::Quaternion* orientation_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_metamoto_2ftypes_2fbounding_5fbox_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BoundingBox

// .metamoto.types.Vector3 center = 1;
inline bool BoundingBox::has_center() const {
  return this != internal_default_instance() && center_ != NULL;
}
inline const ::metamoto::types::Vector3& BoundingBox::_internal_center() const {
  return *center_;
}
inline const ::metamoto::types::Vector3& BoundingBox::center() const {
  const ::metamoto::types::Vector3* p = center_;
  // @@protoc_insertion_point(field_get:metamoto.types.BoundingBox.center)
  return p != NULL ? *p : *reinterpret_cast<const ::metamoto::types::Vector3*>(
      &::metamoto::types::_Vector3_default_instance_);
}
inline ::metamoto::types::Vector3* BoundingBox::release_center() {
  // @@protoc_insertion_point(field_release:metamoto.types.BoundingBox.center)
  
  ::metamoto::types::Vector3* temp = center_;
  center_ = NULL;
  return temp;
}
inline ::metamoto::types::Vector3* BoundingBox::mutable_center() {
  
  if (center_ == NULL) {
    auto* p = CreateMaybeMessage<::metamoto::types::Vector3>(GetArenaNoVirtual());
    center_ = p;
  }
  // @@protoc_insertion_point(field_mutable:metamoto.types.BoundingBox.center)
  return center_;
}
inline void BoundingBox::set_allocated_center(::metamoto::types::Vector3* center) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(center_);
  }
  if (center) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      center = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, center, submessage_arena);
    }
    
  } else {
    
  }
  center_ = center;
  // @@protoc_insertion_point(field_set_allocated:metamoto.types.BoundingBox.center)
}

// .metamoto.types.Vector3 extents = 2;
inline bool BoundingBox::has_extents() const {
  return this != internal_default_instance() && extents_ != NULL;
}
inline const ::metamoto::types::Vector3& BoundingBox::_internal_extents() const {
  return *extents_;
}
inline const ::metamoto::types::Vector3& BoundingBox::extents() const {
  const ::metamoto::types::Vector3* p = extents_;
  // @@protoc_insertion_point(field_get:metamoto.types.BoundingBox.extents)
  return p != NULL ? *p : *reinterpret_cast<const ::metamoto::types::Vector3*>(
      &::metamoto::types::_Vector3_default_instance_);
}
inline ::metamoto::types::Vector3* BoundingBox::release_extents() {
  // @@protoc_insertion_point(field_release:metamoto.types.BoundingBox.extents)
  
  ::metamoto::types::Vector3* temp = extents_;
  extents_ = NULL;
  return temp;
}
inline ::metamoto::types::Vector3* BoundingBox::mutable_extents() {
  
  if (extents_ == NULL) {
    auto* p = CreateMaybeMessage<::metamoto::types::Vector3>(GetArenaNoVirtual());
    extents_ = p;
  }
  // @@protoc_insertion_point(field_mutable:metamoto.types.BoundingBox.extents)
  return extents_;
}
inline void BoundingBox::set_allocated_extents(::metamoto::types::Vector3* extents) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(extents_);
  }
  if (extents) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      extents = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, extents, submessage_arena);
    }
    
  } else {
    
  }
  extents_ = extents;
  // @@protoc_insertion_point(field_set_allocated:metamoto.types.BoundingBox.extents)
}

// .metamoto.types.Quaternion orientation = 3;
inline bool BoundingBox::has_orientation() const {
  return this != internal_default_instance() && orientation_ != NULL;
}
inline const ::metamoto::types::Quaternion& BoundingBox::_internal_orientation() const {
  return *orientation_;
}
inline const ::metamoto::types::Quaternion& BoundingBox::orientation() const {
  const ::metamoto::types::Quaternion* p = orientation_;
  // @@protoc_insertion_point(field_get:metamoto.types.BoundingBox.orientation)
  return p != NULL ? *p : *reinterpret_cast<const ::metamoto::types::Quaternion*>(
      &::metamoto::types::_Quaternion_default_instance_);
}
inline ::metamoto::types::Quaternion* BoundingBox::release_orientation() {
  // @@protoc_insertion_point(field_release:metamoto.types.BoundingBox.orientation)
  
  ::metamoto::types::Quaternion* temp = orientation_;
  orientation_ = NULL;
  return temp;
}
inline ::metamoto::types::Quaternion* BoundingBox::mutable_orientation() {
  
  if (orientation_ == NULL) {
    auto* p = CreateMaybeMessage<::metamoto::types::Quaternion>(GetArenaNoVirtual());
    orientation_ = p;
  }
  // @@protoc_insertion_point(field_mutable:metamoto.types.BoundingBox.orientation)
  return orientation_;
}
inline void BoundingBox::set_allocated_orientation(::metamoto::types::Quaternion* orientation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(orientation_);
  }
  if (orientation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      orientation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, orientation, submessage_arena);
    }
    
  } else {
    
  }
  orientation_ = orientation;
  // @@protoc_insertion_point(field_set_allocated:metamoto.types.BoundingBox.orientation)
}

// string color = 6;
inline void BoundingBox::clear_color() {
  color_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BoundingBox::color() const {
  // @@protoc_insertion_point(field_get:metamoto.types.BoundingBox.color)
  return color_.GetNoArena();
}
inline void BoundingBox::set_color(const ::std::string& value) {
  
  color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metamoto.types.BoundingBox.color)
}
#if LANG_CXX11
inline void BoundingBox::set_color(::std::string&& value) {
  
  color_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metamoto.types.BoundingBox.color)
}
#endif
inline void BoundingBox::set_color(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metamoto.types.BoundingBox.color)
}
inline void BoundingBox::set_color(const char* value, size_t size) {
  
  color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metamoto.types.BoundingBox.color)
}
inline ::std::string* BoundingBox::mutable_color() {
  
  // @@protoc_insertion_point(field_mutable:metamoto.types.BoundingBox.color)
  return color_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BoundingBox::release_color() {
  // @@protoc_insertion_point(field_release:metamoto.types.BoundingBox.color)
  
  return color_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BoundingBox::set_allocated_color(::std::string* color) {
  if (color != NULL) {
    
  } else {
    
  }
  color_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), color);
  // @@protoc_insertion_point(field_set_allocated:metamoto.types.BoundingBox.color)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace types
}  // namespace metamoto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_metamoto_2ftypes_2fbounding_5fbox_2eproto
