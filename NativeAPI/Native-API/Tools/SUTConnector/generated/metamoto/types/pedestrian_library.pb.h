// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metamoto/types/pedestrian_library.proto

#ifndef PROTOBUF_INCLUDED_metamoto_2ftypes_2fpedestrian_5flibrary_2eproto
#define PROTOBUF_INCLUDED_metamoto_2ftypes_2fpedestrian_5flibrary_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "metamoto/types/pedestrian.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fpedestrian_5flibrary_2eproto 

namespace protobuf_metamoto_2ftypes_2fpedestrian_5flibrary_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_metamoto_2ftypes_2fpedestrian_5flibrary_2eproto
namespace metamoto {
namespace types {
class PedestrianLibrary;
class PedestrianLibraryDefaultTypeInternal;
extern PedestrianLibraryDefaultTypeInternal _PedestrianLibrary_default_instance_;
class PedestrianLibrary_PedestrianTemplate;
class PedestrianLibrary_PedestrianTemplateDefaultTypeInternal;
extern PedestrianLibrary_PedestrianTemplateDefaultTypeInternal _PedestrianLibrary_PedestrianTemplate_default_instance_;
}  // namespace types
}  // namespace metamoto
namespace google {
namespace protobuf {
template<> ::metamoto::types::PedestrianLibrary* Arena::CreateMaybeMessage<::metamoto::types::PedestrianLibrary>(Arena*);
template<> ::metamoto::types::PedestrianLibrary_PedestrianTemplate* Arena::CreateMaybeMessage<::metamoto::types::PedestrianLibrary_PedestrianTemplate>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace metamoto {
namespace types {

// ===================================================================

class PedestrianLibrary_PedestrianTemplate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metamoto.types.PedestrianLibrary.PedestrianTemplate) */ {
 public:
  PedestrianLibrary_PedestrianTemplate();
  virtual ~PedestrianLibrary_PedestrianTemplate();

  PedestrianLibrary_PedestrianTemplate(const PedestrianLibrary_PedestrianTemplate& from);

  inline PedestrianLibrary_PedestrianTemplate& operator=(const PedestrianLibrary_PedestrianTemplate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PedestrianLibrary_PedestrianTemplate(PedestrianLibrary_PedestrianTemplate&& from) noexcept
    : PedestrianLibrary_PedestrianTemplate() {
    *this = ::std::move(from);
  }

  inline PedestrianLibrary_PedestrianTemplate& operator=(PedestrianLibrary_PedestrianTemplate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PedestrianLibrary_PedestrianTemplate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PedestrianLibrary_PedestrianTemplate* internal_default_instance() {
    return reinterpret_cast<const PedestrianLibrary_PedestrianTemplate*>(
               &_PedestrianLibrary_PedestrianTemplate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PedestrianLibrary_PedestrianTemplate* other);
  friend void swap(PedestrianLibrary_PedestrianTemplate& a, PedestrianLibrary_PedestrianTemplate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PedestrianLibrary_PedestrianTemplate* New() const final {
    return CreateMaybeMessage<PedestrianLibrary_PedestrianTemplate>(NULL);
  }

  PedestrianLibrary_PedestrianTemplate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PedestrianLibrary_PedestrianTemplate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PedestrianLibrary_PedestrianTemplate& from);
  void MergeFrom(const PedestrianLibrary_PedestrianTemplate& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PedestrianLibrary_PedestrianTemplate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string other_names = 2;
  int other_names_size() const;
  void clear_other_names();
  static const int kOtherNamesFieldNumber = 2;
  const ::std::string& other_names(int index) const;
  ::std::string* mutable_other_names(int index);
  void set_other_names(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_other_names(int index, ::std::string&& value);
  #endif
  void set_other_names(int index, const char* value);
  void set_other_names(int index, const char* value, size_t size);
  ::std::string* add_other_names();
  void add_other_names(const ::std::string& value);
  #if LANG_CXX11
  void add_other_names(::std::string&& value);
  #endif
  void add_other_names(const char* value);
  void add_other_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& other_names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_other_names();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string prefab = 3;
  void clear_prefab();
  static const int kPrefabFieldNumber = 3;
  const ::std::string& prefab() const;
  void set_prefab(const ::std::string& value);
  #if LANG_CXX11
  void set_prefab(::std::string&& value);
  #endif
  void set_prefab(const char* value);
  void set_prefab(const char* value, size_t size);
  ::std::string* mutable_prefab();
  ::std::string* release_prefab();
  void set_allocated_prefab(::std::string* prefab);

  // .metamoto.types.Pedestrian.Type type = 4;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::metamoto::types::Pedestrian_Type type() const;
  void set_type(::metamoto::types::Pedestrian_Type value);

  // float weight = 5;
  void clear_weight();
  static const int kWeightFieldNumber = 5;
  float weight() const;
  void set_weight(float value);

  // @@protoc_insertion_point(class_scope:metamoto.types.PedestrianLibrary.PedestrianTemplate)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> other_names_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr prefab_;
  int type_;
  float weight_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_metamoto_2ftypes_2fpedestrian_5flibrary_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PedestrianLibrary : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metamoto.types.PedestrianLibrary) */ {
 public:
  PedestrianLibrary();
  virtual ~PedestrianLibrary();

  PedestrianLibrary(const PedestrianLibrary& from);

  inline PedestrianLibrary& operator=(const PedestrianLibrary& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PedestrianLibrary(PedestrianLibrary&& from) noexcept
    : PedestrianLibrary() {
    *this = ::std::move(from);
  }

  inline PedestrianLibrary& operator=(PedestrianLibrary&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PedestrianLibrary& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PedestrianLibrary* internal_default_instance() {
    return reinterpret_cast<const PedestrianLibrary*>(
               &_PedestrianLibrary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PedestrianLibrary* other);
  friend void swap(PedestrianLibrary& a, PedestrianLibrary& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PedestrianLibrary* New() const final {
    return CreateMaybeMessage<PedestrianLibrary>(NULL);
  }

  PedestrianLibrary* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PedestrianLibrary>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PedestrianLibrary& from);
  void MergeFrom(const PedestrianLibrary& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PedestrianLibrary* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PedestrianLibrary_PedestrianTemplate PedestrianTemplate;

  // accessors -------------------------------------------------------

  // repeated .metamoto.types.PedestrianLibrary.PedestrianTemplate pedestrians = 1;
  int pedestrians_size() const;
  void clear_pedestrians();
  static const int kPedestriansFieldNumber = 1;
  ::metamoto::types::PedestrianLibrary_PedestrianTemplate* mutable_pedestrians(int index);
  ::google::protobuf::RepeatedPtrField< ::metamoto::types::PedestrianLibrary_PedestrianTemplate >*
      mutable_pedestrians();
  const ::metamoto::types::PedestrianLibrary_PedestrianTemplate& pedestrians(int index) const;
  ::metamoto::types::PedestrianLibrary_PedestrianTemplate* add_pedestrians();
  const ::google::protobuf::RepeatedPtrField< ::metamoto::types::PedestrianLibrary_PedestrianTemplate >&
      pedestrians() const;

  // @@protoc_insertion_point(class_scope:metamoto.types.PedestrianLibrary)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::metamoto::types::PedestrianLibrary_PedestrianTemplate > pedestrians_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_metamoto_2ftypes_2fpedestrian_5flibrary_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PedestrianLibrary_PedestrianTemplate

// string name = 1;
inline void PedestrianLibrary_PedestrianTemplate::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PedestrianLibrary_PedestrianTemplate::name() const {
  // @@protoc_insertion_point(field_get:metamoto.types.PedestrianLibrary.PedestrianTemplate.name)
  return name_.GetNoArena();
}
inline void PedestrianLibrary_PedestrianTemplate::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metamoto.types.PedestrianLibrary.PedestrianTemplate.name)
}
#if LANG_CXX11
inline void PedestrianLibrary_PedestrianTemplate::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metamoto.types.PedestrianLibrary.PedestrianTemplate.name)
}
#endif
inline void PedestrianLibrary_PedestrianTemplate::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metamoto.types.PedestrianLibrary.PedestrianTemplate.name)
}
inline void PedestrianLibrary_PedestrianTemplate::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metamoto.types.PedestrianLibrary.PedestrianTemplate.name)
}
inline ::std::string* PedestrianLibrary_PedestrianTemplate::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:metamoto.types.PedestrianLibrary.PedestrianTemplate.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PedestrianLibrary_PedestrianTemplate::release_name() {
  // @@protoc_insertion_point(field_release:metamoto.types.PedestrianLibrary.PedestrianTemplate.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PedestrianLibrary_PedestrianTemplate::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:metamoto.types.PedestrianLibrary.PedestrianTemplate.name)
}

// repeated string other_names = 2;
inline int PedestrianLibrary_PedestrianTemplate::other_names_size() const {
  return other_names_.size();
}
inline void PedestrianLibrary_PedestrianTemplate::clear_other_names() {
  other_names_.Clear();
}
inline const ::std::string& PedestrianLibrary_PedestrianTemplate::other_names(int index) const {
  // @@protoc_insertion_point(field_get:metamoto.types.PedestrianLibrary.PedestrianTemplate.other_names)
  return other_names_.Get(index);
}
inline ::std::string* PedestrianLibrary_PedestrianTemplate::mutable_other_names(int index) {
  // @@protoc_insertion_point(field_mutable:metamoto.types.PedestrianLibrary.PedestrianTemplate.other_names)
  return other_names_.Mutable(index);
}
inline void PedestrianLibrary_PedestrianTemplate::set_other_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:metamoto.types.PedestrianLibrary.PedestrianTemplate.other_names)
  other_names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void PedestrianLibrary_PedestrianTemplate::set_other_names(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:metamoto.types.PedestrianLibrary.PedestrianTemplate.other_names)
  other_names_.Mutable(index)->assign(std::move(value));
}
#endif
inline void PedestrianLibrary_PedestrianTemplate::set_other_names(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  other_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:metamoto.types.PedestrianLibrary.PedestrianTemplate.other_names)
}
inline void PedestrianLibrary_PedestrianTemplate::set_other_names(int index, const char* value, size_t size) {
  other_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:metamoto.types.PedestrianLibrary.PedestrianTemplate.other_names)
}
inline ::std::string* PedestrianLibrary_PedestrianTemplate::add_other_names() {
  // @@protoc_insertion_point(field_add_mutable:metamoto.types.PedestrianLibrary.PedestrianTemplate.other_names)
  return other_names_.Add();
}
inline void PedestrianLibrary_PedestrianTemplate::add_other_names(const ::std::string& value) {
  other_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:metamoto.types.PedestrianLibrary.PedestrianTemplate.other_names)
}
#if LANG_CXX11
inline void PedestrianLibrary_PedestrianTemplate::add_other_names(::std::string&& value) {
  other_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:metamoto.types.PedestrianLibrary.PedestrianTemplate.other_names)
}
#endif
inline void PedestrianLibrary_PedestrianTemplate::add_other_names(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  other_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:metamoto.types.PedestrianLibrary.PedestrianTemplate.other_names)
}
inline void PedestrianLibrary_PedestrianTemplate::add_other_names(const char* value, size_t size) {
  other_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:metamoto.types.PedestrianLibrary.PedestrianTemplate.other_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PedestrianLibrary_PedestrianTemplate::other_names() const {
  // @@protoc_insertion_point(field_list:metamoto.types.PedestrianLibrary.PedestrianTemplate.other_names)
  return other_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PedestrianLibrary_PedestrianTemplate::mutable_other_names() {
  // @@protoc_insertion_point(field_mutable_list:metamoto.types.PedestrianLibrary.PedestrianTemplate.other_names)
  return &other_names_;
}

// string prefab = 3;
inline void PedestrianLibrary_PedestrianTemplate::clear_prefab() {
  prefab_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PedestrianLibrary_PedestrianTemplate::prefab() const {
  // @@protoc_insertion_point(field_get:metamoto.types.PedestrianLibrary.PedestrianTemplate.prefab)
  return prefab_.GetNoArena();
}
inline void PedestrianLibrary_PedestrianTemplate::set_prefab(const ::std::string& value) {
  
  prefab_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metamoto.types.PedestrianLibrary.PedestrianTemplate.prefab)
}
#if LANG_CXX11
inline void PedestrianLibrary_PedestrianTemplate::set_prefab(::std::string&& value) {
  
  prefab_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:metamoto.types.PedestrianLibrary.PedestrianTemplate.prefab)
}
#endif
inline void PedestrianLibrary_PedestrianTemplate::set_prefab(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  prefab_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metamoto.types.PedestrianLibrary.PedestrianTemplate.prefab)
}
inline void PedestrianLibrary_PedestrianTemplate::set_prefab(const char* value, size_t size) {
  
  prefab_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metamoto.types.PedestrianLibrary.PedestrianTemplate.prefab)
}
inline ::std::string* PedestrianLibrary_PedestrianTemplate::mutable_prefab() {
  
  // @@protoc_insertion_point(field_mutable:metamoto.types.PedestrianLibrary.PedestrianTemplate.prefab)
  return prefab_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PedestrianLibrary_PedestrianTemplate::release_prefab() {
  // @@protoc_insertion_point(field_release:metamoto.types.PedestrianLibrary.PedestrianTemplate.prefab)
  
  return prefab_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PedestrianLibrary_PedestrianTemplate::set_allocated_prefab(::std::string* prefab) {
  if (prefab != NULL) {
    
  } else {
    
  }
  prefab_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prefab);
  // @@protoc_insertion_point(field_set_allocated:metamoto.types.PedestrianLibrary.PedestrianTemplate.prefab)
}

// .metamoto.types.Pedestrian.Type type = 4;
inline void PedestrianLibrary_PedestrianTemplate::clear_type() {
  type_ = 0;
}
inline ::metamoto::types::Pedestrian_Type PedestrianLibrary_PedestrianTemplate::type() const {
  // @@protoc_insertion_point(field_get:metamoto.types.PedestrianLibrary.PedestrianTemplate.type)
  return static_cast< ::metamoto::types::Pedestrian_Type >(type_);
}
inline void PedestrianLibrary_PedestrianTemplate::set_type(::metamoto::types::Pedestrian_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:metamoto.types.PedestrianLibrary.PedestrianTemplate.type)
}

// float weight = 5;
inline void PedestrianLibrary_PedestrianTemplate::clear_weight() {
  weight_ = 0;
}
inline float PedestrianLibrary_PedestrianTemplate::weight() const {
  // @@protoc_insertion_point(field_get:metamoto.types.PedestrianLibrary.PedestrianTemplate.weight)
  return weight_;
}
inline void PedestrianLibrary_PedestrianTemplate::set_weight(float value) {
  
  weight_ = value;
  // @@protoc_insertion_point(field_set:metamoto.types.PedestrianLibrary.PedestrianTemplate.weight)
}

// -------------------------------------------------------------------

// PedestrianLibrary

// repeated .metamoto.types.PedestrianLibrary.PedestrianTemplate pedestrians = 1;
inline int PedestrianLibrary::pedestrians_size() const {
  return pedestrians_.size();
}
inline void PedestrianLibrary::clear_pedestrians() {
  pedestrians_.Clear();
}
inline ::metamoto::types::PedestrianLibrary_PedestrianTemplate* PedestrianLibrary::mutable_pedestrians(int index) {
  // @@protoc_insertion_point(field_mutable:metamoto.types.PedestrianLibrary.pedestrians)
  return pedestrians_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::metamoto::types::PedestrianLibrary_PedestrianTemplate >*
PedestrianLibrary::mutable_pedestrians() {
  // @@protoc_insertion_point(field_mutable_list:metamoto.types.PedestrianLibrary.pedestrians)
  return &pedestrians_;
}
inline const ::metamoto::types::PedestrianLibrary_PedestrianTemplate& PedestrianLibrary::pedestrians(int index) const {
  // @@protoc_insertion_point(field_get:metamoto.types.PedestrianLibrary.pedestrians)
  return pedestrians_.Get(index);
}
inline ::metamoto::types::PedestrianLibrary_PedestrianTemplate* PedestrianLibrary::add_pedestrians() {
  // @@protoc_insertion_point(field_add:metamoto.types.PedestrianLibrary.pedestrians)
  return pedestrians_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::metamoto::types::PedestrianLibrary_PedestrianTemplate >&
PedestrianLibrary::pedestrians() const {
  // @@protoc_insertion_point(field_list:metamoto.types.PedestrianLibrary.pedestrians)
  return pedestrians_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace types
}  // namespace metamoto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_metamoto_2ftypes_2fpedestrian_5flibrary_2eproto
