// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metamoto/types/test_case.proto

#include "metamoto/types/test_case.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_metamoto_2ftypes_2fego_5fvehicle_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fego_5fvehicle_2eproto ::google::protobuf::internal::SCCInfo<8> scc_info_EgoVehicle;
}  // namespace protobuf_metamoto_2ftypes_2fego_5fvehicle_2eproto
namespace protobuf_metamoto_2ftypes_2fscenario_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fscenario_2eproto ::google::protobuf::internal::SCCInfo<12> scc_info_Scenario;
}  // namespace protobuf_metamoto_2ftypes_2fscenario_2eproto
namespace protobuf_metamoto_2ftypes_2ftest_5fjob_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2ftest_5fjob_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TestJob;
}  // namespace protobuf_metamoto_2ftypes_2ftest_5fjob_2eproto
namespace metamoto {
namespace types {
class TestCaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestCase>
      _instance;
} _TestCase_default_instance_;
}  // namespace types
}  // namespace metamoto
namespace protobuf_metamoto_2ftypes_2ftest_5fcase_2eproto {
static void InitDefaultsTestCase() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::types::_TestCase_default_instance_;
    new (ptr) ::metamoto::types::TestCase();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::types::TestCase::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_TestCase =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsTestCase}, {
      &protobuf_metamoto_2ftypes_2fscenario_2eproto::scc_info_Scenario.base,
      &protobuf_metamoto_2ftypes_2fego_5fvehicle_2eproto::scc_info_EgoVehicle.base,
      &protobuf_metamoto_2ftypes_2ftest_5fjob_2eproto::scc_info_TestJob.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TestCase.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestCase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestCase, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestCase, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestCase, scenario_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestCase, ego_vehicle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestCase, history_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::TestCase, test_manager_url_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::metamoto::types::TestCase)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::types::_TestCase_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "metamoto/types/test_case.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\036metamoto/types/test_case.proto\022\016metamo"
      "to.types\032 metamoto/types/ego_vehicle.pro"
      "to\032\035metamoto/types/scenario.proto\032\035metam"
      "oto/types/test_job.proto\"\305\001\n\010TestCase\022\n\n"
      "\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022*\n\010scenario\030\003 \001("
      "\0132\030.metamoto.types.Scenario\022/\n\013ego_vehic"
      "le\030\004 \001(\0132\032.metamoto.types.EgoVehicle\022(\n\007"
      "history\030\005 \003(\0132\027.metamoto.types.TestJob\022\030"
      "\n\020test_manager_url\030\006 \001(\tB\021\252\002\016Metamoto.Ty"
      "pesb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 371);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "metamoto/types/test_case.proto", &protobuf_RegisterTypes);
  ::protobuf_metamoto_2ftypes_2fego_5fvehicle_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2fscenario_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2ftest_5fjob_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_metamoto_2ftypes_2ftest_5fcase_2eproto
namespace metamoto {
namespace types {

// ===================================================================

void TestCase::InitAsDefaultInstance() {
  ::metamoto::types::_TestCase_default_instance_._instance.get_mutable()->scenario_ = const_cast< ::metamoto::types::Scenario*>(
      ::metamoto::types::Scenario::internal_default_instance());
  ::metamoto::types::_TestCase_default_instance_._instance.get_mutable()->ego_vehicle_ = const_cast< ::metamoto::types::EgoVehicle*>(
      ::metamoto::types::EgoVehicle::internal_default_instance());
}
void TestCase::clear_scenario() {
  if (GetArenaNoVirtual() == NULL && scenario_ != NULL) {
    delete scenario_;
  }
  scenario_ = NULL;
}
void TestCase::clear_ego_vehicle() {
  if (GetArenaNoVirtual() == NULL && ego_vehicle_ != NULL) {
    delete ego_vehicle_;
  }
  ego_vehicle_ = NULL;
}
void TestCase::clear_history() {
  history_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestCase::kIdFieldNumber;
const int TestCase::kNameFieldNumber;
const int TestCase::kScenarioFieldNumber;
const int TestCase::kEgoVehicleFieldNumber;
const int TestCase::kHistoryFieldNumber;
const int TestCase::kTestManagerUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestCase::TestCase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2ftypes_2ftest_5fcase_2eproto::scc_info_TestCase.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.types.TestCase)
}
TestCase::TestCase(const TestCase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      history_(from.history_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  test_manager_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.test_manager_url().size() > 0) {
    test_manager_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_manager_url_);
  }
  if (from.has_scenario()) {
    scenario_ = new ::metamoto::types::Scenario(*from.scenario_);
  } else {
    scenario_ = NULL;
  }
  if (from.has_ego_vehicle()) {
    ego_vehicle_ = new ::metamoto::types::EgoVehicle(*from.ego_vehicle_);
  } else {
    ego_vehicle_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:metamoto.types.TestCase)
}

void TestCase::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_manager_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&scenario_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ego_vehicle_) -
      reinterpret_cast<char*>(&scenario_)) + sizeof(ego_vehicle_));
}

TestCase::~TestCase() {
  // @@protoc_insertion_point(destructor:metamoto.types.TestCase)
  SharedDtor();
}

void TestCase::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_manager_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete scenario_;
  if (this != internal_default_instance()) delete ego_vehicle_;
}

void TestCase::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TestCase::descriptor() {
  ::protobuf_metamoto_2ftypes_2ftest_5fcase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2ftest_5fcase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestCase& TestCase::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2ftypes_2ftest_5fcase_2eproto::scc_info_TestCase.base);
  return *internal_default_instance();
}


void TestCase::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.types.TestCase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  history_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_manager_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && scenario_ != NULL) {
    delete scenario_;
  }
  scenario_ = NULL;
  if (GetArenaNoVirtual() == NULL && ego_vehicle_ != NULL) {
    delete ego_vehicle_;
  }
  ego_vehicle_ = NULL;
  _internal_metadata_.Clear();
}

bool TestCase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.types.TestCase)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestCase.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestCase.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.Scenario scenario = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scenario()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.EgoVehicle ego_vehicle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ego_vehicle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metamoto.types.TestJob history = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_history()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string test_manager_url = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_test_manager_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_manager_url().data(), static_cast<int>(this->test_manager_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.TestCase.test_manager_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.types.TestCase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.types.TestCase)
  return false;
#undef DO_
}

void TestCase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.types.TestCase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestCase.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestCase.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // .metamoto.types.Scenario scenario = 3;
  if (this->has_scenario()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_scenario(), output);
  }

  // .metamoto.types.EgoVehicle ego_vehicle = 4;
  if (this->has_ego_vehicle()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_ego_vehicle(), output);
  }

  // repeated .metamoto.types.TestJob history = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->history_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->history(static_cast<int>(i)),
      output);
  }

  // string test_manager_url = 6;
  if (this->test_manager_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_manager_url().data(), static_cast<int>(this->test_manager_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestCase.test_manager_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->test_manager_url(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.types.TestCase)
}

::google::protobuf::uint8* TestCase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.types.TestCase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestCase.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestCase.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // .metamoto.types.Scenario scenario = 3;
  if (this->has_scenario()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_scenario(), deterministic, target);
  }

  // .metamoto.types.EgoVehicle ego_vehicle = 4;
  if (this->has_ego_vehicle()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_ego_vehicle(), deterministic, target);
  }

  // repeated .metamoto.types.TestJob history = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->history_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->history(static_cast<int>(i)), deterministic, target);
  }

  // string test_manager_url = 6;
  if (this->test_manager_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_manager_url().data(), static_cast<int>(this->test_manager_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.TestCase.test_manager_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->test_manager_url(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.types.TestCase)
  return target;
}

size_t TestCase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.types.TestCase)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .metamoto.types.TestJob history = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->history_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->history(static_cast<int>(i)));
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string test_manager_url = 6;
  if (this->test_manager_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->test_manager_url());
  }

  // .metamoto.types.Scenario scenario = 3;
  if (this->has_scenario()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *scenario_);
  }

  // .metamoto.types.EgoVehicle ego_vehicle = 4;
  if (this->has_ego_vehicle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ego_vehicle_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestCase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.types.TestCase)
  GOOGLE_DCHECK_NE(&from, this);
  const TestCase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestCase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.types.TestCase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.types.TestCase)
    MergeFrom(*source);
  }
}

void TestCase::MergeFrom(const TestCase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.types.TestCase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  history_.MergeFrom(from.history_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.test_manager_url().size() > 0) {

    test_manager_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.test_manager_url_);
  }
  if (from.has_scenario()) {
    mutable_scenario()->::metamoto::types::Scenario::MergeFrom(from.scenario());
  }
  if (from.has_ego_vehicle()) {
    mutable_ego_vehicle()->::metamoto::types::EgoVehicle::MergeFrom(from.ego_vehicle());
  }
}

void TestCase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.types.TestCase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestCase::CopyFrom(const TestCase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.types.TestCase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestCase::IsInitialized() const {
  return true;
}

void TestCase::Swap(TestCase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestCase::InternalSwap(TestCase* other) {
  using std::swap;
  CastToBase(&history_)->InternalSwap(CastToBase(&other->history_));
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  test_manager_url_.Swap(&other->test_manager_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(scenario_, other->scenario_);
  swap(ego_vehicle_, other->ego_vehicle_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TestCase::GetMetadata() const {
  protobuf_metamoto_2ftypes_2ftest_5fcase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2ftest_5fcase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace types
}  // namespace metamoto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::types::TestCase* Arena::CreateMaybeMessage< ::metamoto::types::TestCase >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::types::TestCase >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
