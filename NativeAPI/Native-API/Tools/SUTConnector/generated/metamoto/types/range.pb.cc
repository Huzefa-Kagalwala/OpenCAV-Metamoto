// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metamoto/types/range.proto

#include "metamoto/types/range.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fstruct_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fstruct_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListValue;
}  // namespace protobuf_google_2fprotobuf_2fstruct_2eproto
namespace protobuf_metamoto_2ftypes_2frange_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2frange_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NumericRange;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2frange_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Range;
}  // namespace protobuf_metamoto_2ftypes_2frange_2eproto
namespace metamoto {
namespace types {
class NumericRangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NumericRange>
      _instance;
} _NumericRange_default_instance_;
class RangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Range>
      _instance;
} _Range_default_instance_;
class ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Parameter>
      _instance;
} _Parameter_default_instance_;
}  // namespace types
}  // namespace metamoto
namespace protobuf_metamoto_2ftypes_2frange_2eproto {
static void InitDefaultsNumericRange() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::types::_NumericRange_default_instance_;
    new (ptr) ::metamoto::types::NumericRange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::types::NumericRange::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NumericRange =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNumericRange}, {}};

static void InitDefaultsRange() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::types::_Range_default_instance_;
    new (ptr) ::metamoto::types::Range();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::types::Range::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Range =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRange}, {
      &protobuf_metamoto_2ftypes_2frange_2eproto::scc_info_NumericRange.base,
      &protobuf_google_2fprotobuf_2fstruct_2eproto::scc_info_ListValue.base,}};

static void InitDefaultsParameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::types::_Parameter_default_instance_;
    new (ptr) ::metamoto::types::Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::types::Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Parameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsParameter}, {
      &protobuf_metamoto_2ftypes_2frange_2eproto::scc_info_Range.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_NumericRange.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Range.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Parameter.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::NumericRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::NumericRange, min_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::NumericRange, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::NumericRange, step_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::Range, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::Range, parameter_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::Range, numeric_ranges_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::Range, values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::Parameter, range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::types::Parameter, selected_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::metamoto::types::NumericRange)},
  { 8, -1, sizeof(::metamoto::types::Range)},
  { 16, -1, sizeof(::metamoto::types::Parameter)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::types::_NumericRange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::types::_Range_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::types::_Parameter_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "metamoto/types/range.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032metamoto/types/range.proto\022\016metamoto.t"
      "ypes\032\034google/protobuf/struct.proto\"6\n\014Nu"
      "mericRange\022\013\n\003min\030\001 \001(\001\022\013\n\003max\030\002 \001(\001\022\014\n\004"
      "step\030\003 \001(\001\"}\n\005Range\022\026\n\016parameter_name\030\001 "
      "\001(\t\0224\n\016numeric_ranges\030\002 \003(\0132\034.metamoto.t"
      "ypes.NumericRange\022&\n\006values\030\003 \003(\0132\026.goog"
      "le.protobuf.Value\"Z\n\tParameter\022$\n\005range\030"
      "\001 \001(\0132\025.metamoto.types.Range\022\'\n\010selected"
      "\030\002 \001(\0132\025.metamoto.types.RangeB\021\252\002\016Metamo"
      "to.Typesb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 376);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "metamoto/types/range.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fstruct_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_metamoto_2ftypes_2frange_2eproto
namespace metamoto {
namespace types {

// ===================================================================

void NumericRange::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NumericRange::kMinFieldNumber;
const int NumericRange::kMaxFieldNumber;
const int NumericRange::kStepFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NumericRange::NumericRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2ftypes_2frange_2eproto::scc_info_NumericRange.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.types.NumericRange)
}
NumericRange::NumericRange(const NumericRange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&min_, &from.min_,
    static_cast<size_t>(reinterpret_cast<char*>(&step_) -
    reinterpret_cast<char*>(&min_)) + sizeof(step_));
  // @@protoc_insertion_point(copy_constructor:metamoto.types.NumericRange)
}

void NumericRange::SharedCtor() {
  ::memset(&min_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&step_) -
      reinterpret_cast<char*>(&min_)) + sizeof(step_));
}

NumericRange::~NumericRange() {
  // @@protoc_insertion_point(destructor:metamoto.types.NumericRange)
  SharedDtor();
}

void NumericRange::SharedDtor() {
}

void NumericRange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NumericRange::descriptor() {
  ::protobuf_metamoto_2ftypes_2frange_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2frange_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NumericRange& NumericRange::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2ftypes_2frange_2eproto::scc_info_NumericRange.base);
  return *internal_default_instance();
}


void NumericRange::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.types.NumericRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&min_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&step_) -
      reinterpret_cast<char*>(&min_)) + sizeof(step_));
  _internal_metadata_.Clear();
}

bool NumericRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.types.NumericRange)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double min = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &min_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double max = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double step = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &step_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.types.NumericRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.types.NumericRange)
  return false;
#undef DO_
}

void NumericRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.types.NumericRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double min = 1;
  if (this->min() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->min(), output);
  }

  // double max = 2;
  if (this->max() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->max(), output);
  }

  // double step = 3;
  if (this->step() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->step(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.types.NumericRange)
}

::google::protobuf::uint8* NumericRange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.types.NumericRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double min = 1;
  if (this->min() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->min(), target);
  }

  // double max = 2;
  if (this->max() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->max(), target);
  }

  // double step = 3;
  if (this->step() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->step(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.types.NumericRange)
  return target;
}

size_t NumericRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.types.NumericRange)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double min = 1;
  if (this->min() != 0) {
    total_size += 1 + 8;
  }

  // double max = 2;
  if (this->max() != 0) {
    total_size += 1 + 8;
  }

  // double step = 3;
  if (this->step() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NumericRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.types.NumericRange)
  GOOGLE_DCHECK_NE(&from, this);
  const NumericRange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NumericRange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.types.NumericRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.types.NumericRange)
    MergeFrom(*source);
  }
}

void NumericRange::MergeFrom(const NumericRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.types.NumericRange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.min() != 0) {
    set_min(from.min());
  }
  if (from.max() != 0) {
    set_max(from.max());
  }
  if (from.step() != 0) {
    set_step(from.step());
  }
}

void NumericRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.types.NumericRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NumericRange::CopyFrom(const NumericRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.types.NumericRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NumericRange::IsInitialized() const {
  return true;
}

void NumericRange::Swap(NumericRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NumericRange::InternalSwap(NumericRange* other) {
  using std::swap;
  swap(min_, other->min_);
  swap(max_, other->max_);
  swap(step_, other->step_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NumericRange::GetMetadata() const {
  protobuf_metamoto_2ftypes_2frange_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2frange_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Range::InitAsDefaultInstance() {
}
void Range::clear_values() {
  values_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Range::kParameterNameFieldNumber;
const int Range::kNumericRangesFieldNumber;
const int Range::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Range::Range()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2ftypes_2frange_2eproto::scc_info_Range.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.types.Range)
}
Range::Range(const Range& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      numeric_ranges_(from.numeric_ranges_),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parameter_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parameter_name().size() > 0) {
    parameter_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parameter_name_);
  }
  // @@protoc_insertion_point(copy_constructor:metamoto.types.Range)
}

void Range::SharedCtor() {
  parameter_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Range::~Range() {
  // @@protoc_insertion_point(destructor:metamoto.types.Range)
  SharedDtor();
}

void Range::SharedDtor() {
  parameter_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Range::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Range::descriptor() {
  ::protobuf_metamoto_2ftypes_2frange_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2frange_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Range& Range::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2ftypes_2frange_2eproto::scc_info_Range.base);
  return *internal_default_instance();
}


void Range::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.types.Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  numeric_ranges_.Clear();
  values_.Clear();
  parameter_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Range::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.types.Range)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string parameter_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parameter_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parameter_name().data(), static_cast<int>(this->parameter_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.types.Range.parameter_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .metamoto.types.NumericRange numeric_ranges = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_numeric_ranges()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Value values = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.types.Range)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.types.Range)
  return false;
#undef DO_
}

void Range::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.types.Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parameter_name = 1;
  if (this->parameter_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parameter_name().data(), static_cast<int>(this->parameter_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.Range.parameter_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->parameter_name(), output);
  }

  // repeated .metamoto.types.NumericRange numeric_ranges = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->numeric_ranges_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->numeric_ranges(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.Value values = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->values_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->values(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.types.Range)
}

::google::protobuf::uint8* Range::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.types.Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parameter_name = 1;
  if (this->parameter_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parameter_name().data(), static_cast<int>(this->parameter_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.types.Range.parameter_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->parameter_name(), target);
  }

  // repeated .metamoto.types.NumericRange numeric_ranges = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->numeric_ranges_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->numeric_ranges(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.Value values = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->values_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->values(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.types.Range)
  return target;
}

size_t Range::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.types.Range)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .metamoto.types.NumericRange numeric_ranges = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->numeric_ranges_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->numeric_ranges(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Value values = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->values_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->values(static_cast<int>(i)));
    }
  }

  // string parameter_name = 1;
  if (this->parameter_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parameter_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Range::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.types.Range)
  GOOGLE_DCHECK_NE(&from, this);
  const Range* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Range>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.types.Range)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.types.Range)
    MergeFrom(*source);
  }
}

void Range::MergeFrom(const Range& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.types.Range)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  numeric_ranges_.MergeFrom(from.numeric_ranges_);
  values_.MergeFrom(from.values_);
  if (from.parameter_name().size() > 0) {

    parameter_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parameter_name_);
  }
}

void Range::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.types.Range)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Range::CopyFrom(const Range& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.types.Range)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Range::IsInitialized() const {
  return true;
}

void Range::Swap(Range* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Range::InternalSwap(Range* other) {
  using std::swap;
  CastToBase(&numeric_ranges_)->InternalSwap(CastToBase(&other->numeric_ranges_));
  CastToBase(&values_)->InternalSwap(CastToBase(&other->values_));
  parameter_name_.Swap(&other->parameter_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Range::GetMetadata() const {
  protobuf_metamoto_2ftypes_2frange_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2frange_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Parameter::InitAsDefaultInstance() {
  ::metamoto::types::_Parameter_default_instance_._instance.get_mutable()->range_ = const_cast< ::metamoto::types::Range*>(
      ::metamoto::types::Range::internal_default_instance());
  ::metamoto::types::_Parameter_default_instance_._instance.get_mutable()->selected_ = const_cast< ::metamoto::types::Range*>(
      ::metamoto::types::Range::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Parameter::kRangeFieldNumber;
const int Parameter::kSelectedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Parameter::Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2ftypes_2frange_2eproto::scc_info_Parameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.types.Parameter)
}
Parameter::Parameter(const Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_range()) {
    range_ = new ::metamoto::types::Range(*from.range_);
  } else {
    range_ = NULL;
  }
  if (from.has_selected()) {
    selected_ = new ::metamoto::types::Range(*from.selected_);
  } else {
    selected_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:metamoto.types.Parameter)
}

void Parameter::SharedCtor() {
  ::memset(&range_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&selected_) -
      reinterpret_cast<char*>(&range_)) + sizeof(selected_));
}

Parameter::~Parameter() {
  // @@protoc_insertion_point(destructor:metamoto.types.Parameter)
  SharedDtor();
}

void Parameter::SharedDtor() {
  if (this != internal_default_instance()) delete range_;
  if (this != internal_default_instance()) delete selected_;
}

void Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Parameter::descriptor() {
  ::protobuf_metamoto_2ftypes_2frange_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2frange_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Parameter& Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2ftypes_2frange_2eproto::scc_info_Parameter.base);
  return *internal_default_instance();
}


void Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.types.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && range_ != NULL) {
    delete range_;
  }
  range_ = NULL;
  if (GetArenaNoVirtual() == NULL && selected_ != NULL) {
    delete selected_;
  }
  selected_ = NULL;
  _internal_metadata_.Clear();
}

bool Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.types.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .metamoto.types.Range range = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.Range selected = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_selected()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.types.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.types.Parameter)
  return false;
#undef DO_
}

void Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.types.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .metamoto.types.Range range = 1;
  if (this->has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_range(), output);
  }

  // .metamoto.types.Range selected = 2;
  if (this->has_selected()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_selected(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.types.Parameter)
}

::google::protobuf::uint8* Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.types.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .metamoto.types.Range range = 1;
  if (this->has_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_range(), deterministic, target);
  }

  // .metamoto.types.Range selected = 2;
  if (this->has_selected()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_selected(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.types.Parameter)
  return target;
}

size_t Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.types.Parameter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .metamoto.types.Range range = 1;
  if (this->has_range()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *range_);
  }

  // .metamoto.types.Range selected = 2;
  if (this->has_selected()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *selected_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.types.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.types.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.types.Parameter)
    MergeFrom(*source);
  }
}

void Parameter::MergeFrom(const Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.types.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_range()) {
    mutable_range()->::metamoto::types::Range::MergeFrom(from.range());
  }
  if (from.has_selected()) {
    mutable_selected()->::metamoto::types::Range::MergeFrom(from.selected());
  }
}

void Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.types.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Parameter::CopyFrom(const Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.types.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Parameter::IsInitialized() const {
  return true;
}

void Parameter::Swap(Parameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Parameter::InternalSwap(Parameter* other) {
  using std::swap;
  swap(range_, other->range_);
  swap(selected_, other->selected_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Parameter::GetMetadata() const {
  protobuf_metamoto_2ftypes_2frange_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2ftypes_2frange_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace types
}  // namespace metamoto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::types::NumericRange* Arena::CreateMaybeMessage< ::metamoto::types::NumericRange >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::types::NumericRange >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::types::Range* Arena::CreateMaybeMessage< ::metamoto::types::Range >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::types::Range >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::types::Parameter* Arena::CreateMaybeMessage< ::metamoto::types::Parameter >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::types::Parameter >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
