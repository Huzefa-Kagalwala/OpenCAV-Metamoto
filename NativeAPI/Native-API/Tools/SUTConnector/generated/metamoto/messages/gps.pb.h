// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metamoto/messages/gps.proto

#ifndef PROTOBUF_INCLUDED_metamoto_2fmessages_2fgps_2eproto
#define PROTOBUF_INCLUDED_metamoto_2fmessages_2fgps_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "metamoto/types/geo_coordinates.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2fmessages_2fgps_2eproto 

namespace protobuf_metamoto_2fmessages_2fgps_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_metamoto_2fmessages_2fgps_2eproto
namespace metamoto {
namespace messages {
class GPS;
class GPSDefaultTypeInternal;
extern GPSDefaultTypeInternal _GPS_default_instance_;
}  // namespace messages
}  // namespace metamoto
namespace google {
namespace protobuf {
template<> ::metamoto::messages::GPS* Arena::CreateMaybeMessage<::metamoto::messages::GPS>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace metamoto {
namespace messages {

// ===================================================================

class GPS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metamoto.messages.GPS) */ {
 public:
  GPS();
  virtual ~GPS();

  GPS(const GPS& from);

  inline GPS& operator=(const GPS& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GPS(GPS&& from) noexcept
    : GPS() {
    *this = ::std::move(from);
  }

  inline GPS& operator=(GPS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GPS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GPS* internal_default_instance() {
    return reinterpret_cast<const GPS*>(
               &_GPS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(GPS* other);
  friend void swap(GPS& a, GPS& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GPS* New() const final {
    return CreateMaybeMessage<GPS>(NULL);
  }

  GPS* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GPS>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GPS& from);
  void MergeFrom(const GPS& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GPS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .metamoto.types.GeoCoordinates coordinate = 1;
  bool has_coordinate() const;
  void clear_coordinate();
  static const int kCoordinateFieldNumber = 1;
  private:
  const ::metamoto::types::GeoCoordinates& _internal_coordinate() const;
  public:
  const ::metamoto::types::GeoCoordinates& coordinate() const;
  ::metamoto::types::GeoCoordinates* release_coordinate();
  ::metamoto::types::GeoCoordinates* mutable_coordinate();
  void set_allocated_coordinate(::metamoto::types::GeoCoordinates* coordinate);

  // @@protoc_insertion_point(class_scope:metamoto.messages.GPS)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::metamoto::types::GeoCoordinates* coordinate_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_metamoto_2fmessages_2fgps_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GPS

// .metamoto.types.GeoCoordinates coordinate = 1;
inline bool GPS::has_coordinate() const {
  return this != internal_default_instance() && coordinate_ != NULL;
}
inline const ::metamoto::types::GeoCoordinates& GPS::_internal_coordinate() const {
  return *coordinate_;
}
inline const ::metamoto::types::GeoCoordinates& GPS::coordinate() const {
  const ::metamoto::types::GeoCoordinates* p = coordinate_;
  // @@protoc_insertion_point(field_get:metamoto.messages.GPS.coordinate)
  return p != NULL ? *p : *reinterpret_cast<const ::metamoto::types::GeoCoordinates*>(
      &::metamoto::types::_GeoCoordinates_default_instance_);
}
inline ::metamoto::types::GeoCoordinates* GPS::release_coordinate() {
  // @@protoc_insertion_point(field_release:metamoto.messages.GPS.coordinate)
  
  ::metamoto::types::GeoCoordinates* temp = coordinate_;
  coordinate_ = NULL;
  return temp;
}
inline ::metamoto::types::GeoCoordinates* GPS::mutable_coordinate() {
  
  if (coordinate_ == NULL) {
    auto* p = CreateMaybeMessage<::metamoto::types::GeoCoordinates>(GetArenaNoVirtual());
    coordinate_ = p;
  }
  // @@protoc_insertion_point(field_mutable:metamoto.messages.GPS.coordinate)
  return coordinate_;
}
inline void GPS::set_allocated_coordinate(::metamoto::types::GeoCoordinates* coordinate) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(coordinate_);
  }
  if (coordinate) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      coordinate = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, coordinate, submessage_arena);
    }
    
  } else {
    
  }
  coordinate_ = coordinate;
  // @@protoc_insertion_point(field_set_allocated:metamoto.messages.GPS.coordinate)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace messages
}  // namespace metamoto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_metamoto_2fmessages_2fgps_2eproto
