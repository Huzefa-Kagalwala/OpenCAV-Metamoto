// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metamoto/messages/visualization.proto

#include "metamoto/messages/visualization.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_metamoto_2fmessages_2fvisualization_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2fmessages_2fvisualization_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Visualization;
}  // namespace protobuf_metamoto_2fmessages_2fvisualization_2eproto
namespace protobuf_metamoto_2ftypes_2fbounding_5fbox_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fbounding_5fbox_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_BoundingBox;
}  // namespace protobuf_metamoto_2ftypes_2fbounding_5fbox_2eproto
namespace protobuf_metamoto_2ftypes_2fvisual_5fpath_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fvisual_5fpath_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_VisualPath;
}  // namespace protobuf_metamoto_2ftypes_2fvisual_5fpath_2eproto
namespace metamoto {
namespace messages {
class VisualizationListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VisualizationList>
      _instance;
} _VisualizationList_default_instance_;
class VisualizationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Visualization>
      _instance;
  const ::metamoto::types::BoundingBox* box_;
  const ::metamoto::types::VisualPath* path_;
} _Visualization_default_instance_;
}  // namespace messages
}  // namespace metamoto
namespace protobuf_metamoto_2fmessages_2fvisualization_2eproto {
static void InitDefaultsVisualizationList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::messages::_VisualizationList_default_instance_;
    new (ptr) ::metamoto::messages::VisualizationList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::messages::VisualizationList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VisualizationList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVisualizationList}, {
      &protobuf_metamoto_2fmessages_2fvisualization_2eproto::scc_info_Visualization.base,}};

static void InitDefaultsVisualization() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::messages::_Visualization_default_instance_;
    new (ptr) ::metamoto::messages::Visualization();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::messages::Visualization::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Visualization =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsVisualization}, {
      &protobuf_metamoto_2ftypes_2fbounding_5fbox_2eproto::scc_info_BoundingBox.base,
      &protobuf_metamoto_2ftypes_2fvisual_5fpath_2eproto::scc_info_VisualPath.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_VisualizationList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Visualization.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::VisualizationList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::VisualizationList, visual_messages_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::Visualization, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::Visualization, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::Visualization, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::Visualization, frame_),
  offsetof(::metamoto::messages::VisualizationDefaultTypeInternal, box_),
  offsetof(::metamoto::messages::VisualizationDefaultTypeInternal, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::Visualization, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::Visualization, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::Visualization, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::Visualization, path_type_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::metamoto::messages::VisualizationList)},
  { 6, -1, sizeof(::metamoto::messages::Visualization)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::messages::_VisualizationList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::messages::_Visualization_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "metamoto/messages/visualization.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n%metamoto/messages/visualization.proto\022"
      "\021metamoto.messages\032!metamoto/types/enume"
      "rations.proto\032!metamoto/types/bounding_b"
      "ox.proto\032 metamoto/types/visual_path.pro"
      "to\"N\n\021VisualizationList\0229\n\017visual_messag"
      "es\030\001 \003(\0132 .metamoto.messages.Visualizati"
      "on\"\347\001\n\rVisualization\022\014\n\004time\030\001 \001(\001\022-\n\005fr"
      "ame\030\002 \001(\0162\036.metamoto.types.ReferenceFram"
      "e\022*\n\003box\030\003 \001(\0132\033.metamoto.types.Bounding"
      "BoxH\000\022*\n\004path\030\004 \001(\0132\032.metamoto.types.Vis"
      "ualPathH\000\022\r\n\005label\030\005 \001(\t\022\023\n\013description\030"
      "\007 \001(\t\022\020\n\010duration\030\010 \001(\001B\013\n\tpath_typeB\024\252\002"
      "\021Metamoto.Messagesb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 506);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "metamoto/messages/visualization.proto", &protobuf_RegisterTypes);
  ::protobuf_metamoto_2ftypes_2fenumerations_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2fbounding_5fbox_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2fvisual_5fpath_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_metamoto_2fmessages_2fvisualization_2eproto
namespace metamoto {
namespace messages {

// ===================================================================

void VisualizationList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VisualizationList::kVisualMessagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VisualizationList::VisualizationList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fmessages_2fvisualization_2eproto::scc_info_VisualizationList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.messages.VisualizationList)
}
VisualizationList::VisualizationList(const VisualizationList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      visual_messages_(from.visual_messages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:metamoto.messages.VisualizationList)
}

void VisualizationList::SharedCtor() {
}

VisualizationList::~VisualizationList() {
  // @@protoc_insertion_point(destructor:metamoto.messages.VisualizationList)
  SharedDtor();
}

void VisualizationList::SharedDtor() {
}

void VisualizationList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VisualizationList::descriptor() {
  ::protobuf_metamoto_2fmessages_2fvisualization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fmessages_2fvisualization_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VisualizationList& VisualizationList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fmessages_2fvisualization_2eproto::scc_info_VisualizationList.base);
  return *internal_default_instance();
}


void VisualizationList::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.messages.VisualizationList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  visual_messages_.Clear();
  _internal_metadata_.Clear();
}

bool VisualizationList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.messages.VisualizationList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .metamoto.messages.Visualization visual_messages = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_visual_messages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.messages.VisualizationList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.messages.VisualizationList)
  return false;
#undef DO_
}

void VisualizationList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.messages.VisualizationList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .metamoto.messages.Visualization visual_messages = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->visual_messages_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->visual_messages(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.messages.VisualizationList)
}

::google::protobuf::uint8* VisualizationList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.messages.VisualizationList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .metamoto.messages.Visualization visual_messages = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->visual_messages_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->visual_messages(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.messages.VisualizationList)
  return target;
}

size_t VisualizationList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.messages.VisualizationList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .metamoto.messages.Visualization visual_messages = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->visual_messages_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->visual_messages(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VisualizationList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.messages.VisualizationList)
  GOOGLE_DCHECK_NE(&from, this);
  const VisualizationList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VisualizationList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.messages.VisualizationList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.messages.VisualizationList)
    MergeFrom(*source);
  }
}

void VisualizationList::MergeFrom(const VisualizationList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.messages.VisualizationList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  visual_messages_.MergeFrom(from.visual_messages_);
}

void VisualizationList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.messages.VisualizationList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VisualizationList::CopyFrom(const VisualizationList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.messages.VisualizationList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VisualizationList::IsInitialized() const {
  return true;
}

void VisualizationList::Swap(VisualizationList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VisualizationList::InternalSwap(VisualizationList* other) {
  using std::swap;
  CastToBase(&visual_messages_)->InternalSwap(CastToBase(&other->visual_messages_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VisualizationList::GetMetadata() const {
  protobuf_metamoto_2fmessages_2fvisualization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fmessages_2fvisualization_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Visualization::InitAsDefaultInstance() {
  ::metamoto::messages::_Visualization_default_instance_.box_ = const_cast< ::metamoto::types::BoundingBox*>(
      ::metamoto::types::BoundingBox::internal_default_instance());
  ::metamoto::messages::_Visualization_default_instance_.path_ = const_cast< ::metamoto::types::VisualPath*>(
      ::metamoto::types::VisualPath::internal_default_instance());
}
void Visualization::set_allocated_box(::metamoto::types::BoundingBox* box) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_path_type();
  if (box) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      box = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, box, submessage_arena);
    }
    set_has_box();
    path_type_.box_ = box;
  }
  // @@protoc_insertion_point(field_set_allocated:metamoto.messages.Visualization.box)
}
void Visualization::clear_box() {
  if (has_box()) {
    delete path_type_.box_;
    clear_has_path_type();
  }
}
void Visualization::set_allocated_path(::metamoto::types::VisualPath* path) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_path_type();
  if (path) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      path = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, path, submessage_arena);
    }
    set_has_path();
    path_type_.path_ = path;
  }
  // @@protoc_insertion_point(field_set_allocated:metamoto.messages.Visualization.path)
}
void Visualization::clear_path() {
  if (has_path()) {
    delete path_type_.path_;
    clear_has_path_type();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Visualization::kTimeFieldNumber;
const int Visualization::kFrameFieldNumber;
const int Visualization::kBoxFieldNumber;
const int Visualization::kPathFieldNumber;
const int Visualization::kLabelFieldNumber;
const int Visualization::kDescriptionFieldNumber;
const int Visualization::kDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Visualization::Visualization()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fmessages_2fvisualization_2eproto::scc_info_Visualization.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.messages.Visualization)
}
Visualization::Visualization(const Visualization& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.label().size() > 0) {
    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&time_)) + sizeof(duration_));
  clear_has_path_type();
  switch (from.path_type_case()) {
    case kBox: {
      mutable_box()->::metamoto::types::BoundingBox::MergeFrom(from.box());
      break;
    }
    case kPath: {
      mutable_path()->::metamoto::types::VisualPath::MergeFrom(from.path());
      break;
    }
    case PATH_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:metamoto.messages.Visualization)
}

void Visualization::SharedCtor() {
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&time_)) + sizeof(duration_));
  clear_has_path_type();
}

Visualization::~Visualization() {
  // @@protoc_insertion_point(destructor:metamoto.messages.Visualization)
  SharedDtor();
}

void Visualization::SharedDtor() {
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_path_type()) {
    clear_path_type();
  }
}

void Visualization::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Visualization::descriptor() {
  ::protobuf_metamoto_2fmessages_2fvisualization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fmessages_2fvisualization_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Visualization& Visualization::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fmessages_2fvisualization_2eproto::scc_info_Visualization.base);
  return *internal_default_instance();
}


void Visualization::clear_path_type() {
// @@protoc_insertion_point(one_of_clear_start:metamoto.messages.Visualization)
  switch (path_type_case()) {
    case kBox: {
      delete path_type_.box_;
      break;
    }
    case kPath: {
      delete path_type_.path_;
      break;
    }
    case PATH_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PATH_TYPE_NOT_SET;
}


void Visualization::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.messages.Visualization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&time_)) + sizeof(duration_));
  clear_path_type();
  _internal_metadata_.Clear();
}

bool Visualization::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.messages.Visualization)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.ReferenceFrame frame = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_frame(static_cast< ::metamoto::types::ReferenceFrame >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.BoundingBox box = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_box()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.VisualPath path = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string label = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label().data(), static_cast<int>(this->label().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.messages.Visualization.label"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "metamoto.messages.Visualization.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double duration = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.messages.Visualization)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.messages.Visualization)
  return false;
#undef DO_
}

void Visualization::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.messages.Visualization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->time(), output);
  }

  // .metamoto.types.ReferenceFrame frame = 2;
  if (this->frame() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->frame(), output);
  }

  // .metamoto.types.BoundingBox box = 3;
  if (has_box()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_box(), output);
  }

  // .metamoto.types.VisualPath path = 4;
  if (has_path()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_path(), output);
  }

  // string label = 5;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.messages.Visualization.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->label(), output);
  }

  // string description = 7;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.messages.Visualization.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->description(), output);
  }

  // double duration = 8;
  if (this->duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->duration(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.messages.Visualization)
}

::google::protobuf::uint8* Visualization::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.messages.Visualization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->time(), target);
  }

  // .metamoto.types.ReferenceFrame frame = 2;
  if (this->frame() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->frame(), target);
  }

  // .metamoto.types.BoundingBox box = 3;
  if (has_box()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_box(), deterministic, target);
  }

  // .metamoto.types.VisualPath path = 4;
  if (has_path()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_path(), deterministic, target);
  }

  // string label = 5;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), static_cast<int>(this->label().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.messages.Visualization.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->label(), target);
  }

  // string description = 7;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "metamoto.messages.Visualization.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->description(), target);
  }

  // double duration = 8;
  if (this->duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->duration(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.messages.Visualization)
  return target;
}

size_t Visualization::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.messages.Visualization)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string label = 5;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());
  }

  // string description = 7;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // double time = 1;
  if (this->time() != 0) {
    total_size += 1 + 8;
  }

  // .metamoto.types.ReferenceFrame frame = 2;
  if (this->frame() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->frame());
  }

  // double duration = 8;
  if (this->duration() != 0) {
    total_size += 1 + 8;
  }

  switch (path_type_case()) {
    // .metamoto.types.BoundingBox box = 3;
    case kBox: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *path_type_.box_);
      break;
    }
    // .metamoto.types.VisualPath path = 4;
    case kPath: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *path_type_.path_);
      break;
    }
    case PATH_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Visualization::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.messages.Visualization)
  GOOGLE_DCHECK_NE(&from, this);
  const Visualization* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Visualization>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.messages.Visualization)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.messages.Visualization)
    MergeFrom(*source);
  }
}

void Visualization::MergeFrom(const Visualization& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.messages.Visualization)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.label().size() > 0) {

    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.frame() != 0) {
    set_frame(from.frame());
  }
  if (from.duration() != 0) {
    set_duration(from.duration());
  }
  switch (from.path_type_case()) {
    case kBox: {
      mutable_box()->::metamoto::types::BoundingBox::MergeFrom(from.box());
      break;
    }
    case kPath: {
      mutable_path()->::metamoto::types::VisualPath::MergeFrom(from.path());
      break;
    }
    case PATH_TYPE_NOT_SET: {
      break;
    }
  }
}

void Visualization::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.messages.Visualization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Visualization::CopyFrom(const Visualization& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.messages.Visualization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Visualization::IsInitialized() const {
  return true;
}

void Visualization::Swap(Visualization* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Visualization::InternalSwap(Visualization* other) {
  using std::swap;
  label_.Swap(&other->label_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(time_, other->time_);
  swap(frame_, other->frame_);
  swap(duration_, other->duration_);
  swap(path_type_, other->path_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Visualization::GetMetadata() const {
  protobuf_metamoto_2fmessages_2fvisualization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fmessages_2fvisualization_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace messages
}  // namespace metamoto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::messages::VisualizationList* Arena::CreateMaybeMessage< ::metamoto::messages::VisualizationList >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::messages::VisualizationList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::messages::Visualization* Arena::CreateMaybeMessage< ::metamoto::messages::Visualization >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::messages::Visualization >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
