// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metamoto/messages/vehicle_controls.proto

#ifndef PROTOBUF_INCLUDED_metamoto_2fmessages_2fvehicle_5fcontrols_2eproto
#define PROTOBUF_INCLUDED_metamoto_2fmessages_2fvehicle_5fcontrols_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/wrappers.pb.h>
#include "metamoto/types/vehicle.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2fmessages_2fvehicle_5fcontrols_2eproto 

namespace protobuf_metamoto_2fmessages_2fvehicle_5fcontrols_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_metamoto_2fmessages_2fvehicle_5fcontrols_2eproto
namespace metamoto {
namespace messages {
class VehicleControls;
class VehicleControlsDefaultTypeInternal;
extern VehicleControlsDefaultTypeInternal _VehicleControls_default_instance_;
class VehicleControls_WheelControl;
class VehicleControls_WheelControlDefaultTypeInternal;
extern VehicleControls_WheelControlDefaultTypeInternal _VehicleControls_WheelControl_default_instance_;
}  // namespace messages
}  // namespace metamoto
namespace google {
namespace protobuf {
template<> ::metamoto::messages::VehicleControls* Arena::CreateMaybeMessage<::metamoto::messages::VehicleControls>(Arena*);
template<> ::metamoto::messages::VehicleControls_WheelControl* Arena::CreateMaybeMessage<::metamoto::messages::VehicleControls_WheelControl>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace metamoto {
namespace messages {

// ===================================================================

class VehicleControls_WheelControl : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metamoto.messages.VehicleControls.WheelControl) */ {
 public:
  VehicleControls_WheelControl();
  virtual ~VehicleControls_WheelControl();

  VehicleControls_WheelControl(const VehicleControls_WheelControl& from);

  inline VehicleControls_WheelControl& operator=(const VehicleControls_WheelControl& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleControls_WheelControl(VehicleControls_WheelControl&& from) noexcept
    : VehicleControls_WheelControl() {
    *this = ::std::move(from);
  }

  inline VehicleControls_WheelControl& operator=(VehicleControls_WheelControl&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleControls_WheelControl& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleControls_WheelControl* internal_default_instance() {
    return reinterpret_cast<const VehicleControls_WheelControl*>(
               &_VehicleControls_WheelControl_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(VehicleControls_WheelControl* other);
  friend void swap(VehicleControls_WheelControl& a, VehicleControls_WheelControl& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleControls_WheelControl* New() const final {
    return CreateMaybeMessage<VehicleControls_WheelControl>(NULL);
  }

  VehicleControls_WheelControl* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VehicleControls_WheelControl>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VehicleControls_WheelControl& from);
  void MergeFrom(const VehicleControls_WheelControl& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VehicleControls_WheelControl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.FloatValue angular_velocity = 1;
  bool has_angular_velocity() const;
  void clear_angular_velocity();
  static const int kAngularVelocityFieldNumber = 1;
  private:
  const ::google::protobuf::FloatValue& _internal_angular_velocity() const;
  public:
  const ::google::protobuf::FloatValue& angular_velocity() const;
  ::google::protobuf::FloatValue* release_angular_velocity();
  ::google::protobuf::FloatValue* mutable_angular_velocity();
  void set_allocated_angular_velocity(::google::protobuf::FloatValue* angular_velocity);

  // .google.protobuf.FloatValue steer_angle = 2;
  bool has_steer_angle() const;
  void clear_steer_angle();
  static const int kSteerAngleFieldNumber = 2;
  private:
  const ::google::protobuf::FloatValue& _internal_steer_angle() const;
  public:
  const ::google::protobuf::FloatValue& steer_angle() const;
  ::google::protobuf::FloatValue* release_steer_angle();
  ::google::protobuf::FloatValue* mutable_steer_angle();
  void set_allocated_steer_angle(::google::protobuf::FloatValue* steer_angle);

  // @@protoc_insertion_point(class_scope:metamoto.messages.VehicleControls.WheelControl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::FloatValue* angular_velocity_;
  ::google::protobuf::FloatValue* steer_angle_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_metamoto_2fmessages_2fvehicle_5fcontrols_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VehicleControls : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metamoto.messages.VehicleControls) */ {
 public:
  VehicleControls();
  virtual ~VehicleControls();

  VehicleControls(const VehicleControls& from);

  inline VehicleControls& operator=(const VehicleControls& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VehicleControls(VehicleControls&& from) noexcept
    : VehicleControls() {
    *this = ::std::move(from);
  }

  inline VehicleControls& operator=(VehicleControls&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VehicleControls& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleControls* internal_default_instance() {
    return reinterpret_cast<const VehicleControls*>(
               &_VehicleControls_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(VehicleControls* other);
  friend void swap(VehicleControls& a, VehicleControls& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VehicleControls* New() const final {
    return CreateMaybeMessage<VehicleControls>(NULL);
  }

  VehicleControls* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VehicleControls>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VehicleControls& from);
  void MergeFrom(const VehicleControls& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VehicleControls* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef VehicleControls_WheelControl WheelControl;

  // accessors -------------------------------------------------------

  // repeated .metamoto.messages.VehicleControls.WheelControl wheel_controls = 8;
  int wheel_controls_size() const;
  void clear_wheel_controls();
  static const int kWheelControlsFieldNumber = 8;
  ::metamoto::messages::VehicleControls_WheelControl* mutable_wheel_controls(int index);
  ::google::protobuf::RepeatedPtrField< ::metamoto::messages::VehicleControls_WheelControl >*
      mutable_wheel_controls();
  const ::metamoto::messages::VehicleControls_WheelControl& wheel_controls(int index) const;
  ::metamoto::messages::VehicleControls_WheelControl* add_wheel_controls();
  const ::google::protobuf::RepeatedPtrField< ::metamoto::messages::VehicleControls_WheelControl >&
      wheel_controls() const;

  // repeated float other_controls = 10;
  int other_controls_size() const;
  void clear_other_controls();
  static const int kOtherControlsFieldNumber = 10;
  float other_controls(int index) const;
  void set_other_controls(int index, float value);
  void add_other_controls(float value);
  const ::google::protobuf::RepeatedField< float >&
      other_controls() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_other_controls();

  // .google.protobuf.FloatValue steer = 1;
  bool has_steer() const;
  void clear_steer();
  static const int kSteerFieldNumber = 1;
  private:
  const ::google::protobuf::FloatValue& _internal_steer() const;
  public:
  const ::google::protobuf::FloatValue& steer() const;
  ::google::protobuf::FloatValue* release_steer();
  ::google::protobuf::FloatValue* mutable_steer();
  void set_allocated_steer(::google::protobuf::FloatValue* steer);

  // .google.protobuf.FloatValue throttle = 2;
  bool has_throttle() const;
  void clear_throttle();
  static const int kThrottleFieldNumber = 2;
  private:
  const ::google::protobuf::FloatValue& _internal_throttle() const;
  public:
  const ::google::protobuf::FloatValue& throttle() const;
  ::google::protobuf::FloatValue* release_throttle();
  ::google::protobuf::FloatValue* mutable_throttle();
  void set_allocated_throttle(::google::protobuf::FloatValue* throttle);

  // .google.protobuf.FloatValue brake = 3;
  bool has_brake() const;
  void clear_brake();
  static const int kBrakeFieldNumber = 3;
  private:
  const ::google::protobuf::FloatValue& _internal_brake() const;
  public:
  const ::google::protobuf::FloatValue& brake() const;
  ::google::protobuf::FloatValue* release_brake();
  ::google::protobuf::FloatValue* mutable_brake();
  void set_allocated_brake(::google::protobuf::FloatValue* brake);

  // .google.protobuf.FloatValue acceleration = 7;
  bool has_acceleration() const;
  void clear_acceleration();
  static const int kAccelerationFieldNumber = 7;
  private:
  const ::google::protobuf::FloatValue& _internal_acceleration() const;
  public:
  const ::google::protobuf::FloatValue& acceleration() const;
  ::google::protobuf::FloatValue* release_acceleration();
  ::google::protobuf::FloatValue* mutable_acceleration();
  void set_allocated_acceleration(::google::protobuf::FloatValue* acceleration);

  // .metamoto.types.Vehicle.GearSelector gear_selector = 4;
  void clear_gear_selector();
  static const int kGearSelectorFieldNumber = 4;
  ::metamoto::types::Vehicle_GearSelector gear_selector() const;
  void set_gear_selector(::metamoto::types::Vehicle_GearSelector value);

  // .metamoto.types.Vehicle.SignalLightState turn_signal = 5;
  void clear_turn_signal();
  static const int kTurnSignalFieldNumber = 5;
  ::metamoto::types::Vehicle_SignalLightState turn_signal() const;
  void set_turn_signal(::metamoto::types::Vehicle_SignalLightState value);

  // .metamoto.types.Vehicle.LightState head_lights = 6;
  void clear_head_lights();
  static const int kHeadLightsFieldNumber = 6;
  ::metamoto::types::Vehicle_LightState head_lights() const;
  void set_head_lights(::metamoto::types::Vehicle_LightState value);

  // int32 gear = 9;
  void clear_gear();
  static const int kGearFieldNumber = 9;
  ::google::protobuf::int32 gear() const;
  void set_gear(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:metamoto.messages.VehicleControls)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::metamoto::messages::VehicleControls_WheelControl > wheel_controls_;
  ::google::protobuf::RepeatedField< float > other_controls_;
  mutable int _other_controls_cached_byte_size_;
  ::google::protobuf::FloatValue* steer_;
  ::google::protobuf::FloatValue* throttle_;
  ::google::protobuf::FloatValue* brake_;
  ::google::protobuf::FloatValue* acceleration_;
  int gear_selector_;
  int turn_signal_;
  int head_lights_;
  ::google::protobuf::int32 gear_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_metamoto_2fmessages_2fvehicle_5fcontrols_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// VehicleControls_WheelControl

// .google.protobuf.FloatValue angular_velocity = 1;
inline bool VehicleControls_WheelControl::has_angular_velocity() const {
  return this != internal_default_instance() && angular_velocity_ != NULL;
}
inline const ::google::protobuf::FloatValue& VehicleControls_WheelControl::_internal_angular_velocity() const {
  return *angular_velocity_;
}
inline const ::google::protobuf::FloatValue& VehicleControls_WheelControl::angular_velocity() const {
  const ::google::protobuf::FloatValue* p = angular_velocity_;
  // @@protoc_insertion_point(field_get:metamoto.messages.VehicleControls.WheelControl.angular_velocity)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::FloatValue*>(
      &::google::protobuf::_FloatValue_default_instance_);
}
inline ::google::protobuf::FloatValue* VehicleControls_WheelControl::release_angular_velocity() {
  // @@protoc_insertion_point(field_release:metamoto.messages.VehicleControls.WheelControl.angular_velocity)
  
  ::google::protobuf::FloatValue* temp = angular_velocity_;
  angular_velocity_ = NULL;
  return temp;
}
inline ::google::protobuf::FloatValue* VehicleControls_WheelControl::mutable_angular_velocity() {
  
  if (angular_velocity_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::FloatValue>(GetArenaNoVirtual());
    angular_velocity_ = p;
  }
  // @@protoc_insertion_point(field_mutable:metamoto.messages.VehicleControls.WheelControl.angular_velocity)
  return angular_velocity_;
}
inline void VehicleControls_WheelControl::set_allocated_angular_velocity(::google::protobuf::FloatValue* angular_velocity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(angular_velocity_);
  }
  if (angular_velocity) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(angular_velocity)->GetArena();
    if (message_arena != submessage_arena) {
      angular_velocity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, angular_velocity, submessage_arena);
    }
    
  } else {
    
  }
  angular_velocity_ = angular_velocity;
  // @@protoc_insertion_point(field_set_allocated:metamoto.messages.VehicleControls.WheelControl.angular_velocity)
}

// .google.protobuf.FloatValue steer_angle = 2;
inline bool VehicleControls_WheelControl::has_steer_angle() const {
  return this != internal_default_instance() && steer_angle_ != NULL;
}
inline const ::google::protobuf::FloatValue& VehicleControls_WheelControl::_internal_steer_angle() const {
  return *steer_angle_;
}
inline const ::google::protobuf::FloatValue& VehicleControls_WheelControl::steer_angle() const {
  const ::google::protobuf::FloatValue* p = steer_angle_;
  // @@protoc_insertion_point(field_get:metamoto.messages.VehicleControls.WheelControl.steer_angle)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::FloatValue*>(
      &::google::protobuf::_FloatValue_default_instance_);
}
inline ::google::protobuf::FloatValue* VehicleControls_WheelControl::release_steer_angle() {
  // @@protoc_insertion_point(field_release:metamoto.messages.VehicleControls.WheelControl.steer_angle)
  
  ::google::protobuf::FloatValue* temp = steer_angle_;
  steer_angle_ = NULL;
  return temp;
}
inline ::google::protobuf::FloatValue* VehicleControls_WheelControl::mutable_steer_angle() {
  
  if (steer_angle_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::FloatValue>(GetArenaNoVirtual());
    steer_angle_ = p;
  }
  // @@protoc_insertion_point(field_mutable:metamoto.messages.VehicleControls.WheelControl.steer_angle)
  return steer_angle_;
}
inline void VehicleControls_WheelControl::set_allocated_steer_angle(::google::protobuf::FloatValue* steer_angle) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(steer_angle_);
  }
  if (steer_angle) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(steer_angle)->GetArena();
    if (message_arena != submessage_arena) {
      steer_angle = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, steer_angle, submessage_arena);
    }
    
  } else {
    
  }
  steer_angle_ = steer_angle;
  // @@protoc_insertion_point(field_set_allocated:metamoto.messages.VehicleControls.WheelControl.steer_angle)
}

// -------------------------------------------------------------------

// VehicleControls

// .google.protobuf.FloatValue steer = 1;
inline bool VehicleControls::has_steer() const {
  return this != internal_default_instance() && steer_ != NULL;
}
inline const ::google::protobuf::FloatValue& VehicleControls::_internal_steer() const {
  return *steer_;
}
inline const ::google::protobuf::FloatValue& VehicleControls::steer() const {
  const ::google::protobuf::FloatValue* p = steer_;
  // @@protoc_insertion_point(field_get:metamoto.messages.VehicleControls.steer)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::FloatValue*>(
      &::google::protobuf::_FloatValue_default_instance_);
}
inline ::google::protobuf::FloatValue* VehicleControls::release_steer() {
  // @@protoc_insertion_point(field_release:metamoto.messages.VehicleControls.steer)
  
  ::google::protobuf::FloatValue* temp = steer_;
  steer_ = NULL;
  return temp;
}
inline ::google::protobuf::FloatValue* VehicleControls::mutable_steer() {
  
  if (steer_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::FloatValue>(GetArenaNoVirtual());
    steer_ = p;
  }
  // @@protoc_insertion_point(field_mutable:metamoto.messages.VehicleControls.steer)
  return steer_;
}
inline void VehicleControls::set_allocated_steer(::google::protobuf::FloatValue* steer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(steer_);
  }
  if (steer) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(steer)->GetArena();
    if (message_arena != submessage_arena) {
      steer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, steer, submessage_arena);
    }
    
  } else {
    
  }
  steer_ = steer;
  // @@protoc_insertion_point(field_set_allocated:metamoto.messages.VehicleControls.steer)
}

// .google.protobuf.FloatValue throttle = 2;
inline bool VehicleControls::has_throttle() const {
  return this != internal_default_instance() && throttle_ != NULL;
}
inline const ::google::protobuf::FloatValue& VehicleControls::_internal_throttle() const {
  return *throttle_;
}
inline const ::google::protobuf::FloatValue& VehicleControls::throttle() const {
  const ::google::protobuf::FloatValue* p = throttle_;
  // @@protoc_insertion_point(field_get:metamoto.messages.VehicleControls.throttle)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::FloatValue*>(
      &::google::protobuf::_FloatValue_default_instance_);
}
inline ::google::protobuf::FloatValue* VehicleControls::release_throttle() {
  // @@protoc_insertion_point(field_release:metamoto.messages.VehicleControls.throttle)
  
  ::google::protobuf::FloatValue* temp = throttle_;
  throttle_ = NULL;
  return temp;
}
inline ::google::protobuf::FloatValue* VehicleControls::mutable_throttle() {
  
  if (throttle_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::FloatValue>(GetArenaNoVirtual());
    throttle_ = p;
  }
  // @@protoc_insertion_point(field_mutable:metamoto.messages.VehicleControls.throttle)
  return throttle_;
}
inline void VehicleControls::set_allocated_throttle(::google::protobuf::FloatValue* throttle) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(throttle_);
  }
  if (throttle) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(throttle)->GetArena();
    if (message_arena != submessage_arena) {
      throttle = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, throttle, submessage_arena);
    }
    
  } else {
    
  }
  throttle_ = throttle;
  // @@protoc_insertion_point(field_set_allocated:metamoto.messages.VehicleControls.throttle)
}

// .google.protobuf.FloatValue brake = 3;
inline bool VehicleControls::has_brake() const {
  return this != internal_default_instance() && brake_ != NULL;
}
inline const ::google::protobuf::FloatValue& VehicleControls::_internal_brake() const {
  return *brake_;
}
inline const ::google::protobuf::FloatValue& VehicleControls::brake() const {
  const ::google::protobuf::FloatValue* p = brake_;
  // @@protoc_insertion_point(field_get:metamoto.messages.VehicleControls.brake)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::FloatValue*>(
      &::google::protobuf::_FloatValue_default_instance_);
}
inline ::google::protobuf::FloatValue* VehicleControls::release_brake() {
  // @@protoc_insertion_point(field_release:metamoto.messages.VehicleControls.brake)
  
  ::google::protobuf::FloatValue* temp = brake_;
  brake_ = NULL;
  return temp;
}
inline ::google::protobuf::FloatValue* VehicleControls::mutable_brake() {
  
  if (brake_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::FloatValue>(GetArenaNoVirtual());
    brake_ = p;
  }
  // @@protoc_insertion_point(field_mutable:metamoto.messages.VehicleControls.brake)
  return brake_;
}
inline void VehicleControls::set_allocated_brake(::google::protobuf::FloatValue* brake) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(brake_);
  }
  if (brake) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(brake)->GetArena();
    if (message_arena != submessage_arena) {
      brake = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, brake, submessage_arena);
    }
    
  } else {
    
  }
  brake_ = brake;
  // @@protoc_insertion_point(field_set_allocated:metamoto.messages.VehicleControls.brake)
}

// .metamoto.types.Vehicle.GearSelector gear_selector = 4;
inline void VehicleControls::clear_gear_selector() {
  gear_selector_ = 0;
}
inline ::metamoto::types::Vehicle_GearSelector VehicleControls::gear_selector() const {
  // @@protoc_insertion_point(field_get:metamoto.messages.VehicleControls.gear_selector)
  return static_cast< ::metamoto::types::Vehicle_GearSelector >(gear_selector_);
}
inline void VehicleControls::set_gear_selector(::metamoto::types::Vehicle_GearSelector value) {
  
  gear_selector_ = value;
  // @@protoc_insertion_point(field_set:metamoto.messages.VehicleControls.gear_selector)
}

// int32 gear = 9;
inline void VehicleControls::clear_gear() {
  gear_ = 0;
}
inline ::google::protobuf::int32 VehicleControls::gear() const {
  // @@protoc_insertion_point(field_get:metamoto.messages.VehicleControls.gear)
  return gear_;
}
inline void VehicleControls::set_gear(::google::protobuf::int32 value) {
  
  gear_ = value;
  // @@protoc_insertion_point(field_set:metamoto.messages.VehicleControls.gear)
}

// .metamoto.types.Vehicle.SignalLightState turn_signal = 5;
inline void VehicleControls::clear_turn_signal() {
  turn_signal_ = 0;
}
inline ::metamoto::types::Vehicle_SignalLightState VehicleControls::turn_signal() const {
  // @@protoc_insertion_point(field_get:metamoto.messages.VehicleControls.turn_signal)
  return static_cast< ::metamoto::types::Vehicle_SignalLightState >(turn_signal_);
}
inline void VehicleControls::set_turn_signal(::metamoto::types::Vehicle_SignalLightState value) {
  
  turn_signal_ = value;
  // @@protoc_insertion_point(field_set:metamoto.messages.VehicleControls.turn_signal)
}

// .metamoto.types.Vehicle.LightState head_lights = 6;
inline void VehicleControls::clear_head_lights() {
  head_lights_ = 0;
}
inline ::metamoto::types::Vehicle_LightState VehicleControls::head_lights() const {
  // @@protoc_insertion_point(field_get:metamoto.messages.VehicleControls.head_lights)
  return static_cast< ::metamoto::types::Vehicle_LightState >(head_lights_);
}
inline void VehicleControls::set_head_lights(::metamoto::types::Vehicle_LightState value) {
  
  head_lights_ = value;
  // @@protoc_insertion_point(field_set:metamoto.messages.VehicleControls.head_lights)
}

// .google.protobuf.FloatValue acceleration = 7;
inline bool VehicleControls::has_acceleration() const {
  return this != internal_default_instance() && acceleration_ != NULL;
}
inline const ::google::protobuf::FloatValue& VehicleControls::_internal_acceleration() const {
  return *acceleration_;
}
inline const ::google::protobuf::FloatValue& VehicleControls::acceleration() const {
  const ::google::protobuf::FloatValue* p = acceleration_;
  // @@protoc_insertion_point(field_get:metamoto.messages.VehicleControls.acceleration)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::FloatValue*>(
      &::google::protobuf::_FloatValue_default_instance_);
}
inline ::google::protobuf::FloatValue* VehicleControls::release_acceleration() {
  // @@protoc_insertion_point(field_release:metamoto.messages.VehicleControls.acceleration)
  
  ::google::protobuf::FloatValue* temp = acceleration_;
  acceleration_ = NULL;
  return temp;
}
inline ::google::protobuf::FloatValue* VehicleControls::mutable_acceleration() {
  
  if (acceleration_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::FloatValue>(GetArenaNoVirtual());
    acceleration_ = p;
  }
  // @@protoc_insertion_point(field_mutable:metamoto.messages.VehicleControls.acceleration)
  return acceleration_;
}
inline void VehicleControls::set_allocated_acceleration(::google::protobuf::FloatValue* acceleration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(acceleration_);
  }
  if (acceleration) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(acceleration)->GetArena();
    if (message_arena != submessage_arena) {
      acceleration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, acceleration, submessage_arena);
    }
    
  } else {
    
  }
  acceleration_ = acceleration;
  // @@protoc_insertion_point(field_set_allocated:metamoto.messages.VehicleControls.acceleration)
}

// repeated .metamoto.messages.VehicleControls.WheelControl wheel_controls = 8;
inline int VehicleControls::wheel_controls_size() const {
  return wheel_controls_.size();
}
inline void VehicleControls::clear_wheel_controls() {
  wheel_controls_.Clear();
}
inline ::metamoto::messages::VehicleControls_WheelControl* VehicleControls::mutable_wheel_controls(int index) {
  // @@protoc_insertion_point(field_mutable:metamoto.messages.VehicleControls.wheel_controls)
  return wheel_controls_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::metamoto::messages::VehicleControls_WheelControl >*
VehicleControls::mutable_wheel_controls() {
  // @@protoc_insertion_point(field_mutable_list:metamoto.messages.VehicleControls.wheel_controls)
  return &wheel_controls_;
}
inline const ::metamoto::messages::VehicleControls_WheelControl& VehicleControls::wheel_controls(int index) const {
  // @@protoc_insertion_point(field_get:metamoto.messages.VehicleControls.wheel_controls)
  return wheel_controls_.Get(index);
}
inline ::metamoto::messages::VehicleControls_WheelControl* VehicleControls::add_wheel_controls() {
  // @@protoc_insertion_point(field_add:metamoto.messages.VehicleControls.wheel_controls)
  return wheel_controls_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::metamoto::messages::VehicleControls_WheelControl >&
VehicleControls::wheel_controls() const {
  // @@protoc_insertion_point(field_list:metamoto.messages.VehicleControls.wheel_controls)
  return wheel_controls_;
}

// repeated float other_controls = 10;
inline int VehicleControls::other_controls_size() const {
  return other_controls_.size();
}
inline void VehicleControls::clear_other_controls() {
  other_controls_.Clear();
}
inline float VehicleControls::other_controls(int index) const {
  // @@protoc_insertion_point(field_get:metamoto.messages.VehicleControls.other_controls)
  return other_controls_.Get(index);
}
inline void VehicleControls::set_other_controls(int index, float value) {
  other_controls_.Set(index, value);
  // @@protoc_insertion_point(field_set:metamoto.messages.VehicleControls.other_controls)
}
inline void VehicleControls::add_other_controls(float value) {
  other_controls_.Add(value);
  // @@protoc_insertion_point(field_add:metamoto.messages.VehicleControls.other_controls)
}
inline const ::google::protobuf::RepeatedField< float >&
VehicleControls::other_controls() const {
  // @@protoc_insertion_point(field_list:metamoto.messages.VehicleControls.other_controls)
  return other_controls_;
}
inline ::google::protobuf::RepeatedField< float >*
VehicleControls::mutable_other_controls() {
  // @@protoc_insertion_point(field_mutable_list:metamoto.messages.VehicleControls.other_controls)
  return &other_controls_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace messages
}  // namespace metamoto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_metamoto_2fmessages_2fvehicle_5fcontrols_2eproto
