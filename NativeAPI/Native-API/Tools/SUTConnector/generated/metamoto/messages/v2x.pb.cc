// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metamoto/messages/v2x.proto

#include "metamoto/messages/v2x.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_metamoto_2fmessages_2fv2x_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2fmessages_2fv2x_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_V2X_BrakeSystemStatus_BrakeAppliedStatus;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2fmessages_2fv2x_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_V2X_PositionalAccuracy;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2fmessages_2fv2x_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_V2X_BrakeSystemStatus;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2fmessages_2fv2x_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_V2X_BsmPart1;
}  // namespace protobuf_metamoto_2fmessages_2fv2x_2eproto
namespace protobuf_metamoto_2ftypes_2fgeo_5fcoordinates_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fgeo_5fcoordinates_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GeoCoordinates;
}  // namespace protobuf_metamoto_2ftypes_2fgeo_5fcoordinates_2eproto
namespace protobuf_metamoto_2ftypes_2fvector3_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2ftypes_2fvector3_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vector3;
}  // namespace protobuf_metamoto_2ftypes_2fvector3_2eproto
namespace metamoto {
namespace messages {
class V2X_BsmPart1DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<V2X_BsmPart1>
      _instance;
} _V2X_BsmPart1_default_instance_;
class V2X_PositionalAccuracyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<V2X_PositionalAccuracy>
      _instance;
} _V2X_PositionalAccuracy_default_instance_;
class V2X_BrakeSystemStatus_BrakeAppliedStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<V2X_BrakeSystemStatus_BrakeAppliedStatus>
      _instance;
} _V2X_BrakeSystemStatus_BrakeAppliedStatus_default_instance_;
class V2X_BrakeSystemStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<V2X_BrakeSystemStatus>
      _instance;
} _V2X_BrakeSystemStatus_default_instance_;
class V2XDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<V2X>
      _instance;
} _V2X_default_instance_;
}  // namespace messages
}  // namespace metamoto
namespace protobuf_metamoto_2fmessages_2fv2x_2eproto {
static void InitDefaultsV2X_BsmPart1() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::messages::_V2X_BsmPart1_default_instance_;
    new (ptr) ::metamoto::messages::V2X_BsmPart1();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::messages::V2X_BsmPart1::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_V2X_BsmPart1 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsV2X_BsmPart1}, {
      &protobuf_metamoto_2ftypes_2fgeo_5fcoordinates_2eproto::scc_info_GeoCoordinates.base,
      &protobuf_metamoto_2fmessages_2fv2x_2eproto::scc_info_V2X_PositionalAccuracy.base,
      &protobuf_metamoto_2ftypes_2fvector3_2eproto::scc_info_Vector3.base,
      &protobuf_metamoto_2fmessages_2fv2x_2eproto::scc_info_V2X_BrakeSystemStatus.base,}};

static void InitDefaultsV2X_PositionalAccuracy() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::messages::_V2X_PositionalAccuracy_default_instance_;
    new (ptr) ::metamoto::messages::V2X_PositionalAccuracy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::messages::V2X_PositionalAccuracy::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_V2X_PositionalAccuracy =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsV2X_PositionalAccuracy}, {}};

static void InitDefaultsV2X_BrakeSystemStatus_BrakeAppliedStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::messages::_V2X_BrakeSystemStatus_BrakeAppliedStatus_default_instance_;
    new (ptr) ::metamoto::messages::V2X_BrakeSystemStatus_BrakeAppliedStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::messages::V2X_BrakeSystemStatus_BrakeAppliedStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_V2X_BrakeSystemStatus_BrakeAppliedStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsV2X_BrakeSystemStatus_BrakeAppliedStatus}, {}};

static void InitDefaultsV2X_BrakeSystemStatus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::messages::_V2X_BrakeSystemStatus_default_instance_;
    new (ptr) ::metamoto::messages::V2X_BrakeSystemStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::messages::V2X_BrakeSystemStatus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_V2X_BrakeSystemStatus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsV2X_BrakeSystemStatus}, {
      &protobuf_metamoto_2fmessages_2fv2x_2eproto::scc_info_V2X_BrakeSystemStatus_BrakeAppliedStatus.base,}};

static void InitDefaultsV2X() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metamoto::messages::_V2X_default_instance_;
    new (ptr) ::metamoto::messages::V2X();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metamoto::messages::V2X::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_V2X =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsV2X}, {
      &protobuf_metamoto_2fmessages_2fv2x_2eproto::scc_info_V2X_BsmPart1.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_V2X_BsmPart1.base);
  ::google::protobuf::internal::InitSCC(&scc_info_V2X_PositionalAccuracy.base);
  ::google::protobuf::internal::InitSCC(&scc_info_V2X_BrakeSystemStatus_BrakeAppliedStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_V2X_BrakeSystemStatus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_V2X.base);
}

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::V2X_BsmPart1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::V2X_BsmPart1, object_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::V2X_BsmPart1, time_stamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::V2X_BsmPart1, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::V2X_BsmPart1, accuracy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::V2X_BsmPart1, transmission_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::V2X_BsmPart1, linear_velocity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::V2X_BsmPart1, steering_wheel_angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::V2X_BsmPart1, linear_acceleration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::V2X_BsmPart1, yaw_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::V2X_BsmPart1, brakes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::V2X_BsmPart1, vehicle_size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::V2X_PositionalAccuracy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::V2X_PositionalAccuracy, semi_major_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::V2X_PositionalAccuracy, semi_minor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::V2X_PositionalAccuracy, orientation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::V2X_BrakeSystemStatus_BrakeAppliedStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::V2X_BrakeSystemStatus_BrakeAppliedStatus, left_front_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::V2X_BrakeSystemStatus_BrakeAppliedStatus, left_rear_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::V2X_BrakeSystemStatus_BrakeAppliedStatus, right_front_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::V2X_BrakeSystemStatus_BrakeAppliedStatus, right_rear_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::V2X_BrakeSystemStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::V2X_BrakeSystemStatus, wheel_brakes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::V2X_BrakeSystemStatus, traction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::V2X_BrakeSystemStatus, abs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::V2X_BrakeSystemStatus, scs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::V2X_BrakeSystemStatus, brake_boost_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::V2X, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metamoto::messages::V2X, bsm_part_1_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::metamoto::messages::V2X_BsmPart1)},
  { 16, -1, sizeof(::metamoto::messages::V2X_PositionalAccuracy)},
  { 24, -1, sizeof(::metamoto::messages::V2X_BrakeSystemStatus_BrakeAppliedStatus)},
  { 33, -1, sizeof(::metamoto::messages::V2X_BrakeSystemStatus)},
  { 43, -1, sizeof(::metamoto::messages::V2X)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::messages::_V2X_BsmPart1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::messages::_V2X_PositionalAccuracy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::messages::_V2X_BrakeSystemStatus_BrakeAppliedStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::messages::_V2X_BrakeSystemStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metamoto::messages::_V2X_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "metamoto/messages/v2x.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\033metamoto/messages/v2x.proto\022\021metamoto."
      "messages\032\034metamoto/types/vehicle.proto\032\034"
      "metamoto/types/vector3.proto\032$metamoto/t"
      "ypes/geo_coordinates.proto\"\303\013\n\003V2X\0223\n\nbs"
      "m_part_1\030\001 \003(\0132\037.metamoto.messages.V2X.B"
      "smPart1\032\343\003\n\010BsmPart1\022\021\n\tobject_id\030\001 \001(\005\022"
      "\022\n\ntime_stamp\030\002 \001(\001\0220\n\010position\030\003 \001(\0132\036."
      "metamoto.types.GeoCoordinates\022;\n\010accurac"
      "y\030\004 \001(\0132).metamoto.messages.V2X.Position"
      "alAccuracy\022@\n\022transmission_state\030\005 \001(\0162$"
      ".metamoto.types.Vehicle.GearSelector\0220\n\017"
      "linear_velocity\030\006 \001(\0132\027.metamoto.types.V"
      "ector3\022\034\n\024steering_wheel_angle\030\007 \001(\002\0224\n\023"
      "linear_acceleration\030\010 \001(\0132\027.metamoto.typ"
      "es.Vector3\022\020\n\010yaw_rate\030\t \001(\002\0228\n\006brakes\030\n"
      " \001(\0132(.metamoto.messages.V2X.BrakeSystem"
      "Status\022-\n\014vehicle_size\030\013 \001(\0132\027.metamoto."
      "types.Vector3\032Q\n\022PositionalAccuracy\022\022\n\ns"
      "emi_major\030\001 \001(\002\022\022\n\nsemi_minor\030\002 \001(\002\022\023\n\013o"
      "rientation\030\003 \001(\002\032\315\006\n\021BrakeSystemStatus\022Q"
      "\n\014wheel_brakes\030\001 \001(\0132;.metamoto.messages"
      ".V2X.BrakeSystemStatus.BrakeAppliedStatu"
      "s\022O\n\010traction\030\002 \001(\0162=.metamoto.messages."
      "V2X.BrakeSystemStatus.TractionControlSta"
      "te\022I\n\003abs\030\003 \001(\0162<.metamoto.messages.V2X."
      "BrakeSystemStatus.AntiLockBrakeStatus\022L\n"
      "\003scs\030\004 \001(\0162\?.metamoto.messages.V2X.Brake"
      "SystemStatus.StabilityControlStatus\022O\n\013b"
      "rake_boost\030\005 \001(\0162:.metamoto.messages.V2X"
      ".BrakeSystemStatus.BrakeBoostApplied\032d\n\022"
      "BrakeAppliedStatus\022\022\n\nleft_front\030\001 \001(\010\022\021"
      "\n\tleft_rear\030\002 \001(\010\022\023\n\013right_front\030\003 \001(\010\022\022"
      "\n\nright_rear\030\004 \001(\010\"i\n\024TractionControlSta"
      "te\022\030\n\024TRACTION_UNAVAILABLE\020\000\022\020\n\014TRACTION"
      "_OFF\020\001\022\017\n\013TRACTION_ON\020\002\022\024\n\020TRACTION_ENGA"
      "GED\020\003\"T\n\023AntiLockBrakeStatus\022\023\n\017ABS_UNAV"
      "AILABLE\020\000\022\013\n\007ABS_OFF\020\001\022\n\n\006ABS_ON\020\002\022\017\n\013AB"
      "S_ENGAGED\020\003\"C\n\026StabilityControlStatus\022\022\n"
      "\016SC_UNAVAILABLE\020\000\022\n\n\006SC_OFF\020\001\022\t\n\005SC_ON\020\002"
      "\">\n\021BrakeBoostApplied\022\022\n\016BB_UNAVAILABLE\020"
      "\000\022\n\n\006BB_OFF\020\001\022\t\n\005BB_ON\020\002B\024\252\002\021Metamoto.Me"
      "ssagesb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1654);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "metamoto/messages/v2x.proto", &protobuf_RegisterTypes);
  ::protobuf_metamoto_2ftypes_2fvehicle_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2fvector3_2eproto::AddDescriptors();
  ::protobuf_metamoto_2ftypes_2fgeo_5fcoordinates_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_metamoto_2fmessages_2fv2x_2eproto
namespace metamoto {
namespace messages {
const ::google::protobuf::EnumDescriptor* V2X_BrakeSystemStatus_TractionControlState_descriptor() {
  protobuf_metamoto_2fmessages_2fv2x_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metamoto_2fmessages_2fv2x_2eproto::file_level_enum_descriptors[0];
}
bool V2X_BrakeSystemStatus_TractionControlState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const V2X_BrakeSystemStatus_TractionControlState V2X_BrakeSystemStatus::TRACTION_UNAVAILABLE;
const V2X_BrakeSystemStatus_TractionControlState V2X_BrakeSystemStatus::TRACTION_OFF;
const V2X_BrakeSystemStatus_TractionControlState V2X_BrakeSystemStatus::TRACTION_ON;
const V2X_BrakeSystemStatus_TractionControlState V2X_BrakeSystemStatus::TRACTION_ENGAGED;
const V2X_BrakeSystemStatus_TractionControlState V2X_BrakeSystemStatus::TractionControlState_MIN;
const V2X_BrakeSystemStatus_TractionControlState V2X_BrakeSystemStatus::TractionControlState_MAX;
const int V2X_BrakeSystemStatus::TractionControlState_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* V2X_BrakeSystemStatus_AntiLockBrakeStatus_descriptor() {
  protobuf_metamoto_2fmessages_2fv2x_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metamoto_2fmessages_2fv2x_2eproto::file_level_enum_descriptors[1];
}
bool V2X_BrakeSystemStatus_AntiLockBrakeStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const V2X_BrakeSystemStatus_AntiLockBrakeStatus V2X_BrakeSystemStatus::ABS_UNAVAILABLE;
const V2X_BrakeSystemStatus_AntiLockBrakeStatus V2X_BrakeSystemStatus::ABS_OFF;
const V2X_BrakeSystemStatus_AntiLockBrakeStatus V2X_BrakeSystemStatus::ABS_ON;
const V2X_BrakeSystemStatus_AntiLockBrakeStatus V2X_BrakeSystemStatus::ABS_ENGAGED;
const V2X_BrakeSystemStatus_AntiLockBrakeStatus V2X_BrakeSystemStatus::AntiLockBrakeStatus_MIN;
const V2X_BrakeSystemStatus_AntiLockBrakeStatus V2X_BrakeSystemStatus::AntiLockBrakeStatus_MAX;
const int V2X_BrakeSystemStatus::AntiLockBrakeStatus_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* V2X_BrakeSystemStatus_StabilityControlStatus_descriptor() {
  protobuf_metamoto_2fmessages_2fv2x_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metamoto_2fmessages_2fv2x_2eproto::file_level_enum_descriptors[2];
}
bool V2X_BrakeSystemStatus_StabilityControlStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const V2X_BrakeSystemStatus_StabilityControlStatus V2X_BrakeSystemStatus::SC_UNAVAILABLE;
const V2X_BrakeSystemStatus_StabilityControlStatus V2X_BrakeSystemStatus::SC_OFF;
const V2X_BrakeSystemStatus_StabilityControlStatus V2X_BrakeSystemStatus::SC_ON;
const V2X_BrakeSystemStatus_StabilityControlStatus V2X_BrakeSystemStatus::StabilityControlStatus_MIN;
const V2X_BrakeSystemStatus_StabilityControlStatus V2X_BrakeSystemStatus::StabilityControlStatus_MAX;
const int V2X_BrakeSystemStatus::StabilityControlStatus_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* V2X_BrakeSystemStatus_BrakeBoostApplied_descriptor() {
  protobuf_metamoto_2fmessages_2fv2x_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_metamoto_2fmessages_2fv2x_2eproto::file_level_enum_descriptors[3];
}
bool V2X_BrakeSystemStatus_BrakeBoostApplied_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const V2X_BrakeSystemStatus_BrakeBoostApplied V2X_BrakeSystemStatus::BB_UNAVAILABLE;
const V2X_BrakeSystemStatus_BrakeBoostApplied V2X_BrakeSystemStatus::BB_OFF;
const V2X_BrakeSystemStatus_BrakeBoostApplied V2X_BrakeSystemStatus::BB_ON;
const V2X_BrakeSystemStatus_BrakeBoostApplied V2X_BrakeSystemStatus::BrakeBoostApplied_MIN;
const V2X_BrakeSystemStatus_BrakeBoostApplied V2X_BrakeSystemStatus::BrakeBoostApplied_MAX;
const int V2X_BrakeSystemStatus::BrakeBoostApplied_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void V2X_BsmPart1::InitAsDefaultInstance() {
  ::metamoto::messages::_V2X_BsmPart1_default_instance_._instance.get_mutable()->position_ = const_cast< ::metamoto::types::GeoCoordinates*>(
      ::metamoto::types::GeoCoordinates::internal_default_instance());
  ::metamoto::messages::_V2X_BsmPart1_default_instance_._instance.get_mutable()->accuracy_ = const_cast< ::metamoto::messages::V2X_PositionalAccuracy*>(
      ::metamoto::messages::V2X_PositionalAccuracy::internal_default_instance());
  ::metamoto::messages::_V2X_BsmPart1_default_instance_._instance.get_mutable()->linear_velocity_ = const_cast< ::metamoto::types::Vector3*>(
      ::metamoto::types::Vector3::internal_default_instance());
  ::metamoto::messages::_V2X_BsmPart1_default_instance_._instance.get_mutable()->linear_acceleration_ = const_cast< ::metamoto::types::Vector3*>(
      ::metamoto::types::Vector3::internal_default_instance());
  ::metamoto::messages::_V2X_BsmPart1_default_instance_._instance.get_mutable()->brakes_ = const_cast< ::metamoto::messages::V2X_BrakeSystemStatus*>(
      ::metamoto::messages::V2X_BrakeSystemStatus::internal_default_instance());
  ::metamoto::messages::_V2X_BsmPart1_default_instance_._instance.get_mutable()->vehicle_size_ = const_cast< ::metamoto::types::Vector3*>(
      ::metamoto::types::Vector3::internal_default_instance());
}
void V2X_BsmPart1::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
}
void V2X_BsmPart1::clear_linear_velocity() {
  if (GetArenaNoVirtual() == NULL && linear_velocity_ != NULL) {
    delete linear_velocity_;
  }
  linear_velocity_ = NULL;
}
void V2X_BsmPart1::clear_linear_acceleration() {
  if (GetArenaNoVirtual() == NULL && linear_acceleration_ != NULL) {
    delete linear_acceleration_;
  }
  linear_acceleration_ = NULL;
}
void V2X_BsmPart1::clear_vehicle_size() {
  if (GetArenaNoVirtual() == NULL && vehicle_size_ != NULL) {
    delete vehicle_size_;
  }
  vehicle_size_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int V2X_BsmPart1::kObjectIdFieldNumber;
const int V2X_BsmPart1::kTimeStampFieldNumber;
const int V2X_BsmPart1::kPositionFieldNumber;
const int V2X_BsmPart1::kAccuracyFieldNumber;
const int V2X_BsmPart1::kTransmissionStateFieldNumber;
const int V2X_BsmPart1::kLinearVelocityFieldNumber;
const int V2X_BsmPart1::kSteeringWheelAngleFieldNumber;
const int V2X_BsmPart1::kLinearAccelerationFieldNumber;
const int V2X_BsmPart1::kYawRateFieldNumber;
const int V2X_BsmPart1::kBrakesFieldNumber;
const int V2X_BsmPart1::kVehicleSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

V2X_BsmPart1::V2X_BsmPart1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fmessages_2fv2x_2eproto::scc_info_V2X_BsmPart1.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.messages.V2X.BsmPart1)
}
V2X_BsmPart1::V2X_BsmPart1(const V2X_BsmPart1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::metamoto::types::GeoCoordinates(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_accuracy()) {
    accuracy_ = new ::metamoto::messages::V2X_PositionalAccuracy(*from.accuracy_);
  } else {
    accuracy_ = NULL;
  }
  if (from.has_linear_velocity()) {
    linear_velocity_ = new ::metamoto::types::Vector3(*from.linear_velocity_);
  } else {
    linear_velocity_ = NULL;
  }
  if (from.has_linear_acceleration()) {
    linear_acceleration_ = new ::metamoto::types::Vector3(*from.linear_acceleration_);
  } else {
    linear_acceleration_ = NULL;
  }
  if (from.has_brakes()) {
    brakes_ = new ::metamoto::messages::V2X_BrakeSystemStatus(*from.brakes_);
  } else {
    brakes_ = NULL;
  }
  if (from.has_vehicle_size()) {
    vehicle_size_ = new ::metamoto::types::Vector3(*from.vehicle_size_);
  } else {
    vehicle_size_ = NULL;
  }
  ::memcpy(&time_stamp_, &from.time_stamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&yaw_rate_) -
    reinterpret_cast<char*>(&time_stamp_)) + sizeof(yaw_rate_));
  // @@protoc_insertion_point(copy_constructor:metamoto.messages.V2X.BsmPart1)
}

void V2X_BsmPart1::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&yaw_rate_) -
      reinterpret_cast<char*>(&position_)) + sizeof(yaw_rate_));
}

V2X_BsmPart1::~V2X_BsmPart1() {
  // @@protoc_insertion_point(destructor:metamoto.messages.V2X.BsmPart1)
  SharedDtor();
}

void V2X_BsmPart1::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete accuracy_;
  if (this != internal_default_instance()) delete linear_velocity_;
  if (this != internal_default_instance()) delete linear_acceleration_;
  if (this != internal_default_instance()) delete brakes_;
  if (this != internal_default_instance()) delete vehicle_size_;
}

void V2X_BsmPart1::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* V2X_BsmPart1::descriptor() {
  ::protobuf_metamoto_2fmessages_2fv2x_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fmessages_2fv2x_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const V2X_BsmPart1& V2X_BsmPart1::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fmessages_2fv2x_2eproto::scc_info_V2X_BsmPart1.base);
  return *internal_default_instance();
}


void V2X_BsmPart1::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.messages.V2X.BsmPart1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  if (GetArenaNoVirtual() == NULL && accuracy_ != NULL) {
    delete accuracy_;
  }
  accuracy_ = NULL;
  if (GetArenaNoVirtual() == NULL && linear_velocity_ != NULL) {
    delete linear_velocity_;
  }
  linear_velocity_ = NULL;
  if (GetArenaNoVirtual() == NULL && linear_acceleration_ != NULL) {
    delete linear_acceleration_;
  }
  linear_acceleration_ = NULL;
  if (GetArenaNoVirtual() == NULL && brakes_ != NULL) {
    delete brakes_;
  }
  brakes_ = NULL;
  if (GetArenaNoVirtual() == NULL && vehicle_size_ != NULL) {
    delete vehicle_size_;
  }
  vehicle_size_ = NULL;
  ::memset(&time_stamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&yaw_rate_) -
      reinterpret_cast<char*>(&time_stamp_)) + sizeof(yaw_rate_));
  _internal_metadata_.Clear();
}

bool V2X_BsmPart1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.messages.V2X.BsmPart1)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 object_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &object_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double time_stamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_stamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.GeoCoordinates position = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.messages.V2X.PositionalAccuracy accuracy = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_accuracy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.Vehicle.GearSelector transmission_state = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_transmission_state(static_cast< ::metamoto::types::Vehicle_GearSelector >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.Vector3 linear_velocity = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_linear_velocity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float steering_wheel_angle = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &steering_wheel_angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.Vector3 linear_acceleration = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_linear_acceleration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float yaw_rate = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &yaw_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.messages.V2X.BrakeSystemStatus brakes = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_brakes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.types.Vector3 vehicle_size = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vehicle_size()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.messages.V2X.BsmPart1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.messages.V2X.BsmPart1)
  return false;
#undef DO_
}

void V2X_BsmPart1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.messages.V2X.BsmPart1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 object_id = 1;
  if (this->object_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->object_id(), output);
  }

  // double time_stamp = 2;
  if (this->time_stamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->time_stamp(), output);
  }

  // .metamoto.types.GeoCoordinates position = 3;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_position(), output);
  }

  // .metamoto.messages.V2X.PositionalAccuracy accuracy = 4;
  if (this->has_accuracy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_accuracy(), output);
  }

  // .metamoto.types.Vehicle.GearSelector transmission_state = 5;
  if (this->transmission_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->transmission_state(), output);
  }

  // .metamoto.types.Vector3 linear_velocity = 6;
  if (this->has_linear_velocity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_linear_velocity(), output);
  }

  // float steering_wheel_angle = 7;
  if (this->steering_wheel_angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->steering_wheel_angle(), output);
  }

  // .metamoto.types.Vector3 linear_acceleration = 8;
  if (this->has_linear_acceleration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_linear_acceleration(), output);
  }

  // float yaw_rate = 9;
  if (this->yaw_rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->yaw_rate(), output);
  }

  // .metamoto.messages.V2X.BrakeSystemStatus brakes = 10;
  if (this->has_brakes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_brakes(), output);
  }

  // .metamoto.types.Vector3 vehicle_size = 11;
  if (this->has_vehicle_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_vehicle_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.messages.V2X.BsmPart1)
}

::google::protobuf::uint8* V2X_BsmPart1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.messages.V2X.BsmPart1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 object_id = 1;
  if (this->object_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->object_id(), target);
  }

  // double time_stamp = 2;
  if (this->time_stamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->time_stamp(), target);
  }

  // .metamoto.types.GeoCoordinates position = 3;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_position(), deterministic, target);
  }

  // .metamoto.messages.V2X.PositionalAccuracy accuracy = 4;
  if (this->has_accuracy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_accuracy(), deterministic, target);
  }

  // .metamoto.types.Vehicle.GearSelector transmission_state = 5;
  if (this->transmission_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->transmission_state(), target);
  }

  // .metamoto.types.Vector3 linear_velocity = 6;
  if (this->has_linear_velocity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_linear_velocity(), deterministic, target);
  }

  // float steering_wheel_angle = 7;
  if (this->steering_wheel_angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->steering_wheel_angle(), target);
  }

  // .metamoto.types.Vector3 linear_acceleration = 8;
  if (this->has_linear_acceleration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_linear_acceleration(), deterministic, target);
  }

  // float yaw_rate = 9;
  if (this->yaw_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->yaw_rate(), target);
  }

  // .metamoto.messages.V2X.BrakeSystemStatus brakes = 10;
  if (this->has_brakes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_brakes(), deterministic, target);
  }

  // .metamoto.types.Vector3 vehicle_size = 11;
  if (this->has_vehicle_size()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_vehicle_size(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.messages.V2X.BsmPart1)
  return target;
}

size_t V2X_BsmPart1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.messages.V2X.BsmPart1)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .metamoto.types.GeoCoordinates position = 3;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .metamoto.messages.V2X.PositionalAccuracy accuracy = 4;
  if (this->has_accuracy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *accuracy_);
  }

  // .metamoto.types.Vector3 linear_velocity = 6;
  if (this->has_linear_velocity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *linear_velocity_);
  }

  // .metamoto.types.Vector3 linear_acceleration = 8;
  if (this->has_linear_acceleration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *linear_acceleration_);
  }

  // .metamoto.messages.V2X.BrakeSystemStatus brakes = 10;
  if (this->has_brakes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *brakes_);
  }

  // .metamoto.types.Vector3 vehicle_size = 11;
  if (this->has_vehicle_size()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vehicle_size_);
  }

  // double time_stamp = 2;
  if (this->time_stamp() != 0) {
    total_size += 1 + 8;
  }

  // int32 object_id = 1;
  if (this->object_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->object_id());
  }

  // .metamoto.types.Vehicle.GearSelector transmission_state = 5;
  if (this->transmission_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->transmission_state());
  }

  // float steering_wheel_angle = 7;
  if (this->steering_wheel_angle() != 0) {
    total_size += 1 + 4;
  }

  // float yaw_rate = 9;
  if (this->yaw_rate() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void V2X_BsmPart1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.messages.V2X.BsmPart1)
  GOOGLE_DCHECK_NE(&from, this);
  const V2X_BsmPart1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const V2X_BsmPart1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.messages.V2X.BsmPart1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.messages.V2X.BsmPart1)
    MergeFrom(*source);
  }
}

void V2X_BsmPart1::MergeFrom(const V2X_BsmPart1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.messages.V2X.BsmPart1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::metamoto::types::GeoCoordinates::MergeFrom(from.position());
  }
  if (from.has_accuracy()) {
    mutable_accuracy()->::metamoto::messages::V2X_PositionalAccuracy::MergeFrom(from.accuracy());
  }
  if (from.has_linear_velocity()) {
    mutable_linear_velocity()->::metamoto::types::Vector3::MergeFrom(from.linear_velocity());
  }
  if (from.has_linear_acceleration()) {
    mutable_linear_acceleration()->::metamoto::types::Vector3::MergeFrom(from.linear_acceleration());
  }
  if (from.has_brakes()) {
    mutable_brakes()->::metamoto::messages::V2X_BrakeSystemStatus::MergeFrom(from.brakes());
  }
  if (from.has_vehicle_size()) {
    mutable_vehicle_size()->::metamoto::types::Vector3::MergeFrom(from.vehicle_size());
  }
  if (from.time_stamp() != 0) {
    set_time_stamp(from.time_stamp());
  }
  if (from.object_id() != 0) {
    set_object_id(from.object_id());
  }
  if (from.transmission_state() != 0) {
    set_transmission_state(from.transmission_state());
  }
  if (from.steering_wheel_angle() != 0) {
    set_steering_wheel_angle(from.steering_wheel_angle());
  }
  if (from.yaw_rate() != 0) {
    set_yaw_rate(from.yaw_rate());
  }
}

void V2X_BsmPart1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.messages.V2X.BsmPart1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void V2X_BsmPart1::CopyFrom(const V2X_BsmPart1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.messages.V2X.BsmPart1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool V2X_BsmPart1::IsInitialized() const {
  return true;
}

void V2X_BsmPart1::Swap(V2X_BsmPart1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void V2X_BsmPart1::InternalSwap(V2X_BsmPart1* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(accuracy_, other->accuracy_);
  swap(linear_velocity_, other->linear_velocity_);
  swap(linear_acceleration_, other->linear_acceleration_);
  swap(brakes_, other->brakes_);
  swap(vehicle_size_, other->vehicle_size_);
  swap(time_stamp_, other->time_stamp_);
  swap(object_id_, other->object_id_);
  swap(transmission_state_, other->transmission_state_);
  swap(steering_wheel_angle_, other->steering_wheel_angle_);
  swap(yaw_rate_, other->yaw_rate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata V2X_BsmPart1::GetMetadata() const {
  protobuf_metamoto_2fmessages_2fv2x_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fmessages_2fv2x_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void V2X_PositionalAccuracy::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int V2X_PositionalAccuracy::kSemiMajorFieldNumber;
const int V2X_PositionalAccuracy::kSemiMinorFieldNumber;
const int V2X_PositionalAccuracy::kOrientationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

V2X_PositionalAccuracy::V2X_PositionalAccuracy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fmessages_2fv2x_2eproto::scc_info_V2X_PositionalAccuracy.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.messages.V2X.PositionalAccuracy)
}
V2X_PositionalAccuracy::V2X_PositionalAccuracy(const V2X_PositionalAccuracy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&semi_major_, &from.semi_major_,
    static_cast<size_t>(reinterpret_cast<char*>(&orientation_) -
    reinterpret_cast<char*>(&semi_major_)) + sizeof(orientation_));
  // @@protoc_insertion_point(copy_constructor:metamoto.messages.V2X.PositionalAccuracy)
}

void V2X_PositionalAccuracy::SharedCtor() {
  ::memset(&semi_major_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&orientation_) -
      reinterpret_cast<char*>(&semi_major_)) + sizeof(orientation_));
}

V2X_PositionalAccuracy::~V2X_PositionalAccuracy() {
  // @@protoc_insertion_point(destructor:metamoto.messages.V2X.PositionalAccuracy)
  SharedDtor();
}

void V2X_PositionalAccuracy::SharedDtor() {
}

void V2X_PositionalAccuracy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* V2X_PositionalAccuracy::descriptor() {
  ::protobuf_metamoto_2fmessages_2fv2x_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fmessages_2fv2x_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const V2X_PositionalAccuracy& V2X_PositionalAccuracy::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fmessages_2fv2x_2eproto::scc_info_V2X_PositionalAccuracy.base);
  return *internal_default_instance();
}


void V2X_PositionalAccuracy::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.messages.V2X.PositionalAccuracy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&semi_major_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&orientation_) -
      reinterpret_cast<char*>(&semi_major_)) + sizeof(orientation_));
  _internal_metadata_.Clear();
}

bool V2X_PositionalAccuracy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.messages.V2X.PositionalAccuracy)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float semi_major = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &semi_major_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float semi_minor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &semi_minor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float orientation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &orientation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.messages.V2X.PositionalAccuracy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.messages.V2X.PositionalAccuracy)
  return false;
#undef DO_
}

void V2X_PositionalAccuracy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.messages.V2X.PositionalAccuracy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float semi_major = 1;
  if (this->semi_major() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->semi_major(), output);
  }

  // float semi_minor = 2;
  if (this->semi_minor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->semi_minor(), output);
  }

  // float orientation = 3;
  if (this->orientation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->orientation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.messages.V2X.PositionalAccuracy)
}

::google::protobuf::uint8* V2X_PositionalAccuracy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.messages.V2X.PositionalAccuracy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float semi_major = 1;
  if (this->semi_major() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->semi_major(), target);
  }

  // float semi_minor = 2;
  if (this->semi_minor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->semi_minor(), target);
  }

  // float orientation = 3;
  if (this->orientation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->orientation(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.messages.V2X.PositionalAccuracy)
  return target;
}

size_t V2X_PositionalAccuracy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.messages.V2X.PositionalAccuracy)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float semi_major = 1;
  if (this->semi_major() != 0) {
    total_size += 1 + 4;
  }

  // float semi_minor = 2;
  if (this->semi_minor() != 0) {
    total_size += 1 + 4;
  }

  // float orientation = 3;
  if (this->orientation() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void V2X_PositionalAccuracy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.messages.V2X.PositionalAccuracy)
  GOOGLE_DCHECK_NE(&from, this);
  const V2X_PositionalAccuracy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const V2X_PositionalAccuracy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.messages.V2X.PositionalAccuracy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.messages.V2X.PositionalAccuracy)
    MergeFrom(*source);
  }
}

void V2X_PositionalAccuracy::MergeFrom(const V2X_PositionalAccuracy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.messages.V2X.PositionalAccuracy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.semi_major() != 0) {
    set_semi_major(from.semi_major());
  }
  if (from.semi_minor() != 0) {
    set_semi_minor(from.semi_minor());
  }
  if (from.orientation() != 0) {
    set_orientation(from.orientation());
  }
}

void V2X_PositionalAccuracy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.messages.V2X.PositionalAccuracy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void V2X_PositionalAccuracy::CopyFrom(const V2X_PositionalAccuracy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.messages.V2X.PositionalAccuracy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool V2X_PositionalAccuracy::IsInitialized() const {
  return true;
}

void V2X_PositionalAccuracy::Swap(V2X_PositionalAccuracy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void V2X_PositionalAccuracy::InternalSwap(V2X_PositionalAccuracy* other) {
  using std::swap;
  swap(semi_major_, other->semi_major_);
  swap(semi_minor_, other->semi_minor_);
  swap(orientation_, other->orientation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata V2X_PositionalAccuracy::GetMetadata() const {
  protobuf_metamoto_2fmessages_2fv2x_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fmessages_2fv2x_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void V2X_BrakeSystemStatus_BrakeAppliedStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int V2X_BrakeSystemStatus_BrakeAppliedStatus::kLeftFrontFieldNumber;
const int V2X_BrakeSystemStatus_BrakeAppliedStatus::kLeftRearFieldNumber;
const int V2X_BrakeSystemStatus_BrakeAppliedStatus::kRightFrontFieldNumber;
const int V2X_BrakeSystemStatus_BrakeAppliedStatus::kRightRearFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

V2X_BrakeSystemStatus_BrakeAppliedStatus::V2X_BrakeSystemStatus_BrakeAppliedStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fmessages_2fv2x_2eproto::scc_info_V2X_BrakeSystemStatus_BrakeAppliedStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.messages.V2X.BrakeSystemStatus.BrakeAppliedStatus)
}
V2X_BrakeSystemStatus_BrakeAppliedStatus::V2X_BrakeSystemStatus_BrakeAppliedStatus(const V2X_BrakeSystemStatus_BrakeAppliedStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&left_front_, &from.left_front_,
    static_cast<size_t>(reinterpret_cast<char*>(&right_rear_) -
    reinterpret_cast<char*>(&left_front_)) + sizeof(right_rear_));
  // @@protoc_insertion_point(copy_constructor:metamoto.messages.V2X.BrakeSystemStatus.BrakeAppliedStatus)
}

void V2X_BrakeSystemStatus_BrakeAppliedStatus::SharedCtor() {
  ::memset(&left_front_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&right_rear_) -
      reinterpret_cast<char*>(&left_front_)) + sizeof(right_rear_));
}

V2X_BrakeSystemStatus_BrakeAppliedStatus::~V2X_BrakeSystemStatus_BrakeAppliedStatus() {
  // @@protoc_insertion_point(destructor:metamoto.messages.V2X.BrakeSystemStatus.BrakeAppliedStatus)
  SharedDtor();
}

void V2X_BrakeSystemStatus_BrakeAppliedStatus::SharedDtor() {
}

void V2X_BrakeSystemStatus_BrakeAppliedStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* V2X_BrakeSystemStatus_BrakeAppliedStatus::descriptor() {
  ::protobuf_metamoto_2fmessages_2fv2x_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fmessages_2fv2x_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const V2X_BrakeSystemStatus_BrakeAppliedStatus& V2X_BrakeSystemStatus_BrakeAppliedStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fmessages_2fv2x_2eproto::scc_info_V2X_BrakeSystemStatus_BrakeAppliedStatus.base);
  return *internal_default_instance();
}


void V2X_BrakeSystemStatus_BrakeAppliedStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.messages.V2X.BrakeSystemStatus.BrakeAppliedStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&left_front_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&right_rear_) -
      reinterpret_cast<char*>(&left_front_)) + sizeof(right_rear_));
  _internal_metadata_.Clear();
}

bool V2X_BrakeSystemStatus_BrakeAppliedStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.messages.V2X.BrakeSystemStatus.BrakeAppliedStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool left_front = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &left_front_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool left_rear = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &left_rear_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool right_front = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &right_front_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool right_rear = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &right_rear_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.messages.V2X.BrakeSystemStatus.BrakeAppliedStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.messages.V2X.BrakeSystemStatus.BrakeAppliedStatus)
  return false;
#undef DO_
}

void V2X_BrakeSystemStatus_BrakeAppliedStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.messages.V2X.BrakeSystemStatus.BrakeAppliedStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool left_front = 1;
  if (this->left_front() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->left_front(), output);
  }

  // bool left_rear = 2;
  if (this->left_rear() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->left_rear(), output);
  }

  // bool right_front = 3;
  if (this->right_front() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->right_front(), output);
  }

  // bool right_rear = 4;
  if (this->right_rear() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->right_rear(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.messages.V2X.BrakeSystemStatus.BrakeAppliedStatus)
}

::google::protobuf::uint8* V2X_BrakeSystemStatus_BrakeAppliedStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.messages.V2X.BrakeSystemStatus.BrakeAppliedStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool left_front = 1;
  if (this->left_front() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->left_front(), target);
  }

  // bool left_rear = 2;
  if (this->left_rear() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->left_rear(), target);
  }

  // bool right_front = 3;
  if (this->right_front() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->right_front(), target);
  }

  // bool right_rear = 4;
  if (this->right_rear() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->right_rear(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.messages.V2X.BrakeSystemStatus.BrakeAppliedStatus)
  return target;
}

size_t V2X_BrakeSystemStatus_BrakeAppliedStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.messages.V2X.BrakeSystemStatus.BrakeAppliedStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool left_front = 1;
  if (this->left_front() != 0) {
    total_size += 1 + 1;
  }

  // bool left_rear = 2;
  if (this->left_rear() != 0) {
    total_size += 1 + 1;
  }

  // bool right_front = 3;
  if (this->right_front() != 0) {
    total_size += 1 + 1;
  }

  // bool right_rear = 4;
  if (this->right_rear() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void V2X_BrakeSystemStatus_BrakeAppliedStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.messages.V2X.BrakeSystemStatus.BrakeAppliedStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const V2X_BrakeSystemStatus_BrakeAppliedStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const V2X_BrakeSystemStatus_BrakeAppliedStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.messages.V2X.BrakeSystemStatus.BrakeAppliedStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.messages.V2X.BrakeSystemStatus.BrakeAppliedStatus)
    MergeFrom(*source);
  }
}

void V2X_BrakeSystemStatus_BrakeAppliedStatus::MergeFrom(const V2X_BrakeSystemStatus_BrakeAppliedStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.messages.V2X.BrakeSystemStatus.BrakeAppliedStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.left_front() != 0) {
    set_left_front(from.left_front());
  }
  if (from.left_rear() != 0) {
    set_left_rear(from.left_rear());
  }
  if (from.right_front() != 0) {
    set_right_front(from.right_front());
  }
  if (from.right_rear() != 0) {
    set_right_rear(from.right_rear());
  }
}

void V2X_BrakeSystemStatus_BrakeAppliedStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.messages.V2X.BrakeSystemStatus.BrakeAppliedStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void V2X_BrakeSystemStatus_BrakeAppliedStatus::CopyFrom(const V2X_BrakeSystemStatus_BrakeAppliedStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.messages.V2X.BrakeSystemStatus.BrakeAppliedStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool V2X_BrakeSystemStatus_BrakeAppliedStatus::IsInitialized() const {
  return true;
}

void V2X_BrakeSystemStatus_BrakeAppliedStatus::Swap(V2X_BrakeSystemStatus_BrakeAppliedStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void V2X_BrakeSystemStatus_BrakeAppliedStatus::InternalSwap(V2X_BrakeSystemStatus_BrakeAppliedStatus* other) {
  using std::swap;
  swap(left_front_, other->left_front_);
  swap(left_rear_, other->left_rear_);
  swap(right_front_, other->right_front_);
  swap(right_rear_, other->right_rear_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata V2X_BrakeSystemStatus_BrakeAppliedStatus::GetMetadata() const {
  protobuf_metamoto_2fmessages_2fv2x_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fmessages_2fv2x_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void V2X_BrakeSystemStatus::InitAsDefaultInstance() {
  ::metamoto::messages::_V2X_BrakeSystemStatus_default_instance_._instance.get_mutable()->wheel_brakes_ = const_cast< ::metamoto::messages::V2X_BrakeSystemStatus_BrakeAppliedStatus*>(
      ::metamoto::messages::V2X_BrakeSystemStatus_BrakeAppliedStatus::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int V2X_BrakeSystemStatus::kWheelBrakesFieldNumber;
const int V2X_BrakeSystemStatus::kTractionFieldNumber;
const int V2X_BrakeSystemStatus::kAbsFieldNumber;
const int V2X_BrakeSystemStatus::kScsFieldNumber;
const int V2X_BrakeSystemStatus::kBrakeBoostFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

V2X_BrakeSystemStatus::V2X_BrakeSystemStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fmessages_2fv2x_2eproto::scc_info_V2X_BrakeSystemStatus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.messages.V2X.BrakeSystemStatus)
}
V2X_BrakeSystemStatus::V2X_BrakeSystemStatus(const V2X_BrakeSystemStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_wheel_brakes()) {
    wheel_brakes_ = new ::metamoto::messages::V2X_BrakeSystemStatus_BrakeAppliedStatus(*from.wheel_brakes_);
  } else {
    wheel_brakes_ = NULL;
  }
  ::memcpy(&traction_, &from.traction_,
    static_cast<size_t>(reinterpret_cast<char*>(&brake_boost_) -
    reinterpret_cast<char*>(&traction_)) + sizeof(brake_boost_));
  // @@protoc_insertion_point(copy_constructor:metamoto.messages.V2X.BrakeSystemStatus)
}

void V2X_BrakeSystemStatus::SharedCtor() {
  ::memset(&wheel_brakes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&brake_boost_) -
      reinterpret_cast<char*>(&wheel_brakes_)) + sizeof(brake_boost_));
}

V2X_BrakeSystemStatus::~V2X_BrakeSystemStatus() {
  // @@protoc_insertion_point(destructor:metamoto.messages.V2X.BrakeSystemStatus)
  SharedDtor();
}

void V2X_BrakeSystemStatus::SharedDtor() {
  if (this != internal_default_instance()) delete wheel_brakes_;
}

void V2X_BrakeSystemStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* V2X_BrakeSystemStatus::descriptor() {
  ::protobuf_metamoto_2fmessages_2fv2x_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fmessages_2fv2x_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const V2X_BrakeSystemStatus& V2X_BrakeSystemStatus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fmessages_2fv2x_2eproto::scc_info_V2X_BrakeSystemStatus.base);
  return *internal_default_instance();
}


void V2X_BrakeSystemStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.messages.V2X.BrakeSystemStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && wheel_brakes_ != NULL) {
    delete wheel_brakes_;
  }
  wheel_brakes_ = NULL;
  ::memset(&traction_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&brake_boost_) -
      reinterpret_cast<char*>(&traction_)) + sizeof(brake_boost_));
  _internal_metadata_.Clear();
}

bool V2X_BrakeSystemStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.messages.V2X.BrakeSystemStatus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .metamoto.messages.V2X.BrakeSystemStatus.BrakeAppliedStatus wheel_brakes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_wheel_brakes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.messages.V2X.BrakeSystemStatus.TractionControlState traction = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_traction(static_cast< ::metamoto::messages::V2X_BrakeSystemStatus_TractionControlState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.messages.V2X.BrakeSystemStatus.AntiLockBrakeStatus abs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_abs(static_cast< ::metamoto::messages::V2X_BrakeSystemStatus_AntiLockBrakeStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.messages.V2X.BrakeSystemStatus.StabilityControlStatus scs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_scs(static_cast< ::metamoto::messages::V2X_BrakeSystemStatus_StabilityControlStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metamoto.messages.V2X.BrakeSystemStatus.BrakeBoostApplied brake_boost = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_brake_boost(static_cast< ::metamoto::messages::V2X_BrakeSystemStatus_BrakeBoostApplied >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.messages.V2X.BrakeSystemStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.messages.V2X.BrakeSystemStatus)
  return false;
#undef DO_
}

void V2X_BrakeSystemStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.messages.V2X.BrakeSystemStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .metamoto.messages.V2X.BrakeSystemStatus.BrakeAppliedStatus wheel_brakes = 1;
  if (this->has_wheel_brakes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_wheel_brakes(), output);
  }

  // .metamoto.messages.V2X.BrakeSystemStatus.TractionControlState traction = 2;
  if (this->traction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->traction(), output);
  }

  // .metamoto.messages.V2X.BrakeSystemStatus.AntiLockBrakeStatus abs = 3;
  if (this->abs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->abs(), output);
  }

  // .metamoto.messages.V2X.BrakeSystemStatus.StabilityControlStatus scs = 4;
  if (this->scs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->scs(), output);
  }

  // .metamoto.messages.V2X.BrakeSystemStatus.BrakeBoostApplied brake_boost = 5;
  if (this->brake_boost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->brake_boost(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.messages.V2X.BrakeSystemStatus)
}

::google::protobuf::uint8* V2X_BrakeSystemStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.messages.V2X.BrakeSystemStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .metamoto.messages.V2X.BrakeSystemStatus.BrakeAppliedStatus wheel_brakes = 1;
  if (this->has_wheel_brakes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_wheel_brakes(), deterministic, target);
  }

  // .metamoto.messages.V2X.BrakeSystemStatus.TractionControlState traction = 2;
  if (this->traction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->traction(), target);
  }

  // .metamoto.messages.V2X.BrakeSystemStatus.AntiLockBrakeStatus abs = 3;
  if (this->abs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->abs(), target);
  }

  // .metamoto.messages.V2X.BrakeSystemStatus.StabilityControlStatus scs = 4;
  if (this->scs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->scs(), target);
  }

  // .metamoto.messages.V2X.BrakeSystemStatus.BrakeBoostApplied brake_boost = 5;
  if (this->brake_boost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->brake_boost(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.messages.V2X.BrakeSystemStatus)
  return target;
}

size_t V2X_BrakeSystemStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.messages.V2X.BrakeSystemStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .metamoto.messages.V2X.BrakeSystemStatus.BrakeAppliedStatus wheel_brakes = 1;
  if (this->has_wheel_brakes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *wheel_brakes_);
  }

  // .metamoto.messages.V2X.BrakeSystemStatus.TractionControlState traction = 2;
  if (this->traction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->traction());
  }

  // .metamoto.messages.V2X.BrakeSystemStatus.AntiLockBrakeStatus abs = 3;
  if (this->abs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->abs());
  }

  // .metamoto.messages.V2X.BrakeSystemStatus.StabilityControlStatus scs = 4;
  if (this->scs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->scs());
  }

  // .metamoto.messages.V2X.BrakeSystemStatus.BrakeBoostApplied brake_boost = 5;
  if (this->brake_boost() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->brake_boost());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void V2X_BrakeSystemStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.messages.V2X.BrakeSystemStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const V2X_BrakeSystemStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const V2X_BrakeSystemStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.messages.V2X.BrakeSystemStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.messages.V2X.BrakeSystemStatus)
    MergeFrom(*source);
  }
}

void V2X_BrakeSystemStatus::MergeFrom(const V2X_BrakeSystemStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.messages.V2X.BrakeSystemStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_wheel_brakes()) {
    mutable_wheel_brakes()->::metamoto::messages::V2X_BrakeSystemStatus_BrakeAppliedStatus::MergeFrom(from.wheel_brakes());
  }
  if (from.traction() != 0) {
    set_traction(from.traction());
  }
  if (from.abs() != 0) {
    set_abs(from.abs());
  }
  if (from.scs() != 0) {
    set_scs(from.scs());
  }
  if (from.brake_boost() != 0) {
    set_brake_boost(from.brake_boost());
  }
}

void V2X_BrakeSystemStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.messages.V2X.BrakeSystemStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void V2X_BrakeSystemStatus::CopyFrom(const V2X_BrakeSystemStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.messages.V2X.BrakeSystemStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool V2X_BrakeSystemStatus::IsInitialized() const {
  return true;
}

void V2X_BrakeSystemStatus::Swap(V2X_BrakeSystemStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void V2X_BrakeSystemStatus::InternalSwap(V2X_BrakeSystemStatus* other) {
  using std::swap;
  swap(wheel_brakes_, other->wheel_brakes_);
  swap(traction_, other->traction_);
  swap(abs_, other->abs_);
  swap(scs_, other->scs_);
  swap(brake_boost_, other->brake_boost_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata V2X_BrakeSystemStatus::GetMetadata() const {
  protobuf_metamoto_2fmessages_2fv2x_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fmessages_2fv2x_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void V2X::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int V2X::kBsmPart1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

V2X::V2X()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metamoto_2fmessages_2fv2x_2eproto::scc_info_V2X.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metamoto.messages.V2X)
}
V2X::V2X(const V2X& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bsm_part_1_(from.bsm_part_1_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:metamoto.messages.V2X)
}

void V2X::SharedCtor() {
}

V2X::~V2X() {
  // @@protoc_insertion_point(destructor:metamoto.messages.V2X)
  SharedDtor();
}

void V2X::SharedDtor() {
}

void V2X::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* V2X::descriptor() {
  ::protobuf_metamoto_2fmessages_2fv2x_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fmessages_2fv2x_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const V2X& V2X::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metamoto_2fmessages_2fv2x_2eproto::scc_info_V2X.base);
  return *internal_default_instance();
}


void V2X::Clear() {
// @@protoc_insertion_point(message_clear_start:metamoto.messages.V2X)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bsm_part_1_.Clear();
  _internal_metadata_.Clear();
}

bool V2X::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metamoto.messages.V2X)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .metamoto.messages.V2X.BsmPart1 bsm_part_1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_bsm_part_1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metamoto.messages.V2X)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metamoto.messages.V2X)
  return false;
#undef DO_
}

void V2X::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metamoto.messages.V2X)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .metamoto.messages.V2X.BsmPart1 bsm_part_1 = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bsm_part_1_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->bsm_part_1(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:metamoto.messages.V2X)
}

::google::protobuf::uint8* V2X::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metamoto.messages.V2X)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .metamoto.messages.V2X.BsmPart1 bsm_part_1 = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bsm_part_1_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->bsm_part_1(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metamoto.messages.V2X)
  return target;
}

size_t V2X::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metamoto.messages.V2X)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .metamoto.messages.V2X.BsmPart1 bsm_part_1 = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->bsm_part_1_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bsm_part_1(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void V2X::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metamoto.messages.V2X)
  GOOGLE_DCHECK_NE(&from, this);
  const V2X* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const V2X>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metamoto.messages.V2X)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metamoto.messages.V2X)
    MergeFrom(*source);
  }
}

void V2X::MergeFrom(const V2X& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metamoto.messages.V2X)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bsm_part_1_.MergeFrom(from.bsm_part_1_);
}

void V2X::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metamoto.messages.V2X)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void V2X::CopyFrom(const V2X& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metamoto.messages.V2X)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool V2X::IsInitialized() const {
  return true;
}

void V2X::Swap(V2X* other) {
  if (other == this) return;
  InternalSwap(other);
}
void V2X::InternalSwap(V2X* other) {
  using std::swap;
  CastToBase(&bsm_part_1_)->InternalSwap(CastToBase(&other->bsm_part_1_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata V2X::GetMetadata() const {
  protobuf_metamoto_2fmessages_2fv2x_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metamoto_2fmessages_2fv2x_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace messages
}  // namespace metamoto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::messages::V2X_BsmPart1* Arena::CreateMaybeMessage< ::metamoto::messages::V2X_BsmPart1 >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::messages::V2X_BsmPart1 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::messages::V2X_PositionalAccuracy* Arena::CreateMaybeMessage< ::metamoto::messages::V2X_PositionalAccuracy >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::messages::V2X_PositionalAccuracy >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::messages::V2X_BrakeSystemStatus_BrakeAppliedStatus* Arena::CreateMaybeMessage< ::metamoto::messages::V2X_BrakeSystemStatus_BrakeAppliedStatus >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::messages::V2X_BrakeSystemStatus_BrakeAppliedStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::messages::V2X_BrakeSystemStatus* Arena::CreateMaybeMessage< ::metamoto::messages::V2X_BrakeSystemStatus >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::messages::V2X_BrakeSystemStatus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metamoto::messages::V2X* Arena::CreateMaybeMessage< ::metamoto::messages::V2X >(Arena* arena) {
  return Arena::CreateInternal< ::metamoto::messages::V2X >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
