// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metamoto/messages/perception.proto

#ifndef PROTOBUF_INCLUDED_metamoto_2fmessages_2fperception_2eproto
#define PROTOBUF_INCLUDED_metamoto_2fmessages_2fperception_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "metamoto/types/perception_object.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_metamoto_2fmessages_2fperception_2eproto 

namespace protobuf_metamoto_2fmessages_2fperception_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_metamoto_2fmessages_2fperception_2eproto
namespace metamoto {
namespace messages {
class Perception;
class PerceptionDefaultTypeInternal;
extern PerceptionDefaultTypeInternal _Perception_default_instance_;
}  // namespace messages
}  // namespace metamoto
namespace google {
namespace protobuf {
template<> ::metamoto::messages::Perception* Arena::CreateMaybeMessage<::metamoto::messages::Perception>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace metamoto {
namespace messages {

// ===================================================================

class Perception : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metamoto.messages.Perception) */ {
 public:
  Perception();
  virtual ~Perception();

  Perception(const Perception& from);

  inline Perception& operator=(const Perception& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Perception(Perception&& from) noexcept
    : Perception() {
    *this = ::std::move(from);
  }

  inline Perception& operator=(Perception&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Perception& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Perception* internal_default_instance() {
    return reinterpret_cast<const Perception*>(
               &_Perception_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Perception* other);
  friend void swap(Perception& a, Perception& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Perception* New() const final {
    return CreateMaybeMessage<Perception>(NULL);
  }

  Perception* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Perception>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Perception& from);
  void MergeFrom(const Perception& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Perception* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .metamoto.types.PerceptionObject objects = 1;
  int objects_size() const;
  void clear_objects();
  static const int kObjectsFieldNumber = 1;
  ::metamoto::types::PerceptionObject* mutable_objects(int index);
  ::google::protobuf::RepeatedPtrField< ::metamoto::types::PerceptionObject >*
      mutable_objects();
  const ::metamoto::types::PerceptionObject& objects(int index) const;
  ::metamoto::types::PerceptionObject* add_objects();
  const ::google::protobuf::RepeatedPtrField< ::metamoto::types::PerceptionObject >&
      objects() const;

  // @@protoc_insertion_point(class_scope:metamoto.messages.Perception)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::metamoto::types::PerceptionObject > objects_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_metamoto_2fmessages_2fperception_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Perception

// repeated .metamoto.types.PerceptionObject objects = 1;
inline int Perception::objects_size() const {
  return objects_.size();
}
inline ::metamoto::types::PerceptionObject* Perception::mutable_objects(int index) {
  // @@protoc_insertion_point(field_mutable:metamoto.messages.Perception.objects)
  return objects_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::metamoto::types::PerceptionObject >*
Perception::mutable_objects() {
  // @@protoc_insertion_point(field_mutable_list:metamoto.messages.Perception.objects)
  return &objects_;
}
inline const ::metamoto::types::PerceptionObject& Perception::objects(int index) const {
  // @@protoc_insertion_point(field_get:metamoto.messages.Perception.objects)
  return objects_.Get(index);
}
inline ::metamoto::types::PerceptionObject* Perception::add_objects() {
  // @@protoc_insertion_point(field_add:metamoto.messages.Perception.objects)
  return objects_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::metamoto::types::PerceptionObject >&
Perception::objects() const {
  // @@protoc_insertion_point(field_list:metamoto.messages.Perception.objects)
  return objects_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace messages
}  // namespace metamoto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_metamoto_2fmessages_2fperception_2eproto
