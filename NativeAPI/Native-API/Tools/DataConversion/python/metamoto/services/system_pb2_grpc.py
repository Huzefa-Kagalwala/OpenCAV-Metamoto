# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from metamoto.services import system_pb2 as metamoto_dot_services_dot_system__pb2


class SystemStub(object):
  """System service
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetResultsSize = channel.unary_unary(
        '/metamoto.services.System/GetResultsSize',
        request_serializer=metamoto_dot_services_dot_system__pb2.SystemGetResultsSizeRequest.SerializeToString,
        response_deserializer=metamoto_dot_services_dot_system__pb2.SystemGetResultsSizeReply.FromString,
        )


class SystemServicer(object):
  """System service
  """

  def GetResultsSize(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SystemServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetResultsSize': grpc.unary_unary_rpc_method_handler(
          servicer.GetResultsSize,
          request_deserializer=metamoto_dot_services_dot_system__pb2.SystemGetResultsSizeRequest.FromString,
          response_serializer=metamoto_dot_services_dot_system__pb2.SystemGetResultsSizeReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'metamoto.services.System', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
