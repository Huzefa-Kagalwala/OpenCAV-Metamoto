# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from metamoto.services import sut_connector_pb2 as metamoto_dot_services_dot_sut__connector__pb2


class SUTConnectorStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Connect = channel.stream_stream(
        '/metamoto.services.SUTConnector/Connect',
        request_serializer=metamoto_dot_services_dot_sut__connector__pb2.SUTConnectorRequest.SerializeToString,
        response_deserializer=metamoto_dot_services_dot_sut__connector__pb2.SUTConnectorReply.FromString,
        )
    self.Heartbeat = channel.unary_unary(
        '/metamoto.services.SUTConnector/Heartbeat',
        request_serializer=metamoto_dot_services_dot_sut__connector__pb2.SUTConnectorHeartbeatRequest.SerializeToString,
        response_deserializer=metamoto_dot_services_dot_sut__connector__pb2.SUTConnectorHeartbeatReply.FromString,
        )


class SUTConnectorServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Connect(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Heartbeat(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SUTConnectorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Connect': grpc.stream_stream_rpc_method_handler(
          servicer.Connect,
          request_deserializer=metamoto_dot_services_dot_sut__connector__pb2.SUTConnectorRequest.FromString,
          response_serializer=metamoto_dot_services_dot_sut__connector__pb2.SUTConnectorReply.SerializeToString,
      ),
      'Heartbeat': grpc.unary_unary_rpc_method_handler(
          servicer.Heartbeat,
          request_deserializer=metamoto_dot_services_dot_sut__connector__pb2.SUTConnectorHeartbeatRequest.FromString,
          response_serializer=metamoto_dot_services_dot_sut__connector__pb2.SUTConnectorHeartbeatReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'metamoto.services.SUTConnector', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class SUTConnectorQueryStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetConnectedSUTs = channel.unary_unary(
        '/metamoto.services.SUTConnectorQuery/GetConnectedSUTs',
        request_serializer=metamoto_dot_services_dot_sut__connector__pb2.SUTConnectorQueryGetConnectedSUTsRequest.SerializeToString,
        response_deserializer=metamoto_dot_services_dot_sut__connector__pb2.SUTConnectorQueryGetConnectedSUTsReply.FromString,
        )


class SUTConnectorQueryServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetConnectedSUTs(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SUTConnectorQueryServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetConnectedSUTs': grpc.unary_unary_rpc_method_handler(
          servicer.GetConnectedSUTs,
          request_deserializer=metamoto_dot_services_dot_sut__connector__pb2.SUTConnectorQueryGetConnectedSUTsRequest.FromString,
          response_serializer=metamoto_dot_services_dot_sut__connector__pb2.SUTConnectorQueryGetConnectedSUTsReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'metamoto.services.SUTConnectorQuery', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
