# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from metamoto.services import reporting_pb2 as metamoto_dot_services_dot_reporting__pb2


class ReportingStub(object):
  """Logging and reporting service for SUTs.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.AddTimeSeriesValue = channel.unary_unary(
        '/metamoto.services.Reporting/AddTimeSeriesValue',
        request_serializer=metamoto_dot_services_dot_reporting__pb2.ReportingAddTimeSeriesValueRequest.SerializeToString,
        response_deserializer=metamoto_dot_services_dot_reporting__pb2.ReportingAddTimeSeriesValueReply.FromString,
        )
    self.Log = channel.unary_unary(
        '/metamoto.services.Reporting/Log',
        request_serializer=metamoto_dot_services_dot_reporting__pb2.ReportingLogRequest.SerializeToString,
        response_deserializer=metamoto_dot_services_dot_reporting__pb2.ReportingLogReply.FromString,
        )
    self.ReportEvent = channel.unary_unary(
        '/metamoto.services.Reporting/ReportEvent',
        request_serializer=metamoto_dot_services_dot_reporting__pb2.ReportingReportEventRequest.SerializeToString,
        response_deserializer=metamoto_dot_services_dot_reporting__pb2.ReportingReportEventReply.FromString,
        )
    self.Visualize = channel.unary_unary(
        '/metamoto.services.Reporting/Visualize',
        request_serializer=metamoto_dot_services_dot_reporting__pb2.ReportingVisualizeRequest.SerializeToString,
        response_deserializer=metamoto_dot_services_dot_reporting__pb2.ReportingVisualizeReply.FromString,
        )


class ReportingServicer(object):
  """Logging and reporting service for SUTs.
  """

  def AddTimeSeriesValue(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Log(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ReportEvent(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Visualize(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ReportingServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'AddTimeSeriesValue': grpc.unary_unary_rpc_method_handler(
          servicer.AddTimeSeriesValue,
          request_deserializer=metamoto_dot_services_dot_reporting__pb2.ReportingAddTimeSeriesValueRequest.FromString,
          response_serializer=metamoto_dot_services_dot_reporting__pb2.ReportingAddTimeSeriesValueReply.SerializeToString,
      ),
      'Log': grpc.unary_unary_rpc_method_handler(
          servicer.Log,
          request_deserializer=metamoto_dot_services_dot_reporting__pb2.ReportingLogRequest.FromString,
          response_serializer=metamoto_dot_services_dot_reporting__pb2.ReportingLogReply.SerializeToString,
      ),
      'ReportEvent': grpc.unary_unary_rpc_method_handler(
          servicer.ReportEvent,
          request_deserializer=metamoto_dot_services_dot_reporting__pb2.ReportingReportEventRequest.FromString,
          response_serializer=metamoto_dot_services_dot_reporting__pb2.ReportingReportEventReply.SerializeToString,
      ),
      'Visualize': grpc.unary_unary_rpc_method_handler(
          servicer.Visualize,
          request_deserializer=metamoto_dot_services_dot_reporting__pb2.ReportingVisualizeRequest.FromString,
          response_serializer=metamoto_dot_services_dot_reporting__pb2.ReportingVisualizeReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'metamoto.services.Reporting', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
